{"version":3,"sources":["ng://ngx-openmrs-formentry/form-entry/services/debug-mode.service.ts","ng://ngx-openmrs-formentry/form-entry/services/form-errors.service.ts","null","ng://ngx-openmrs-formentry/change-tracking/control-relation.ts","ng://ngx-openmrs-formentry/change-tracking/control-relations.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/hider-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-alerts/alert-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/disabler-helper.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-node.ts","ng://ngx-openmrs-formentry/form-entry/question-models/validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/js-expression-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/conditional-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/control-relations.factory.ts","ng://ngx-openmrs-formentry/form-entry/expression-runner/expression-runner.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-control.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-group.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-array.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-control-type.ts","ng://ngx-openmrs-formentry/form-entry/question-models/question-base.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-answered.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/future-date-restriction.validator.ts","ng://ngx-openmrs-formentry/form-entry/helpers/js-expression-helper.ts","ng://ngx-openmrs-formentry/form-entry/validators/validations.ts","ng://ngx-openmrs-formentry/form-entry/validators/js-expression.validator.ts","ng://ngx-openmrs-formentry/form-entry/utils/messages.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/validation.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/hiders-disablers.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/show-messages.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-control.service.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.css.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/data-sources.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/error-renderer/error-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-field-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/directives/historical-value-directive.ts","ng://ngx-openmrs-formentry/components/select/select.component.style.ts","ng://ngx-openmrs-formentry/components/select/option.ts","ng://ngx-openmrs-formentry/components/select/diacritics.ts","ng://ngx-openmrs-formentry/components/select/option-list.ts","ng://ngx-openmrs-formentry/components/select/select.component.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.style.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.ts","ng://ngx-openmrs-formentry/components/select/select.module.ts","ng://ngx-openmrs-formentry/components/file-upload/secure.pipe.ts","ng://ngx-openmrs-formentry/shared.module.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.component.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.module.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-picker/date-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/time-picker/time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/picker-modal/modal.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/pipes/moment.pipe.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.module.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-option.ts","ng://ngx-openmrs-formentry/components/afe-ng-select.component.ts","ng://ngx-openmrs-formentry/form-entry/services/form-schema-compiler.service.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-area-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/ui-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/multi-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/interfaces/nested-questions.ts","ng://ngx-openmrs-formentry/form-entry/question-models/group-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/repeating-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/checkbox.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/file-upload-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/test-order-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/max-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/min-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/dummy-data-source.ts","ng://ngx-openmrs-formentry/form-entry/services/historical-encounter-data.service.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-expression-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/question.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.factory.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs-adapter-helper.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/order.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/encounter.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/person-attribute.adapter.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.component.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.module.ts","ng://ngx-openmrs-formentry/components/appointments-overview/appointments-overview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.service.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-view/encounter-viewer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-pdf-viewer.service.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-container/encounter-container.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/question-control.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/file-preview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/remote-answer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.module.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.component.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.module.ts","ng://ngx-openmrs-formentry/form-entry/form-entry.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/pair.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/rendering-type.ts"],"names":["DebugModeService","this","cookieKey","prototype","debugEnabled","Injectable","FormErrorsService","announceErrorFieldSource","Subject","announceErrorField$","asObservable","announceErrorField","error","next","control","tab","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__values","o","m","Symbol","iterator","i","call","length","value","done","ControlRelation","relatedTo","_control","_relatedTo","_registerForChangesFromRelatedControl","defineProperty","_lastUpdateValue","updateControlBasedOnRelation","newValue","updateCalculatedValue","updateValueAndValidity","updateHiddenState","updateDisabledState","updateAlert","_this","valueChanges","subscribe","ControlRelations","relationFor","_otherRelations","_relationFor","_relations","addRelatedControls","AbstractControl","relations","push","HiderHelper","hideControl","hidden","disable","showControl","setHiderForControl","hider","hiders","clearHidersForControl","splice","evaluateControlHiders","hiddenValue","forEach","reEvaluateHidingExpression","toHide","setUpReEvaluationWhenValueChanges","val","AlertHelper","hideAlert","shown","showAlert","setAlertsForControl","alert","alerts","clearAlertsForControl","evaluateControlAlerts","messageValue","message","reEvaluateAlertExpression","alertMessage","DisablerHelper","setDisablerForControl","disabler","disablers","clearDisablersForControl","evaluateControlDisablers","toDisable","reEvaluateDisablingExpression","enable","NodeBase","question","form","parentPath","_questionModel","_form","_path","key","removeAt","index","createChildNode","removeChildNode","LeafNode","_super","parentControl","tslib_1.__extends","GroupNode","_children","setChild","node","children","ArrayNode","formFactory","childNodeCreatedEvents","createChildFunc","g","fireChildNodeCreatedListener","removeChildFunc","addChildNodeCreatedListener","func","ValidationModel","validations","type","JsExpressionValidationModel","failsWhenExpression","ConditionalValidationModel","referenceQuestionId","referenceQuestionAnswers","ControlRelationsFactory","buildRelations","rootNode","controlsStore","mapControlIds","nodeBase","setRelations","buildArrayNodeRelations","rootControlsStore","arrayControlStore","child","questionBase","id","createRelationsToArrayControls","rChild","parentNodePath","path","substring","lastIndexOf","indexOf","aChild","aChildId","this_1","hasRelation","nodes","searchNodeByPath","an","rootControl_1","controlRelations","otherRelations","addValueChangeListener","getRelationsForControl","nodeBaseArray","searchNodeByQuestionId","controlList","addRelationToControl","required","validators","element","hide","field","calculateExpression","related","moment","moment_","ExpressionRunner","getRunnable","expression","helper","dataDependencies","runner","runnable","run","scope","uuid","window","getControlRelationValueString","getHelperMethods","getDataDependencies","dataSourcesContainer","dataSources","paramList","argList","funcDeclarationCode","funcCallCode","keys","console","warn","eval","e","relation","relatedAsControl","isArray","arrayNode","uuid_1","controlRelationsFactory_1","relationsForControl_1","concat","setControlArrayValues","relationsForControl","_getFormControlKeys","values","_getValuesForKey","array","obj","AfeFormControl","formState","validator","asyncValidator","hiderHelper","disablerHelper","_controlRelations","_previousValue","fireValueChangeListener","param","setValue","show","setHidingFn","newHider","setCalculatorFn","newCalculator","calculator","_val","clearHidingFns","setDisablingFn","newDisabler","clearDisablingFns","setAlertFn","clearMessageFns","_valueChangeListener","FormControl","AfeFormGroup","controls","FormGroup","AfeFormArray","_uuid","FormArray","None","QuestionBase","options","defaultValue","originalValue","extras","renderingType","label","historicalDataValue","setHistoricalValue","v","enableHistoricalValue","showHistoricalEncounterDate","showHistoricalValueDate","undefined","ConditionalRequiredValidator","validate","model","isRequired","relationValue","conditional_required","ConditionalAnsweredValidator","successCondition","conditional_answered","RequiredValidator","DateValidator","test","Date","toString","date","MinValidator","min","requiredValue","actualValue","MaxValidator","max","MinDateValidator","mindate","requiredDate","newDate","getTime","actualDate","MaxDateValidator","maxdate","FutureDateRestrictionValidator","now","futureDateRestriction","JsExpressionHelper","calcBMI","height","weight","r","toFixed","parseFloat","calcBMIForAgeZscore","bmiForAgeRef","bmi","formattedSDValue","refSectionObject","_.first","refObjectValues","map","x","refObjectKeys","minimumValue","minReferencePoint_1","_.forEach","lastReferenceValue_1","_.last","_.findIndex","replace","includes","calcWeightForHeightZscore","weightForHeightRef","refSection","_.filter","refObject","minReferencePoint_2","lastReferenceValue_2","calcHeightForAgeZscore","heightForAgeRef","minReferencePoint_3","lastReferenceValue_3","isEmpty","arrayContains","members","contains","extractRepeatingGroupValues","item","formatDate","format","offset","Error","arrayContainsAny","Validations","JSExpressionValidatorsEnabled","JsExpressionValidator","helperFunctions","js_expression","Messages","REQUIRED_FIELD_MSG","INVALID_DATE_MSG","FUTURE_DATE_RESTRICTION_MSG","MIN_LENGTH_MSG","MAX_LENGTH_MSG","MAX_DATE_MSG","MIN_DATE_MSG","MAX_MSG","MIN_MSG","ValidationFactory","getValidators","list","dateValidator","allowFutureDates","futureDateRestrictionValidator","jsExpressionValidator","getMaxValueValidator","getMinValueValidator","conditionalRequiredValidator","conditionalAnsweredValidator","requiredValidator","Validators","minLength","maxLength","errors","messages","property","minlength","requiredLength","maxlength","HidersDisablersFactory","expressionRunner","expressionHelper","_debugModeService","getJsExpressionDisabler","disableWhenExpression","result","getJsExpressionHider","convertHideObjectToString","hideWhenExpression","join","AlertsFactory","getJsExpressionshowAlert","alertWhenExpression","FormControlService","validationFactory","hidersDisablersFactory","alertsFactory","generateControlModel","questionModel","generateChildren","controlType","AfeControlType","generateFormArray","generateFormGroupModel","generateFormControl","formGroup","wireHidersDisablers","wireAlerts","setControl","asGroup","questions","_generateFormGroupChildrenModel","generated","addControl","formArray","wireCalculator","alert_1","dataSource","DEFAULT_STYLES","DataSources","_dataSources","registerDataSource","unWrap","log","clearDataSource","FormRendererComponent","formErrorsService","document","childComponents","isCollapsed","activeTab","ngOnInit","setUpRemoteSelect","setUpFileUpload","valueProcessingInfo","lastFormTab","scrollToControl","isExpanded","parentComponent","addChildComponent","dataSourceOptions","checkSection","groupChildrenHidden_1","every","k","innerNode","clickTab","tabNumber","loadPreviousTab","isCurrentTabFirst","body","scrollTop","isCurrentTabLast","loadNextTab","tabSelected","$event","setPreviousTab","hasErrors","touched","valid","getErrors","split","elSelector","tabComponent","setTimeout","section","getElementById","focus","scrollIntoView","behavior","block","onDateChanged","upload","event","toggleInformation","infoId","style","display","Component","args","selector","template","styles","Inject","DOCUMENT","Input","ErrorRendererComponent","showErrors","markInvalidControls","getControlError","errorNode","pageIndex","getPageIndex","HistoricalFieldHelperService","getDisplayTextFromOptions","valueProperty","displayProperty","displayText","historicalValue","_.isArray","valueConverted_1","_.each","option","HistoricalValueDirective","historicalFieldHelper","_nodeChange","EventEmitter","target","name","_node","compareString","stopPropagation","emit","a","_.isUndefined","text","_date","valueDate","Directive","Output","HostListener","STYLE","Option","disabled","highlighted","selected","undecoratedCopy","Diacritics","strip","DIACRITICS","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","OptionList","_highlightedOption","_options","highlight","equalValues","v0","v1","slice","sort","getOptionsByValue","filter","selection","selectedOption","select","multiple","clearSelection","deselect","term","trim","resetFilter","l","toUpperCase","t","hasShownSelected","getFirstShownSelected","getFirstShown","highlightOption","clearHighlightedOption","highlightNextOption","shownOptions","filtered","getHighlightedIndexFromList","highlightPreviousOption","highlightedOption","getHighlightedIndex","hasShown","some","hasSelected","_a","tslib_1.__values","_b","SELECT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","SelectComponent","multi","KEYS","BACKSPACE","TAB","ENTER","ESC","SPACE","UP","DOWN","allowClear","highlightColor","highlightTextColor","noFilter","notFoundMsg","placeholder","opened","closed","deselected","typed","_value","filterEnabled","filterInputWidth","hasFocus","isBelow","isDisabled","isOpen","placeholderView","clearClicked","selectContainerClicked","onChange","_","onTouched","ngAfterViewInit","updateFilterWidth","ngOnChanges","changes","updateOptionsList","isFirstChange","numOptions","optionList","minNumOptions","currentValue","onWindowClick","closeDropdown","onWindowResize","updateWidth","onSelectContainerClick","toggleDropdown","onSelectContainerFocus","onSelectContainerKeydown","handleSelectContainerKeydown","onDropdownOptionClicked","toggleSelectOption","selectOption","onDropdownClose","onSingleFilterClick","onSingleFilterInput","onSingleFilterKeydown","handleSingleFilterKeydown","onMultipleFilterInput","openDropdown","onMultipleFilterKeydown","handleMultipleFilterKeydown","onClearSelectionClick","onDeselectOptionClick","deselectOption","open","close","clear","valueChanged","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","TypeError","firstTime","updatePosition","filterInput","nativeElement","clearFilterInput","dropdown","moveHighlightedIntoView","selectHighlightedOption","deselectLast","sel","setMultipleFilterInput","which","altKey","preventDefault","selectionSpan","blur","width","offsetWidth","left","offsetLeft","top","offsetTop","offsetHeight","providers","encapsulation","ViewEncapsulation","ViewChild","SelectDropdownComponent","optionClicked","singleFilterClick","singleFilterInput","singleFilterKeydown","disabledColor","disabledTextColor","optionsReset","onOptionsWheel","handleOptionsWheel","onOptionMouseover","onOptionClick","getOptionStyle","background-color","color","optionsList","listHeight","itemIndex","itemHeight","itemTop","itemBottom","viewTop","div","atTop","atBottom","scrollHeight","deltaY","SelectModule","NgModule","declarations","exports","imports","CommonModule","FormsModule","SecurePipe","_ref","sanitizer","_latestValue","_latestReturnedValue","_subscription","_obj","_result","BehaviorSubject","_internalSubscription","ngOnDestroy","_dispose","transform","url","getfile","internalTransform","asyncTrasnform","previousUrl","sanitized","bypassSecurityTrustUrl","WrappedValue","wrap","_subscribe","_updateLatestValue","unsubscribe","async","markForCheck","Pipe","pure","ChangeDetectorRef","DomSanitizer","SharedModule","RemoteFileUploadComponent","renderer","uploading","innerValue","propagateChange","_dataSource","onFileChange","fileList","fileList_1","fileList_1_1","file","data","fileUpload","image","clearValue","Renderer2","RemoteFileUploadModule","NgxFileUploaderModule","DatePickerComponent","locale","viewFormat","returnObject","onDatePickerCancel","onSelectDate","onDisplayMonths","onDisplayYears","displayYearsIndex","monthsShort","initValue","fullYearRange","currentYear","calendarDate","clone","startOf","year","displayYearRange","generateCalendar","prev","subtract","showMonthSelection","showYearSelection","add","selectDay","day","daysDifference","diff","selectedDay","parseToReturnObjectType","cancelDatePicker","selectMonth","month","selectYear","selectToday","today","clearPickDate","generateYears","years","_.chunk","currentMonth","dayNames","weekdaysShort","initDate","selectedDate","calendarDays","start","localeData","firstDayOfWeek","end","toDate","toJSON","toArray","toISOString","toObject","TimePickerComponent","showSecond","use12Hour","onSelectTime","onTimePickerCancel","hourFormat","time","initTime","increaseHour","decreaseHour","increaseMinute","decreaseMinute","increaseSecond","decreaseSecond","selectTime","cancelTimePicker","selectNow","clearTime","ModalComponent","onOverlayClick","closeModal","changeDetection","ChangeDetectionStrategy","OnPush","animations","MomentPipe","Moment","DateTimePickerComponent","showDate","showTime","showWeeks","weeks","onDateChange","showDatePicker","showTimePicker","weeksSelected","count","nextDate","setDate","getDate","setTime","toggleDatePicker","status","toggleTimePicker","modelValue","DateTimePickerModule","MY_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NgxDateTimePickerComponent","selectedTime","loadInitial","onTimeSelect","setDateTime","onDateSelect","dateString","setCurrentTime","currentTime","weekSelect","dateToUse","nextWeekDate","nextWeekTime","selectionChange","getWeekPickerCssClass","getDatePickerCssClass","getTimePickerCssClass","newTime","newDateTime","dateTimeString","MAT_DATE_FORMATS","useValue","DateAdapter","useClass","MomentDateAdapter","NgxDateTimePickerModule","ReactiveFormsModule","MatDatepickerModule","MatFormFieldModule","MatNativeDateModule","MatInputModule","MatSelectModule","Option$1","AfeNgSelectComponent","question_options","getChangingText","getData","resolveSelectedOption","selected_question_option","searchText","subject","searchOptions","mappedOptions","onValueChange","subjectOption","resolveSelectedValue","resetOptions","FormSchemaCompiler","compileFormSchema","formSchema","referencedComponents","refForms","getReferencedForms","_.isEmpty","placeHolders","getAllPlaceholderObjects","replaceAllPlaceholdersWithActualObjects","findSchemaByName","schemaArray","nameOfSchema","foundSchema","schema","getPageInSchemaByLabel","pageLabel","foundPage","pages","page","getSectionInSchemaByPageLabelBySectionLabel","sectionLabel","foundSection","sections","getQuestionByIdInSchema","questionId","isQuestionObjectWithId","isSchemaSubObjectExpandable","toExpand","getQuestionsArrayByQuestionIdInSchema","getQuestionsArrayByQuestionId","parent","object","returnedValue","objectKeys","_.includes","referencedObjects","extractPlaceholderObjects","subSchema","objectsArray","reference","fillPlaceholderObject","placeHolderObject","referenceObject","member","keyValReferencedForms","placeHoldersArray","placeHolder","referencedObject","getReferencedObject","removeExcludedQuestionsFromPlaceholder","removeObjectFromArray","indexOfObject","excludeQuestions","excludedQuestionId","questionsArray","referenceData","formSchemasLookupArray","referencedForms","alias","formName","TextInputQuestion","TextAreaInputQuestion","rows","SelectQuestion","UiSelectQuestion","DateQuestion","showWeeksAdder","MultiSelectQuestion","NestedQuestion","QuestionGroup","RepeatingQuestion","CheckBoxQuestion","FileUploadQuestion","TestOrderQuestion","orderType","selectableOrders","orderSettingUuid","rendering","DateValidationModel","MaxValidationModel","MinValidationModel","DummyDataSource","returnErrorOnNext","selectOptions","sampleData","concept","of","fetchFile","HistoricalEncounterDataService","registerEncounters","encounters","encStore","getValue","pathArray","getFirstValue","getAllObjects","getSingleObject","group_1","encounter","_transformEncounter","_.sortBy","reverse","putObject","getObject","answers","getAllValues","encounterDatetime","_.isNil","newpath","childObject","prevEncounter","location","patient","encounterType","provider","obs","processedObs","_transformObs","_.extend","obsRep","singleObs","_augumentObs","groupMembers","group_2","existing","toAdd","_.has","temp","apply","HistoricalHelperService","evaluate","expr","additionalScopevalues","HD","deps","evaluatePrecondition","additionalScope","histValue","QuestionFactory","historicalHelperService","createQuestionModel","toFormQuestionModel","toSelectQuestion","schemaQuestion","questionOptions","addValidators","copyProperties","addDisableOrHideProperty","addAlertProperty","addHistoricalExpressions","addCalculatorProperty","toNumericQuestion","toNumberQuestion","toDateQuestion","toEncounterDatetimeQuestion","weeksList","toCheckBoxQuestion","toMultiCheckboxQuestion","renderType","toTextAreaQuestion","toTextQuestion","toFileUploadQuestion","toDrugQuestion","toProblemQuestion","toConceptAnswerSelect","toRepeatingQuestion","getChildrenQuestionModels","testOrder","toTestOrderQuestion","orders","toGroupQuestion","toPageQuestion","toSectionQuestion","getSchemaQuestions","toPersonAttributeQuestion","searchFunction","resolveFunction","toEncounterProviderQuestion","toFieldSetQuestion","toReturn","toEncounterLocationQuestion","listQuestions","getQuestions","foundArray","toModel","generateId","convertOldVersionComplexObsQuestionToNewVersion","converted","mainField","JSON","stringify","shownDateOptions","obsField","dateField","dateOptions","assign","mappings","source","destination","historicalExpression","origValue","historicalPrepopulateCondition","historicalPrepopulate","valDate","differenceInDays","Number","isInteger","allowedHistoricalValueAgeInDays","calculate","s","Math","random","floor","String","fromCharCode","Form","questionFactory","existingOrders","_showErrors","_dataSourcesContainer","found","aChildNode","questionType","searchNodeByQuestionType","findNodesByQuestionId","nodeAsGroup","results","invalidControlNodes","c","markAsTouched","groupNode","updateHiddenDisabledStateForAllControls","_updateHiddenDisabledStateForAllControls","updateAlertsForAllControls","_updateAlertsForAllControls","FormFactory","controlService","questionFactroy","controlRelationsFactory","hd","createForm","createNode","parentNode","createArrayNode","createGroupNode","createLeafNode","controlModel","createNodeChildren","createArrayNodeChild","removeArrayNodeChild","factory","groupQuestion","group","nodeControl","nodeToRemove","controlIndexToRemove","ObsAdapterHelper","findObsAnswerToQuestion","obsArray","isObsNode","childQuestionsUuids","getChildQuestionsConceptUuids","isSubsetOf","getGroupMembersConceptUuids","obsWithGroupMembers","supersetArray","subsetArray","setSimpleObsNodeValue","obsToUse","initialValue","setNodeFormControlValue","setMultiselectObsNodeValue","obsUuids","obs_1","obs_1_1","setComplexObsNodeValue","valueField","setNodeValue","obsDatetime","setGroupObsNodeValue","setRepeatingGroupObsNodeValue","createdNode","getObsNodeType","answeringObs","multiselectObs","complexObs","groupObs","repeatingGroupObs","getSimpleObsPayload","voided","simpleNodeValueChanged","toOpenMrsDateTimeString","getComplexObsPayload","valuePayload","getObsNodePayload","areDatesEqual","payload","getMultiselectObsPayload","existingUuids","getGroupPayload","childrenPayload","groupPayload","getRepeatingGroupPayload","nodeAsArray","groupsUuidsAfterEditting","voidedGroup","groupNodePayoad","arrayNodePayload","simpleObs","groupedObs","repeatingGroupedObs","date1","date2","isSame","datetime","ObsValueAdapter","generateFormPayload","populateForm","setValues","forcegroup","setObsValue","_.find","setComplexObsValue","setRepeatingGroupValues","nodes_1","nodes_1_1","obsUuid","multiObs","getMultiselectValues","multiObs_1","multiObs_1_1","groupRepeatingObs","intersect","schemaQuestions","_.intersection","groups","getQuestionNodes","arrays","pages_1","pages_1_1","repeatingGroup","nodes_2","nodes_2_1","traverse","processGroup","obsPayload","getObsPayload","mappedMembers","Boolean","mapInitialGroup","current","mapModelGroup","processRepeatingGroups","initialValues","repeatingModel","_d","_e","deleted","leftOuterJoinArrays","newObs","groupConcept","newObsPayload","deletedObs","createGroupDeletedObs","deletedObs_1","deletedObs_1_1","createGroupNewObs","newObsPayload_1","newObsPayload_1_1","first","second","obj2","_.isEqual","newPayload","payload_1","payload_1_1","payload_2","payload_2_1","getExactTime","processObs","obsValue","multis","processMultiSelect","mappedInitial","mappedCurrent","processDeletedMultiSelectObs","processNewMultiSelectObs","updateOrVoidObs","processComplexObs","createdPayload","values_1","values_1_1","values_2","values_2_1","qs","rep","multiSelectObs","values_3","values_3_1","isObs","nodes_3","nodes_3_1","OrderValueAdapter","formOrderNodes","_setOrderProvider","_findTestOrderQuestionNodes","_createOrdersPayload","_getExistingOrders","_setOrderValues","providerUuid","orderNodes","deletedOrders","selectedOrders","orderNode","orderNodeValues","order","orderValue","payloadOrder","_createPayloadOrder","orderNumber","orderNodes_1","orderNodes_1_1","_getDeletedOrders","_addDeletedOrdersToPayload","orderUuid","dateVoided","auditInfo","orderNodes_2","orderNodes_2_1","_setOrderNodeValues","orderConcept","quesitonExtras","orderer","careSetting","deleteOrders","existingOrderConcept","orders_1","orders_1_1","childNode","formNode","EncounterAdapter","ordersAdapter","obsAdapter","populateNode","getEncounterNodes","firstProvider_1","generateNodePayload","setNonFilledPayloadMembers","dateValue","utcOffset","encounterRole","_getEncounterNodes","patientUuid","setPayloadPatientUuid","visitUuid","setPayloadVisitUuid","encounterTypeUuid","setPayloadEncounterTypeUuid","formUuid","setPayloadFormUuid","encounterUuid","setPayloadEncounterUuid","_isEncounterNode","PersonAttribuAdapter","getPersonAttributeNodes","isSimpleValue","attributeType","hydratedObject","_getPersonAttributesNodes","RemoteSelectComponent","items","loading","characters","change","dataFromSourceChanged","subscribeToDataSourceDataChanges","restoreSelectedValue","selectC","search","_.map","_.clone","_.uniqBy","canSearch","removed","RemoteSelectModule","AppointmentsOverviewComponent","showAppointments","loadingAppointments","errorLoadingAppointments","appointmentsLoaded","appointments","resetProperties","monthlyScheduleResourceService","locationUuid","userLocation","startDate","endDate","endOf","_data_1","programTypeParams","getMonthlySchedule","limit","locationUuids","programType","appointment","scheduled","EncounterViewerService","resolveSelectedValueFromSchema","answerUuid","answer","hasAnswer","answered","questionsAnswered","$answered","ans","isDate","convertTime","unixTimestamp","getFullYear","getMonth","hour","getHours","getMinutes","getSeconds","EncounterViewerComponent","encounterViewerService","_schema","enc","fileDataSource","remoteDataSource","customDataSource","questionAnswered","checkForColon","questionLabel","EncounterPdfViewerService","obsValueAdapter","subscribedAnswers","stack","getPages","remoteSelectsOnly","remoteAns","content","remoteQuestions","getSections","table","widths","headerRows","keepWithHeaderRows","layout","margin","hLineWidth","vLineWidth","hLineColor","vLineColor","resolve","answeredSections","answeredSections_1","answeredSections_1_1","getRemoteSectionData","answeredSections_2","answeredSections_2_1","getSectionData","appendResolvedAnswer","resolvedAnswer","bold","section_1","section_1_1","remoteAns_1","remoteAns_1_1","resolveValue","section_2","section_2_1","arrayElement","isUuid","arr_1","elem","generatePdfDefinition","docDefinition$","remoteSelects","combineLatest","docDefinition","pageSize","fontSize","banner","bannerItem","bannerLabel","confidential","footer","alignment","header","pageNumber","tableExample","tableHeader","fillColor","borderColor","tableSubheader","timestamp","defaultStyle","displayPdf","pdf","pdfMake","vfs","pdfFonts.pdfMake","titleize","nid","birthdate","age","mui","mhn","currentPage","pageCount","toUTCString","win","createPdf","ISO_8601","isValid","str","charAt","substr","toLowerCase","providedIn","EncounterContainerComponent","encAdapter","encounterPdfViewerService","$form","$enc","QuestionControlComponent","el","_.isNumber","noop","FilePreviewComponent","encounterService","onTouchedCallback","onChangeCallback","onBlur","RemoteAnswerComponent","EncounterViewerModule","HttpModule","CheckboxControlComponent","selectOpt","checked","CheckboxModule","FormEntryModule","CollapseModule","MatIconModule","MatTabsModule","MatCardModule","TimeAgoPipe","FormBuilder","Pair","Page","Section","Select","DropDown"],"mappings":"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","sourcesContent":["/*\r\nThis service checks if the debug mode on ng2-amrs\r\nhas been enabled by checking cookies.\r\nIf the debug mode has been enabled then\r\nit returns true and all fields are displayed\r\nfor use by testers\r\n*/\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\n\r\nexport class DebugModeService {\r\n\r\n    public cookieKey = 'formDebug';\r\n\r\n    constructor() {\r\n    }\r\n   public debugEnabled(): boolean {\r\n\r\n             // check if the hidefield\r\n            return false;\r\n     }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { AfeFormControl } from '../../public_api';\r\nimport { AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\r\n\r\n@Injectable()\r\nexport class FormErrorsService {\r\n\r\n  // Observable string sources\r\n  public static control: AfeFormControl | AfeFormArray | AfeFormGroup  = null;\r\n  public static tab: number = null;\r\n  public announceErrorFieldSource = new Subject<string>();\r\n  public announceErrorField$: Observable<any> = this.announceErrorFieldSource.asObservable();\r\n  public announceErrorField(error: string) {\r\n    this.announceErrorFieldSource.next(error);\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\n// import { CanHide } from '../form-entry/control-hiders-disablers/can-hide';\r\n// import { CanDisable } from '../form-entry/control-hiders-disablers/can-disable';\r\n\r\nexport class ControlRelation {\r\n    private _control: AbstractControl;\r\n    private _relatedTo: AbstractControl;\r\n    private _lastUpdateValue: any;\r\n\r\n    constructor(control: AbstractControl, relatedTo: AbstractControl) {\r\n        this._control = control;\r\n        this._relatedTo = relatedTo;\r\n        this._registerForChangesFromRelatedControl();\r\n    }\r\n\r\n    get control(): AbstractControl {\r\n        return this._control;\r\n    }\r\n\r\n    get relatedTo(): AbstractControl {\r\n        return this._relatedTo;\r\n    }\r\n\r\n    get lastUpdateValue(): any {\r\n        return this._lastUpdateValue;\r\n    }\r\n\r\n    updateControlBasedOnRelation(newValue: any): boolean {\r\n        if (newValue !== this._lastUpdateValue) {\r\n            this._lastUpdateValue = newValue;\r\n\r\n            if ((this._control as any).updateCalculatedValue) {\r\n              (this._control as any).updateCalculatedValue();\r\n            }\r\n\r\n            this._control.updateValueAndValidity();\r\n            if ((this._control as any).updateHiddenState) {\r\n                (this._control as any).updateHiddenState();\r\n            }\r\n\r\n            if ((this._control as any).updateDisabledState) {\r\n                (this._control as any).updateDisabledState();\r\n            }\r\n\r\n            if ((this._control as any).updateAlert) {\r\n                (this._control as any).updateAlert();\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _registerForChangesFromRelatedControl() {\r\n\r\n      this._relatedTo.valueChanges.subscribe((value) => {\r\n        this.updateControlBasedOnRelation(value);\r\n      });\r\n    }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nimport { ControlRelation } from './control-relation';\r\n\r\nexport class ControlRelations {\r\n\r\n    private _relationFor: AbstractControl;\r\n    private _relations: ControlRelation[];\r\n    private _otherRelations: any = [];\r\n\r\n    constructor(relationFor: AbstractControl, relatedTo?: AbstractControl | AbstractControl[]) {\r\n        this._relationFor = relationFor;\r\n        this._relations = [];\r\n\r\n        if (relatedTo) {\r\n            this.addRelatedControls(relatedTo);\r\n        }\r\n    }\r\n\r\n    get relationsFor(): AbstractControl {\r\n        return this._relationFor;\r\n    }\r\n\r\n    get relations(): ControlRelation[] {\r\n        return this._relations;\r\n    }\r\n\r\n    get otherRelations() {\r\n      return this._otherRelations;\r\n    }\r\n\r\n    addRelatedControls(relatedTo: AbstractControl | AbstractControl[]) {\r\n        if (relatedTo instanceof AbstractControl) {\r\n            this.relations.push(new ControlRelation(this._relationFor, relatedTo));\r\n        }\r\n\r\n        if (relatedTo instanceof Array) {\r\n            for (let i = 0; i < relatedTo.length; i++) {\r\n                this.relations.push(new ControlRelation(this._relationFor, relatedTo[i]));\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { CanHide, Hider } from './can-hide';\r\nexport class HiderHelper {\r\n\r\n    public hideControl(control: CanHide) {\r\n        control.hidden = true;\r\n        if (control.disable) {\r\n            control.disable();\r\n        }\r\n    }\r\n\r\n    public showControl(control: CanHide) {\r\n        control.hidden = false;\r\n    }\r\n\r\n    public setHiderForControl(control: CanHide, hider: Hider) {\r\n        control.hiders.push(hider);\r\n    }\r\n\r\n    public clearHidersForControl(control: CanHide) {\r\n        control.hiders.splice(0);\r\n        control.hidden = false;\r\n    }\r\n\r\n    public evaluateControlHiders(control: CanHide) {\r\n\r\n        let hiddenValue = false;\r\n        control.hiders.forEach(hider => {\r\n            hider.reEvaluateHidingExpression();\r\n            if (hider.toHide === true) {\r\n                hiddenValue = true;\r\n            }\r\n        });\r\n\r\n        control.hidden = hiddenValue;\r\n        if (control.hidden && control.disable) {\r\n            control.disable();\r\n            // control.setValue(null);\r\n        }\r\n    }\r\n\r\n    public setUpReEvaluationWhenValueChanges(control: CanHide) {\r\n        if (control.updateHiddenState) {\r\n            control.valueChanges.subscribe((val) => {\r\n                control.updateHiddenState();\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n","import { CanGenerateAlert, Alert } from './can-generate-alert';\r\nexport class AlertHelper {\r\n\r\n    public hideAlert(control: Alert) {\r\n        control.shown = false;\r\n    }\r\n\r\n    public showAlert(control: Alert) {\r\n        control.shown = true;\r\n    }\r\n\r\n    public setAlertsForControl(control: CanGenerateAlert, alert: Alert) {\r\n        control.alerts.push(alert);\r\n    }\r\n\r\n    public clearAlertsForControl(control: CanGenerateAlert) {\r\n        control.alerts.splice(0);\r\n        control.alert = '';\r\n    }\r\n\r\n    public evaluateControlAlerts(control: CanGenerateAlert) {\r\n        let messageValue = '';\r\n        control.alerts.forEach(message => {\r\n            message.reEvaluateAlertExpression();\r\n            if (message.shown === true) {\r\n                messageValue = message.alertMessage;\r\n            } else {\r\n                messageValue = '';\r\n            }\r\n        });\r\n\r\n        control.alert = messageValue;\r\n        // if (control.message && control.disable) {\r\n        //     control.disable();\r\n        //     // control.setValue(null);\r\n        // }\r\n    }\r\n\r\n    public setUpReEvaluationWhenValueChanges(control: CanGenerateAlert) {\r\n        if (control.updateAlert) {\r\n            control.valueChanges.subscribe((val) => {\r\n                control.updateAlert();\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n","import { CanDisable, Disabler } from './can-disable';\r\nexport class DisablerHelper {\r\n\r\n    public setDisablerForControl(control: CanDisable, disabler: Disabler) {\r\n        control.disablers.push(disabler);\r\n    }\r\n\r\n    public clearDisablersForControl(control: CanDisable) {\r\n        control.disablers.splice(0);\r\n        control.disable();\r\n    }\r\n\r\n    public evaluateControlDisablers(control: CanDisable) {\r\n        let toDisable = false;\r\n        control.disablers.forEach(hider => {\r\n            hider.reEvaluateDisablingExpression();\r\n            if (hider.toDisable === true) {\r\n                toDisable = true;\r\n            }\r\n        });\r\n\r\n        // console.log('Control', control);\r\n\r\n        if (toDisable) {\r\n            control.disable();\r\n        } else {\r\n            control.enable();\r\n        }\r\n    }\r\n\r\n    public setUpReEvaluationWhenValueChanges(control: CanDisable) {\r\n        if (control.updateDisabledState) {\r\n            control.valueChanges.subscribe((val) => {\r\n                control.updateDisabledState();\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nimport { FormFactory } from './form.factory';\r\nimport { Form } from './form';\r\n\r\n// import { AfeControlType, AfeFormArray, AfeFormGroup, AfeFormControl } from '../../abstract-controls-extension';\r\nimport { QuestionBase, RepeatingQuestion } from '../question-models/models';\r\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\r\nexport interface ChildNodeCreatedListener {\r\n\r\n    addChildNodeCreatedListener(func: any);\r\n\r\n    fireChildNodeCreatedListener(node: GroupNode);\r\n}\r\n\r\nexport type CreateArrayChildNodeFunction = (question: RepeatingQuestion, node: ArrayNode, factory?: FormFactory) => GroupNode;\r\n\r\nexport interface RemoveArrayChildNodeFunction {\r\n    (index: number, node: ArrayNode);\r\n}\r\n\r\nexport class NodeBase {\r\n    public children?: any;\r\n    private _control: AfeFormControl | AfeFormArray | AfeFormGroup;\r\n    private _questionModel: QuestionBase;\r\n    private _form: Form;\r\n    private _path: string;\r\n\r\n    public initialValue: any;\r\n\r\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\r\n        this._control = control;\r\n        this._questionModel = question;\r\n        this._form = form;\r\n        this._path = parentPath ? parentPath + '.' + question.key : question.key;\r\n    }\r\n\r\n    public get question(): QuestionBase {\r\n        return this._questionModel;\r\n    }\r\n\r\n    public get control(): AfeFormControl | AfeFormArray | AfeFormGroup {\r\n        return this._control;\r\n    }\r\n\r\n    public get form(): Form {\r\n        return this._form;\r\n    }\r\n\r\n    public get path(): string {\r\n        return this._path;\r\n    }\r\n    removeAt(index: number) {}\r\n\r\n    createChildNode() {}\r\n    removeChildNode() {}\r\n\r\n}\r\n\r\nexport class LeafNode extends NodeBase {\r\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\r\n         parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\r\n        super(question, control, form, parentPath);\r\n    }\r\n}\r\n\r\nexport class GroupNode extends NodeBase {\r\n    private _children: any;\r\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\r\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\r\n        super(question, control, form, parentPath);\r\n        this._children = {};\r\n    }\r\n\r\n    public get children(): any {\r\n        return this._children;\r\n    }\r\n\r\n    public setChild(key: string, node: NodeBase) {\r\n        this.children[key] = node;\r\n    }\r\n\r\n}\r\n\r\nexport class ArrayNode extends NodeBase implements ChildNodeCreatedListener {\r\n\r\n    private childNodeCreatedEvents: any[] = [];\r\n    private _children: GroupNode[];\r\n    public createChildFunc: CreateArrayChildNodeFunction;\r\n    public removeChildFunc: RemoveArrayChildNodeFunction;\r\n\r\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\r\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, private formFactory?: FormFactory,\r\n        form?: Form, parentPath?: string) {\r\n        super(question, control, form, parentPath);\r\n        this._children = [];\r\n        this.childNodeCreatedEvents = [];\r\n    }\r\n\r\n    public get children(): GroupNode[] {\r\n        return this._children;\r\n    }\r\n\r\n    public createChildNode(): GroupNode {\r\n        if (this.createChildFunc) {\r\n            const g: GroupNode = this.createChildFunc(this.question as RepeatingQuestion, this, this.formFactory);\r\n            this.fireChildNodeCreatedListener(g);\r\n            return g;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public removeAt(index: number) {\r\n        if (this.removeChildFunc) {\r\n            this.removeChildFunc(index, this);\r\n        }\r\n    }\r\n\r\n    addChildNodeCreatedListener(func: any) {\r\n        this.childNodeCreatedEvents.push(func);\r\n    }\r\n\r\n    fireChildNodeCreatedListener(node: GroupNode) {\r\n        for (let i = 0; i < this.childNodeCreatedEvents.length; i++) {\r\n\r\n            const func: any = this.childNodeCreatedEvents[i];\r\n            func(node);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","\r\nexport class ValidationModel {\r\n\r\n  type: string;\r\n\r\n  message: string;\r\n\r\n  constructor(validations: any) {\r\n\r\n    this.type = validations.type;\r\n    this.message = validations.message || null;\r\n  }\r\n}\r\n","\r\nimport { ValidationModel } from './validation.model';\r\n\r\nexport class JsExpressionValidationModel extends ValidationModel {\r\n\r\n  failsWhenExpression: string;\r\n\r\n  constructor(validations: any) {\r\n    super(validations);\r\n    this.failsWhenExpression = validations.failsWhenExpression;\r\n  }\r\n}\r\n","import { ValidationModel } from './validation.model';\r\n\r\nexport class ConditionalValidationModel extends ValidationModel {\r\n\r\n  referenceQuestionId: string;\r\n  referenceQuestionAnswers: any;\r\n\r\n  constructor(validations: any) {\r\n    super(validations);\r\n    this.referenceQuestionId = validations.referenceQuestionId;\r\n    this.referenceQuestionAnswers = validations.referenceQuestionAnswers;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n// import { ControlRelation } from  '../../change-tracking/control-relation';\r\nimport { QuestionBase } from '../question-models/question-base';\r\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\r\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\r\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\r\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\r\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\r\nimport { Form } from './form';\r\n\r\n@Injectable()\r\nexport class ControlRelationsFactory {\r\n\r\n  constructor() { }\r\n\r\n  buildRelations(rootNode: GroupNode) {\r\n\r\n    const controlsStore: any = this.mapControlIds(rootNode, {});\r\n\r\n    for (const key in controlsStore) {\r\n      if (controlsStore.hasOwnProperty(key)) {\r\n        const nodeBase: NodeBase = controlsStore[key];\r\n\r\n        this.setRelations(controlsStore, nodeBase);\r\n      }\r\n    }\r\n  }\r\n\r\n  buildArrayNodeRelations(node: GroupNode) {\r\n\r\n    const form: Form = node.form;\r\n\r\n    if (!form) {\r\n      return;\r\n    }\r\n    const rootNode: GroupNode = form.rootNode;\r\n\r\n    // build relations for controls in the same array\r\n    this.buildRelations(node);\r\n\r\n    // build relations for control outside the array\r\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\r\n    const arrayControlStore: any = this.mapControlIds(node, {});\r\n\r\n    for (const key in rootControlsStore) {\r\n\r\n      if (rootControlsStore.hasOwnProperty(key)) {\r\n\r\n        const child: NodeBase = rootControlsStore[key];\r\n\r\n        if (child instanceof LeafNode) {\r\n\r\n          const questionBase: QuestionBase = (child as LeafNode).question;\r\n\r\n          if (questionBase.key && questionBase.key.length > 0) {\r\n            this.setRelations(arrayControlStore, child);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // define relations for controls outside the group to controls in this group\r\n    this.createRelationsToArrayControls(node);\r\n\r\n    // fire relations\r\n    for (const id in arrayControlStore) {\r\n      if (arrayControlStore.hasOwnProperty(id)) {\r\n\r\n        const child: NodeBase = arrayControlStore[id];\r\n        const control: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\r\n        control.updateHiddenState();\r\n        control.updateAlert();\r\n      }\r\n    }\r\n  }\r\n\r\n  createRelationsToArrayControls(node: GroupNode) {\r\n\r\n    const form: Form = node.form;\r\n\r\n    const rootNode: GroupNode = form.rootNode;\r\n\r\n    // build relations for control outside the array\r\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\r\n    const arrayControlStore: any = this.mapControlIds(node, {});\r\n\r\n    // loop through form controls\r\n    for (const key in rootControlsStore) {\r\n      if (rootControlsStore.hasOwnProperty(key)) {\r\n\r\n        const rChild: NodeBase = rootControlsStore[key];\r\n\r\n        const parentNodePath = node.path.substring(0, node.path.lastIndexOf('.'));\r\n\r\n        if (rChild.path.indexOf(parentNodePath + '.') === -1) {\r\n\r\n          // loop through controls in the array group\r\n          for (const id in arrayControlStore) {\r\n            if (arrayControlStore.hasOwnProperty(id)) {\r\n\r\n              const aChild: NodeBase = arrayControlStore[id];\r\n              const aChildId = aChild.question.key;\r\n              if (this.hasRelation(aChildId, rChild.question)) {\r\n\r\n                const nodes: Array<NodeBase> = node.form.searchNodeByPath(rootNode, parentNodePath, []);\r\n                if (nodes.length > 0) {\r\n                  const an = nodes[0] as ArrayNode;\r\n                  const rootControl = (rChild.control as AfeFormControl | AfeFormArray);\r\n\r\n                  if (rootControl.controlRelations.otherRelations.indexOf(an) === -1) {\r\n                    rootControl.controlRelations.otherRelations.push(an);\r\n                  }\r\n\r\n                  (aChild.control as AfeFormControl | AfeFormArray).addValueChangeListener((value) => {\r\n\r\n                    if ((rootControl as any).updateCalculatedValue) {\r\n                      (rootControl as any).updateCalculatedValue();\r\n                    }\r\n\r\n                    rootControl.updateValueAndValidity();\r\n                    if ((rootControl as any).updateHiddenState) {\r\n                      (rootControl as any).updateHiddenState();\r\n                    }\r\n\r\n                    if ((rootControl as any).updateAlert) {\r\n                      (rootControl as any).updateAlert();\r\n                    }\r\n\r\n                    if ((rootControl as any).updateDisabledState) {\r\n                      (rootControl as any).updateDisabledState();\r\n                    }\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getRelationsForControl(id, node: GroupNode): Array<AfeFormControl | AfeFormArray> {\r\n\r\n    const relations: Array<AfeFormControl | AfeFormArray> = new Array<AfeFormControl | AfeFormArray>();\r\n\r\n    const nodeBaseArray: Array<NodeBase> = node.form.searchNodeByQuestionId(id);\r\n\r\n    if (nodeBaseArray.length > 0) {\r\n\r\n      const nodeBase: NodeBase = nodeBaseArray[0];\r\n\r\n      const controlList: any = this.mapControlIds(node, {});\r\n\r\n      for (const key in controlList) {\r\n        if (controlList.hasOwnProperty(key)) {\r\n\r\n          if (this.hasRelation(controlList[key].question.key, nodeBase.question)) {\r\n            relations.push(controlList[key].control);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return relations;\r\n  }\r\n\r\n  mapControlIds(node: GroupNode, controlsStore: any) {\r\n\r\n    const children: NodeBase = node.children;\r\n\r\n    for (const key in children) {\r\n\r\n      if (children.hasOwnProperty(key)) {\r\n\r\n        const child: NodeBase = children[key];\r\n\r\n        if (child instanceof GroupNode) {\r\n\r\n          this.mapControlIds(child, controlsStore);\r\n        } else if (child instanceof LeafNode) {\r\n\r\n          const questionBase: QuestionBase = (child as LeafNode).question;\r\n\r\n          if (questionBase.key && questionBase.key.length > 0) {\r\n            controlsStore[questionBase.key] = child;\r\n          }\r\n        } else if (child instanceof ArrayNode) {\r\n\r\n          const questionBase: QuestionBase = (child as ArrayNode).question;\r\n\r\n          if (questionBase.key && questionBase.key.length > 0) {\r\n            controlsStore[questionBase.key] = child;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return controlsStore;\r\n  }\r\n\r\n  setRelations(controlsStore: any, nodeBase: NodeBase) {\r\n\r\n    const questionBase: QuestionBase = nodeBase.question;\r\n\r\n    const id = questionBase.key;\r\n\r\n    for (const key in controlsStore) {\r\n      if (controlsStore.hasOwnProperty(key) && key !== id) {\r\n\r\n        const node: NodeBase = controlsStore[key];\r\n        const question: QuestionBase = node.question;\r\n\r\n        if (this.hasRelation(id, question, nodeBase)) {\r\n          this.addRelationToControl(node.control as AfeFormControl | AfeFormArray, nodeBase.control as AfeFormControl | AfeFormArray);\r\n        }\r\n\r\n        // add conditional required and conditional answered relations\r\n        if (typeof question.required === 'object') {\r\n\r\n          const required: any = question.required;\r\n\r\n          if (required.type === 'conditionalRequired') {\r\n\r\n            if (required.referenceQuestionId === id) {\r\n              this.addRelationToControl(node.control as AfeFormControl | AfeFormArray,\r\n                nodeBase.control as AfeFormControl | AfeFormArray);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  hasRelation(id: string, questionBase: QuestionBase, nodeBase?: NodeBase) {\r\n\r\n    let hasRelation = false;\r\n\r\n    if (questionBase.validators && questionBase.validators.length > 0) {\r\n\r\n      questionBase.validators.forEach(element => {\r\n\r\n        if (element instanceof JsExpressionValidationModel) {\r\n\r\n          const model: JsExpressionValidationModel = element as JsExpressionValidationModel;\r\n\r\n          const failsWhenExpression: string = model.failsWhenExpression;\r\n          if (failsWhenExpression && failsWhenExpression.indexOf(id) !== -1) {\r\n            hasRelation = true;\r\n          }\r\n        } else if (element instanceof ConditionalValidationModel && element.type === 'conditionalAnswered'\r\n          && element.referenceQuestionId === id) {\r\n          hasRelation = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    // add hiders and disablers relations\r\n    if (!hasRelation) {\r\n\r\n      if (typeof questionBase.hide === 'string') {\r\n\r\n        const hide: string = questionBase.hide as string;\r\n\r\n        if (hide.length > 0 && hide.indexOf(id) !== -1) {\r\n          hasRelation = true;\r\n        }\r\n      } else if (typeof questionBase.hide === 'object') {\r\n\r\n        const hideObj: any = questionBase.hide;\r\n\r\n        if (hideObj.field === id) {\r\n          hasRelation = true;\r\n        }\r\n      }\r\n\r\n     if ( questionBase.alert && typeof questionBase.alert === 'object') {\r\n        hasRelation = true;\r\n      }\r\n\r\n      if (typeof questionBase.disable === 'string') {\r\n\r\n        const disable: string = questionBase.disable as string;\r\n\r\n        if (disable.length > 0 && disable.indexOf(id) !== -1) {\r\n          hasRelation = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    // add calculate expressions relations\r\n    if (!hasRelation && questionBase.calculateExpression && questionBase.calculateExpression.length > 0\r\n      && questionBase.calculateExpression.indexOf(id) !== -1) {\r\n      hasRelation = true;\r\n    }\r\n\r\n    return hasRelation;\r\n  }\r\n\r\n  addRelationToControl(control: AfeFormControl | AfeFormArray, related: AfeFormControl | AfeFormArray) {\r\n\r\n    //  let relations = control.controlRelations.relations;\r\n    //\r\n    //  let hasRelation = false;\r\n    //\r\n    //   relations.forEach(element => {\r\n    //\r\n    //     let controlRelation: ControlRelation = element as ControlRelation;\r\n    //\r\n    //     let relation: AfeFormControl | AfeFormArray = controlRelation.control as AfeFormControl | AfeFormArray;\r\n    //\r\n    //     if ( control.uuid !== undefined && control.uuid === relation.uuid ) {\r\n    //       hasRelation = true;\r\n    //     }\r\n    //   });\r\n\r\n    // if ( !hasRelation ) {\r\n    control.controlRelations.addRelatedControls(related);\r\n    // }\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension/control-extensions';\r\nimport { ArrayNode } from '../form-factory/form-node';\r\nimport { ControlRelationsFactory } from '../form-factory/control-relations.factory';\r\nimport { Form } from '../form-factory/form';\r\nimport * as moment_ from 'moment';\r\n\r\nconst moment = moment_;\r\nexport class ExpressionRunner {\r\n    getRunnable(expression: string, control: AfeFormArray | AfeFormGroup | AfeFormControl,\r\n        helper: any, dataDependencies: any, form?: Form):\r\n        Runnable {\r\n        const runner = this;\r\n        const runnable: Runnable = {\r\n            run: () => {\r\n\r\n                /* tslint:disable */\r\n                let scope: any = {};\r\n                if (control.uuid) {\r\n                    scope[control.uuid] = control.value;\r\n                }\r\n                window['moment'] = moment;\r\n                // scope.moment = moment;\r\n                scope['myValue'] = control.value;\r\n                runner.getControlRelationValueString(control, scope);\r\n                runner.getHelperMethods(helper, scope);\r\n                runner.getDataDependencies(dataDependencies, scope);\r\n\r\n                if (form) {\r\n                    // console.error('Form defined', form);\r\n                    runner.getDataDependencies(form.dataSourcesContainer.dataSources, scope);\r\n                }\r\n\r\n                let paramList = '';\r\n                let argList = '';\r\n                for (let o in scope) {\r\n                    paramList = paramList === \"\" ? paramList + o : paramList + ',' + o;\r\n                    argList = argList === \"\" ? argList + \"scope['\" + o + \"']\" : argList + \",scope['\" + o + \"']\";\r\n                }\r\n\r\n                // prevent more than one return statements\r\n                if (expression.indexOf('return') === -1) {\r\n                    expression = '\"return ' + expression + '\"';\r\n                }\r\n\r\n                let funcDeclarationCode = 'var afeDynamicFunc = new Function(\"' + paramList + '\", ' + expression + ');';\r\n                let funcCallCode = 'afeDynamicFunc.call(this ' + (argList === '' ? '' : ',' + argList) + ');';\r\n\r\n                try {\r\n\r\n                    if (Object.keys(scope).indexOf('undefined') >= 0) {\r\n                        console.warn('Missing reference found', expression, scope);\r\n                        return false;\r\n                    }\r\n                    //console.info('results: ', expression, eval(funcDeclarationCode + funcCallCode));\r\n                    return eval(funcDeclarationCode + funcCallCode);\r\n                } catch (e) {\r\n                    // if (window['error_count']) {\r\n                    //     window['error_count'] = window['error_count'] + 1;\r\n                    // } else {\r\n                    //     window['error_count'] = 1;\r\n                    // }\r\n                    // console.error(window['error_count'] + ' Error running expression:' + expression + '. ',\r\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\r\n                    // console.error('Error running expression:' + expression + '. ',\r\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\r\n\r\n                    // Uncomment the line above during debugging\r\n                    // console.error('Error running expression:' + expression, scope);\r\n\r\n                    return false;\r\n                }\r\n                /* tslint:enable */\r\n            }\r\n        };\r\n        return runnable;\r\n    }\r\n\r\n    private getControlRelationValueString(control: AfeFormArray | AfeFormGroup | AfeFormControl, scope: any) {\r\n        if (control && control.controlRelations && control.controlRelations.relations) {\r\n            control.controlRelations.relations.forEach(relation => {\r\n                if (relation.relatedTo) {\r\n                    const related = relation.relatedTo as any;\r\n                    const relatedAsControl = relation.relatedTo as AbstractControl;\r\n                    if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\r\n                        scope[related.uuid] = relation.relatedTo.value;\r\n                    } else {\r\n                        scope[related.uuid] = relation.relatedTo.value && relation.relatedTo.value.value ?\r\n                            relation.relatedTo.value.value : relation.relatedTo.value;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        if (control && control.controlRelations && control.controlRelations.otherRelations\r\n            && control.controlRelations.otherRelations.length > 0) {\r\n\r\n            control.controlRelations.otherRelations.forEach(node => {\r\n                if (node instanceof ArrayNode) {\r\n                    const arrayNode: ArrayNode = node as ArrayNode;\r\n                    const uuid = control.uuid;\r\n\r\n                    const controlRelationsFactory: ControlRelationsFactory = new ControlRelationsFactory();\r\n                    let relationsForControl: Array<AfeFormControl | AfeFormArray> = [];\r\n                    // get all related controls\r\n                    arrayNode.children.forEach(child => {\r\n                        relationsForControl = relationsForControl.concat(controlRelationsFactory.getRelationsForControl(uuid, child));\r\n\r\n                    });\r\n\r\n                    this.setControlArrayValues(control as AfeFormControl | AfeFormArray, relationsForControl, scope);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private setControlArrayValues(control: AfeFormControl | AfeFormArray,\r\n        relationsForControl: Array<AfeFormControl | AfeFormArray>, scope: any) {\r\n        const keys: Array<string> = this._getFormControlKeys(relationsForControl);\r\n\r\n        keys.forEach(key => {\r\n            const values: any = this._getValuesForKey(key, relationsForControl);\r\n            scope[key] = values;\r\n        });\r\n    }\r\n\r\n    private _getFormControlKeys(array: Array<AfeFormControl | AfeFormArray>): Array<string> {\r\n\r\n        const keys: Array<string> = [];\r\n        array.forEach(control => {\r\n\r\n            if (keys.indexOf(control.uuid) === -1) {\r\n                keys.push(control.uuid);\r\n            }\r\n        });\r\n\r\n        return keys;\r\n    }\r\n\r\n    private _getValuesForKey(key: string, array: Array<AfeFormControl | AfeFormArray>): any {\r\n        const values: any = [];\r\n\r\n        array.forEach(control => {\r\n\r\n            if (control.uuid === key) {\r\n                values.push(control.value);\r\n            }\r\n        });\r\n\r\n        return values;\r\n    }\r\n\r\n    private getHelperMethods(obj: any, scope?: any) {\r\n        for (const key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                scope[key] = obj[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    private getDataDependencies(obj: any, scope?: any) {\r\n        for (const key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                scope[key] = obj[key];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport interface Runnable {\r\n    run();\r\n}\r\n","import { FormControl, ValidatorFn, AsyncValidatorFn, AbstractControlOptions } from '@angular/forms';\r\n\r\nimport { ControlRelations } from '../change-tracking/control-relations';\r\nimport { ValueChangeListener } from './value-change.listener';\r\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\r\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\r\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\r\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\r\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\r\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\r\nimport { CanCalculate } from '../form-entry/control-calculators/can-calculate';\r\nimport { ExpressionRunner } from '../form-entry/expression-runner/expression-runner';\r\n\r\nclass AfeFormControl extends FormControl implements CanHide, CanDisable, CanCalculate, CanGenerateAlert, ValueChangeListener {\r\n    private _controlRelations: ControlRelations;\r\n    private _valueChangeListener: any;\r\n    private _previousValue;\r\n    public uuid: string;\r\n    public pathFromRoot: string;\r\n\r\n    hidden = false;\r\n    hiders: Hider[];\r\n    alert: string;\r\n    alerts: Alert[];\r\n    calculator: Function;\r\n    disablers: Disabler[];\r\n\r\n    private hiderHelper: HiderHelper = new HiderHelper();\r\n    private disablerHelper: DisablerHelper = new DisablerHelper();\r\n    private AlertHelper: AlertHelper = new AlertHelper();\r\n    constructor(formState?: any, validator?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\r\n        asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null) {\r\n        super(formState, validator, asyncValidator);\r\n        this._controlRelations = new ControlRelations(this);\r\n        this.hiders = [];\r\n        this.disablers = [];\r\n        this.alerts = [];\r\n\r\n        this.valueChanges.subscribe((value) => {\r\n            if (this._previousValue !== value) {\r\n                this.fireValueChangeListener(value);\r\n                this._previousValue = value;\r\n            }\r\n        });\r\n    }\r\n\r\n    get controlRelations(): ControlRelations {\r\n        return this._controlRelations;\r\n    }\r\n\r\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\r\n        super.disable(param);\r\n        super.setValue('');\r\n    }\r\n\r\n    hide() {\r\n        this.hiderHelper.hideControl(this);\r\n    }\r\n\r\n    show() {\r\n        this.hiderHelper.showControl(this);\r\n    }\r\n\r\n    setHidingFn(newHider: Hider) {\r\n        this.hiderHelper.setHiderForControl(this, newHider);\r\n    }\r\n\r\n    setCalculatorFn(newCalculator: Function) {\r\n        this.calculator = newCalculator;\r\n    }\r\n\r\n    updateCalculatedValue() {\r\n        if (this.calculator) {\r\n            const _val = this.calculator.call(ExpressionRunner, {});\r\n            this.setValue(_val);\r\n        }\r\n    }\r\n\r\n    clearHidingFns() {\r\n        this.hiderHelper.clearHidersForControl(this);\r\n    }\r\n\r\n    updateHiddenState() {\r\n        this.hiderHelper.evaluateControlHiders(this);\r\n    }\r\n\r\n    setDisablingFn(newDisabler: Disabler) {\r\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\r\n    }\r\n\r\n    clearDisablingFns() {\r\n        this.disablerHelper.clearDisablersForControl(this);\r\n    }\r\n\r\n    updateDisabledState() {\r\n        this.disablerHelper.evaluateControlDisablers(this);\r\n    }\r\n\r\n    setAlertFn(newHider: Alert) {\r\n        this.AlertHelper.setAlertsForControl(this, newHider);\r\n    }\r\n\r\n    clearMessageFns() {\r\n        this.AlertHelper.clearAlertsForControl(this);\r\n    }\r\n\r\n    updateAlert() {\r\n        this.AlertHelper.evaluateControlAlerts(this);\r\n    }\r\n\r\n    addValueChangeListener(func: any) {\r\n        this._valueChangeListener = func;\r\n    }\r\n\r\n    fireValueChangeListener(value: any) {\r\n        if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\r\n            this._valueChangeListener(value);\r\n        }\r\n    }\r\n\r\n    setValue(value: any) {\r\n        super.setValue(value);\r\n    }\r\n}\r\nexport { AfeFormControl };\r\n","import { FormGroup, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\nimport { ControlRelations } from '../change-tracking/control-relations';\r\n\r\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\r\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\r\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\r\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\r\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\r\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\r\n\r\nexport class AfeFormGroup extends FormGroup implements CanHide, CanDisable , CanGenerateAlert {\r\n    private _controlRelations: ControlRelations;\r\n\r\n    public uuid: string;\r\n    public pathFromRoot: string;\r\n\r\n    hidden: false;\r\n    hiders: Hider[];\r\n    alert: string;\r\n    alerts: Alert[];\r\n\r\n    disablers: Disabler[];\r\n\r\n    private hiderHelper: HiderHelper = new HiderHelper();\r\n    private disablerHelper: DisablerHelper = new DisablerHelper();\r\n    private AlertHelper: AlertHelper = new AlertHelper();\r\n\r\n    constructor(controls: { [key: string]: AbstractControl }, validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\r\n        super(controls, validator, asyncValidator);\r\n        this._controlRelations = new ControlRelations(this);\r\n        this.hiders = [];\r\n        this.disablers = [];\r\n        this.alerts = [];\r\n    }\r\n\r\n    get controlRelations(): ControlRelations {\r\n        return this._controlRelations;\r\n    }\r\n\r\n    hide() {\r\n        this.hiderHelper.hideControl(this);\r\n    }\r\n\r\n    show() {\r\n        this.hiderHelper.showControl(this);\r\n    }\r\n\r\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\r\n        super.disable(param);\r\n        super.setValue({});\r\n    }\r\n\r\n    setHidingFn(newHider: Hider) {\r\n        this.hiderHelper.setHiderForControl(this, newHider);\r\n    }\r\n\r\n    clearHidingFns() {\r\n        this.hiderHelper.clearHidersForControl(this);\r\n    }\r\n\r\n    updateHiddenState() {\r\n        this.hiderHelper.evaluateControlHiders(this);\r\n    }\r\n\r\n    setDisablingFn(newDisabler: Disabler) {\r\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\r\n    }\r\n\r\n    clearDisablingFns() {\r\n        this.disablerHelper.clearDisablersForControl(this);\r\n    }\r\n\r\n    updateDisabledState() {\r\n        this.disablerHelper.evaluateControlDisablers(this);\r\n    }\r\n\r\n    setAlertFn(newHider: Alert) {\r\n        this.AlertHelper.setAlertsForControl(this, newHider);\r\n    }\r\n\r\n    clearMessageFns() {\r\n        this.AlertHelper.clearAlertsForControl(this);\r\n    }\r\n\r\n     updateAlert() {\r\n        this.AlertHelper.evaluateControlAlerts(this);\r\n    }\r\n    setValue(value: any) {\r\n        super.setValue(value);\r\n    }\r\n\r\n}\r\n","import { FormArray, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\nimport { ControlRelations } from '../change-tracking/control-relations';\r\nimport { ValueChangeListener } from './value-change.listener';\r\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\r\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\r\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\r\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\r\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\r\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\r\n\r\n\r\nexport class AfeFormArray extends FormArray implements CanHide, CanDisable, CanGenerateAlert, ValueChangeListener {\r\n    private _controlRelations: ControlRelations;\r\n    private _valueChangeListener: any;\r\n    private _previousValue;\r\n    private _uuid: string;\r\n    public pathFromRoot: string;\r\n\r\n    hidden: false;\r\n    hiders: Hider[];\r\n\r\n    alert: string;\r\n    alerts: Alert[];\r\n\r\n    disablers: Disabler[];\r\n\r\n    private hiderHelper: HiderHelper = new HiderHelper();\r\n    private AlertHelper: AlertHelper = new AlertHelper();\r\n    private disablerHelper: DisablerHelper = new DisablerHelper();\r\n\r\n    constructor(controls: AbstractControl[], validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\r\n        super(controls, validator, asyncValidator);\r\n        this._controlRelations = new ControlRelations(this);\r\n        this.hiders = [];\r\n        this.alerts = [];\r\n        this.disablers = [];\r\n\r\n        this.valueChanges.subscribe((value) => {\r\n          if (this._previousValue !== value) {\r\n            this.fireValueChangeListener(value);\r\n            this._previousValue = value;\r\n          }\r\n        });\r\n    }\r\n\r\n    get uuid(): string {\r\n        return this._uuid;\r\n    }\r\n    set uuid(val: string) {\r\n        this._uuid = val;\r\n    }\r\n\r\n    get controlRelations(): ControlRelations {\r\n        return this._controlRelations;\r\n    }\r\n\r\n    hide() {\r\n        this.hiderHelper.hideControl(this);\r\n    }\r\n\r\n    show() {\r\n        this.hiderHelper.showControl(this);\r\n    }\r\n\r\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\r\n        super.disable(param);\r\n        super.setValue([]);\r\n    }\r\n\r\n    setHidingFn(newHider: Hider) {\r\n        this.hiderHelper.setHiderForControl(this, newHider);\r\n    }\r\n\r\n    clearHidingFns() {\r\n        this.hiderHelper.clearHidersForControl(this);\r\n    }\r\n\r\n    updateHiddenState() {\r\n        this.hiderHelper.evaluateControlHiders(this);\r\n    }\r\n\r\n    setDisablingFn(newDisabler: Disabler) {\r\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\r\n    }\r\n\r\n    clearDisablingFns() {\r\n        this.disablerHelper.clearDisablersForControl(this);\r\n    }\r\n\r\n    updateDisabledState() {\r\n        this.disablerHelper.evaluateControlDisablers(this);\r\n    }\r\n\r\n    setAlertFn(newHider: Alert) {\r\n        this.AlertHelper.setAlertsForControl(this, newHider);\r\n    }\r\n\r\n    clearMessageFns() {\r\n        this.AlertHelper.clearAlertsForControl(this);\r\n    }\r\n\r\n     updateAlert() {\r\n        this.AlertHelper.evaluateControlAlerts(this);\r\n    }\r\n\r\n    addValueChangeListener(func: any) {\r\n      this._valueChangeListener = func;\r\n    }\r\n\r\n    fireValueChangeListener(value: any) {\r\n      if (this.alerts.length > 0) {\r\n        this.updateAlert();\r\n      }\r\n      if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\r\n        this._valueChangeListener(value);\r\n      }\r\n    }\r\n\r\n    setValue(value: any) {\r\n        super.setValue(value);\r\n    }\r\n\r\n}\r\n","export enum AfeControlType {\r\n    AfeFormControl,\r\n    AfeFormArray,\r\n    AfeFormGroup,\r\n    None\r\n}\r\n","import { BaseOptions } from './interfaces/base-options';\r\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\r\nimport { ValidationModel } from './validation.model';\r\n\r\nexport class QuestionBase implements BaseOptions {\r\n    type: string;\r\n    order?: number;\r\n    questionOptions?: any;\r\n    questions?: any;\r\n    placeholder?: any;\r\n    hidden?: any;\r\n    showTime?: any;\r\n    showWeek?: any;\r\n    historicalDisplay?: any;\r\n    rows?: any;\r\n    showWeeksAdder?: any;\r\n    key: string;    alert?: any;\r\n\r\n    label?: string;\r\n    renderingType: string;\r\n\r\n    defaultValue?: any;\r\n    originalValue?: any;\r\n    enableHistoricalValue?: boolean;\r\n    showHistoricalValueDate?: boolean;\r\n    historicalDataValue?: any;\r\n    extras?: any;\r\n    dataSource?: string;\r\n    dataSourceOptions?: any;\r\n\r\n    controlType?: AfeControlType;\r\n    validators?: Array<ValidationModel>;\r\n    required?: boolean;\r\n    hide?: string | boolean;\r\n    disable?: string | boolean;\r\n    calculateExpression?: string;\r\n    options?: any;\r\n\r\n    constructor(options: BaseOptions) {\r\n\r\n        this.defaultValue = options.defaultValue;\r\n        this.originalValue = options.originalValue;\r\n        this.extras = options.extras;\r\n        this.renderingType = options.type;\r\n        this.key = options.key || '';\r\n        this.label = options.label || '';\r\n        this.validators = options.validators || [];\r\n        this.required = options.required;\r\n        this.hide = options.hide;\r\n        this.disable = options.disable;\r\n        this.alert = options.alert;\r\n        this.historicalDataValue = options.historicalDataValue;\r\n        this.calculateExpression = options.calculateExpression;\r\n    }\r\n\r\n    setHistoricalValue(v: boolean) {\r\n        this.enableHistoricalValue = v;\r\n    }\r\n    showHistoricalEncounterDate(v?: boolean) {\r\n      this.showHistoricalValueDate = v === undefined ? true : v;\r\n    }\r\n}\r\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\r\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\r\n\r\nexport class ConditionalRequiredValidator {\r\n\r\n  constructor() {}\r\n\r\n  validate(model: ConditionalValidationModel) {\r\n\r\n    // convert helper functions to string\r\n    return (control: AfeFormControl): { [key: string]: any } => {\r\n\r\n      const value = control.value;\r\n      let relationValue = null;\r\n      const referenceQuestionId: string = model.referenceQuestionId;\r\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\r\n      let isRequired: boolean;\r\n\r\n      if (control && control.controlRelations && control.controlRelations.relations) {\r\n          control.controlRelations.relations.forEach(relation => {\r\n\r\n            const relatedAsControl = relation.relatedTo as any;\r\n            if (relatedAsControl.uuid === referenceQuestionId) {\r\n              if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\r\n                  relationValue = relation.relatedTo.value;\r\n              } else {\r\n                  relationValue = relation.relatedTo.value && relation.relatedTo.value.value ?\r\n                      relation.relatedTo.value.value : relation.relatedTo.value;\r\n              }\r\n            }\r\n          });\r\n      }\r\n\r\n      if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) !== -1) {\r\n        isRequired = true;\r\n      }\r\n\r\n      if (isRequired && !value) {\r\n        return { 'conditional_required': { message:  model.message  } };\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n}\r\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\r\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\r\n\r\nexport class ConditionalAnsweredValidator {\r\n\r\n  constructor() {}\r\n\r\n  validate(model: ConditionalValidationModel) {\r\n\r\n    return (control: AfeFormControl): { [key: string]: any } => {\r\n\r\n      const value = control.value;\r\n      let relationValue = null;\r\n      const referenceQuestionId: string = model.referenceQuestionId;\r\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\r\n      let successCondition: any = true;\r\n\r\n      if (value) {\r\n        if (control && control.controlRelations && control.controlRelations.relations) {\r\n            control.controlRelations.relations.forEach(relation => {\r\n\r\n              const relatedAsControl = relation.relatedTo as any;\r\n              if (relatedAsControl.uuid === referenceQuestionId) {\r\n                if (Array.isArray(relatedAsControl.value)) {\r\n                    relationValue = relatedAsControl.value;\r\n                } else {\r\n                    relationValue = relatedAsControl.value && typeof relatedAsControl.value === 'object' && relatedAsControl.value.value ?\r\n                        relatedAsControl.value.value : relatedAsControl.value;\r\n                }\r\n              }\r\n\r\n              if (!relationValue) {\r\n                successCondition = false;\r\n              } else if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) === -1) {\r\n                successCondition = false;\r\n              }\r\n            });\r\n        }\r\n      }\r\n\r\n      if (!successCondition) {\r\n        return { 'conditional_answered': { message:  model.message  } };\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n}\r\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\r\n\r\nexport class RequiredValidator {\r\n\r\n  validate(control: AfeFormControl) {\r\n\r\n    if (control.hidden) {\r\n      return null;\r\n    }\r\n\r\n    const value: any = control.value;\r\n    const isEmpty: boolean = value == null || typeof value === 'string' && value.length === 0;\r\n\r\n    return isEmpty ? { 'required': true } : null;\r\n  }\r\n}\r\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\r\n\r\n\r\nexport class DateValidator {\r\n\r\n  constructor() { }\r\n\r\n  validate(control: AfeFormControl) {\r\n\r\n    if (control.hidden) {\r\n      return null;\r\n    }\r\n\r\n    const value = control.value;\r\n\r\n    if (value && value.length !== 0) {\r\n\r\n      // YYYY-MM-DD or DD-MM-YYYY\r\n      const test: boolean = !/Invalid|NaN/.test(new Date(value).toString());\r\n\r\n      return test ? null : { 'date': true };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\r\n\r\nexport class MinValidator {\r\n\r\n\r\n  validate(min: number) {\r\n\r\n    return (control: AfeFormControl): { [key: string]: any } => {\r\n\r\n      if (control.hidden) {\r\n        return null;\r\n      }\r\n      if (control.value && control.value.length !== 0) {\r\n\r\n        const v: number = control.value;\r\n        return v >= min ? null : { 'min': { requiredValue: min, actualValue: v } };\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n}\r\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\r\n\r\nexport class MaxValidator {\r\n\r\n  validate(max: number) {\r\n\r\n    return (control: AfeFormControl): { [key: string]: any } => {\r\n\r\n      if (control.hidden) {\r\n        return null;\r\n      }\r\n\r\n      if (control.value && control.value.length !== 0) {\r\n\r\n        const v: number = control.value;\r\n        return v <= max ? null : { 'max': { requiredValue: max, actualValue: v } };\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n}\r\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\r\nimport { DateValidator } from './date.validator';\r\n\r\nexport class MinDateValidator {\r\n\r\n  validate(min: Date) {\r\n\r\n    return (control: AfeFormControl): { [key: string]: any } => {\r\n\r\n      if (control.hidden) {\r\n        return null;\r\n      }\r\n\r\n      if (control.value && control.value.length !== 0) {\r\n\r\n        if (!new DateValidator().validate(control.value)) {\r\n\r\n          const newDate: Date = new Date(control.value);\r\n\r\n          return newDate.getTime() < min.getTime() ? { 'mindate': { 'requiredDate': min, actualDate: newDate } } : null;\r\n        } else {\r\n\r\n          return { 'mindate': { 'requiredDate': min } };\r\n        }\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n}\r\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\r\nimport { DateValidator } from './date.validator';\r\n\r\nexport class MaxDateValidator {\r\n\r\n  validate(max: Date) {\r\n\r\n    return (control: AfeFormControl): { [key: string]: any } => {\r\n\r\n      if (control.hidden) {\r\n        return null;\r\n      }\r\n\r\n      if (control.value && control.value.length !== 0) {\r\n\r\n        if (!new DateValidator().validate(control.value)) {\r\n\r\n          const newDate: Date = new Date(control.value);\r\n\r\n          return newDate.getTime() > max.getTime() ? { 'maxdate': { 'requiredDate': max, actualDate: newDate } } : null;\r\n        } else {\r\n\r\n          return { 'maxdate': { 'requiredDate': max } };\r\n        }\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n}\r\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\r\nimport { DateValidator } from './date.validator';\r\n\r\nexport class FutureDateRestrictionValidator {\r\n\r\n  constructor() { }\r\n\r\n  validate(control: AfeFormControl) {\r\n\r\n    if (control.hidden) {\r\n      return null;\r\n    }\r\n\r\n    const value = control.value;\r\n    const now: Date = new Date();\r\n\r\n    if (value && value.length !== 0) {\r\n\r\n      if (!new DateValidator().validate(value)) {\r\n\r\n        const d: Date = new Date(value);\r\n\r\n        return d.getTime() > now.getTime() ? { 'futureDateRestriction': true } : null;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","\r\nimport * as _ from 'lodash';\r\nexport class JsExpressionHelper {\r\n\r\n  calcBMI(height, weight) {\r\n\r\n    let r;\r\n    if (height && weight) {\r\n      r = (weight / (height / 100 * height / 100)).toFixed(1);\r\n    }\r\n    return height && weight ? parseFloat(r) : null;\r\n  }\r\n\r\n  calcBMIForAgeZscore(bmiForAgeRef, height, weight) {\r\n   let bmi;\r\n   const maxAgeInDays = 1856;\r\n    if (height && weight) {\r\n      bmi = (weight / (height / 100 * height / 100)).toFixed(1);\r\n    }\r\n    const refSectionObject = _.first(bmiForAgeRef);\r\n    let formattedSDValue;\r\n    if (refSectionObject) {\r\n      const refObjectValues = Object.keys(refSectionObject).map(\r\n        (key) => refSectionObject[key]).map( (x) => x);\r\n        const refObjectKeys = Object.keys(refSectionObject);\r\n        const minimumValue = refObjectValues[1];\r\n        const minReferencePoint = [];\r\n        if (bmi < minimumValue) {\r\n          minReferencePoint.push(minimumValue);\r\n        } else {\r\n          _.forEach(refObjectValues, (value) => {\r\n          if (value <= bmi) {\r\n          minReferencePoint.push(value);\r\n          }\r\n          });\r\n        }\r\n        const lastReferenceValue = _.last(minReferencePoint);\r\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\r\n        return o === lastReferenceValue;\r\n        });\r\n        const SDValue = refObjectKeys[lastValueIndex];\r\n        formattedSDValue = SDValue.replace('SD', '');\r\n        if (formattedSDValue.includes('neg')) {\r\n          formattedSDValue = formattedSDValue.substring(1, 0);\r\n          formattedSDValue = '-' + formattedSDValue;\r\n        }\r\n\r\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M' || formattedSDValue === '-5') {\r\n          formattedSDValue = '-4';\r\n        }\r\n\r\n    }\r\n\r\n    return  bmi && refSectionObject ?  formattedSDValue : null;\r\n  }\r\n  calcWeightForHeightZscore(weightForHeightRef, height, weight) {\r\n    let refSection ;\r\n    let formattedSDValue;\r\n    if (height && weight) {\r\n      height = parseFloat(height).toFixed(1);\r\n    }\r\n    const standardHeightMin = 45;\r\n    const standardMaxHeight = 110;\r\n    if ( height < standardHeightMin || height > standardMaxHeight) {\r\n      formattedSDValue = -4;\r\n    } else {\r\n        refSection = _.filter(weightForHeightRef, (refObject) => {\r\n        return parseFloat(refObject['Length']).toFixed(1) === height;\r\n      });\r\n    }\r\n\r\n    const refSectionObject = _.first(refSection);\r\n    if (refSectionObject) {\r\n      const refObjectValues = Object.keys(refSectionObject).map(\r\n        (key) => refSectionObject[key]).map( (x) => x);\r\n        const refObjectKeys = Object.keys(refSectionObject);\r\n        const minimumValue = refObjectValues[1];\r\n        const minReferencePoint = [];\r\n        if (weight < minimumValue) {\r\n          minReferencePoint.push(minimumValue);\r\n        } else {\r\n          _.forEach(refObjectValues, (value) => {\r\n          if (value <= weight) {\r\n          minReferencePoint.push(value);\r\n          }\r\n          });\r\n\r\n        }\r\n        const lastReferenceValue = _.last(minReferencePoint);\r\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\r\n        return o === lastReferenceValue;\r\n        });\r\n        const SDValue = refObjectKeys[lastValueIndex];\r\n        formattedSDValue = SDValue.replace('SD', '');\r\n        if (formattedSDValue.includes('neg')) {\r\n          formattedSDValue = formattedSDValue.substring(1, 0);\r\n          formattedSDValue = '-' + formattedSDValue;\r\n        }\r\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\r\n          formattedSDValue = '-4';\r\n        }\r\n\r\n    }\r\n\r\n    return  height && weight  ?  formattedSDValue : null;\r\n  }\r\n\r\n  calcHeightForAgeZscore(heightForAgeRef, height, weight) {\r\n\r\n    const refSectionObject = _.first(heightForAgeRef);\r\n    let formattedSDValue;\r\n    if (refSectionObject) {\r\n      const refObjectValues = Object.keys(refSectionObject).map(\r\n        (key) => refSectionObject[key]).map( (x) => x);\r\n        const refObjectKeys = Object.keys(refSectionObject);\r\n        const minimumValue = refObjectValues[1];\r\n        const minReferencePoint = [];\r\n        if (height < minimumValue) {\r\n          minReferencePoint.push(minimumValue);\r\n        } else {\r\n          _.forEach(refObjectValues, (value) => {\r\n          if (value <= height) {\r\n          minReferencePoint.push(value);\r\n          }\r\n          });\r\n        }\r\n        const lastReferenceValue = _.last(minReferencePoint);\r\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\r\n        return o === lastReferenceValue;\r\n        });\r\n        const SDValue = refObjectKeys[lastValueIndex];\r\n        formattedSDValue = SDValue.replace('SD', '');\r\n        if (formattedSDValue.includes('neg')) {\r\n          formattedSDValue = formattedSDValue.substring(1, 0);\r\n          formattedSDValue = '-' + formattedSDValue;\r\n        }\r\n\r\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\r\n          formattedSDValue = '-4';\r\n        }\r\n\r\n    }\r\n\r\n    return  height && weight && refSectionObject ?  formattedSDValue : null;\r\n  }\r\n\r\n  isEmpty(val) {\r\n\r\n    if (val === undefined || val === null || val === '' || val === 'null' || val === 'undefined') {\r\n      return true;\r\n    }\r\n\r\n    if (Array.isArray(val) && val.length === 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  arrayContains(array, members) {\r\n\r\n    if (Array.isArray(members)) {\r\n\r\n      if (members.length === 0) {\r\n        return true;\r\n      }\r\n\r\n      let contains = true;\r\n\r\n      for (let i = 0; i < members.length; i++) {\r\n        const val = members[i];\r\n        if (array.indexOf(val) === -1) {\r\n          contains = false;\r\n        }\r\n      }\r\n\r\n      return contains;\r\n    } else {\r\n      return array.indexOf(members) !== -1;\r\n    }\r\n  }\r\n  extractRepeatingGroupValues(key, array) {\r\n    const values = array.map(function(item) {\r\n    return item[key];\r\n    });\r\n  return values;\r\n  }\r\n  formatDate(value, format, offset) {\r\n\r\n    format = format || 'yyyy-MM-dd';\r\n    offset = offset || '+0300';\r\n\r\n    if (!(value instanceof Date)) {\r\n\r\n      value = new Date(value);\r\n      if (value === null || value === undefined) {\r\n        throw new Error('DateFormatException: value passed ' +\r\n          'is not a valid date');\r\n      }\r\n    }\r\n\r\n    return value; // TODO implement this\r\n    // return $filter('date')(value, format, offset);\r\n  }\r\n\r\n  arrayContainsAny(array, members) {\r\n\r\n    if (Array.isArray(members)) {\r\n      if (members.length === 0) {\r\n        return true;\r\n      }\r\n      let contains = false;\r\n\r\n      for (let i = 0; i < members.length; i++) {\r\n\r\n        const val = members[i];\r\n        if (array.indexOf(val) !== -1) {\r\n          contains = true;\r\n        }\r\n      }\r\n      return contains;\r\n    } else {\r\n      return array.indexOf(members) !== -1;\r\n    }\r\n  }\r\n\r\n  get helperFunctions() {\r\n    const helper = this;\r\n    return {\r\n      arrayContainsAny: helper.arrayContainsAny,\r\n      calcBMI: helper.calcBMI,\r\n      calcBMIForAgeZscore: helper.calcBMIForAgeZscore,\r\n      calcWeightForHeightZscore: helper.calcWeightForHeightZscore,\r\n      calcHeightForAgeZscore: helper.calcHeightForAgeZscore,\r\n      isEmpty: helper.isEmpty,\r\n      arrayContains: helper.arrayContains,\r\n      extractRepeatingGroupValues: helper.extractRepeatingGroupValues\r\n    };\r\n  }\r\n}\r\n","\r\n\r\nexport class Validations {\r\n\r\n  public static JSExpressionValidatorsEnabled = false;\r\n\r\n  constructor() {}\r\n}\r\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\r\nimport { ExpressionRunner } from '../expression-runner/expression-runner';\r\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\r\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\r\nimport { Validations } from './validations';\r\n\r\nexport class JsExpressionValidator {\r\n\r\n  constructor() {}\r\n\r\n  validate(model: JsExpressionValidationModel, form?: any) {\r\n\r\n    // convert helper functions to string\r\n    return (control: AfeFormControl): { [key: string]: any } => {\r\n\r\n      if (!Validations.JSExpressionValidatorsEnabled) {\r\n        return null;\r\n      }\r\n\r\n      const expression = model.failsWhenExpression;\r\n      const helper = new JsExpressionHelper();\r\n      const dataDependencies = {};\r\n\r\n      const helperFunctions = helper.helperFunctions;\r\n      const runnable = new ExpressionRunner().getRunnable(expression, control, helperFunctions, dataDependencies, form);\r\n\r\n      if (runnable.run()) {\r\n\r\n        return { 'js_expression': { 'expression': expression, message:  model.message } };\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n}\r\n","\r\nexport class Messages {\r\n\r\n  public static readonly REQUIRED_FIELD_MSG = 'This field is required!';\r\n\r\n  public static readonly INVALID_DATE_MSG = 'Provided date is invalid!';\r\n\r\n  public static readonly FUTURE_DATE_RESTRICTION_MSG = 'Future date is not allowed!';\r\n\r\n  public static readonly MIN_LENGTH_MSG = 'Min Length should be {minLength}';\r\n\r\n  public static readonly MAX_LENGTH_MSG = 'Max Length should be {maxLength}';\r\n\r\n  public static readonly MAX_DATE_MSG = 'Max Date should be {maxDate}';\r\n\r\n  public static readonly MIN_DATE_MSG = 'Min Date should be {minDate}';\r\n\r\n  public static readonly MAX_MSG = 'Max value should be {max}';\r\n\r\n  public static readonly MIN_MSG = 'Min value should be {min}';\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\nimport * as _ from 'lodash';\r\n\r\nimport { ConditionalRequiredValidator } from '../validators/conditional-required.validator';\r\nimport { ConditionalAnsweredValidator } from '../validators/conditional-answered.validator';\r\nimport { RequiredValidator } from '../validators/required.validator';\r\nimport { DateValidator } from '../validators/date.validator';\r\nimport { MinValidator } from '../validators/min.validator';\r\nimport { MaxValidator } from '../validators/max.validator';\r\nimport { MinDateValidator } from '../validators/min-date.validator';\r\nimport { MaxDateValidator } from '../validators/max-date.validator';\r\nimport { FutureDateRestrictionValidator } from '../validators/future-date-restriction.validator';\r\nimport { JsExpressionValidator } from '../validators/js-expression.validator';\r\nimport { QuestionBase } from '../question-models/question-base';\r\nimport { Messages } from '../utils/messages';\r\nimport { ValidationModel } from '../question-models/validation.model';\r\nimport { DateValidationModel } from '../question-models/date-validation.model';\r\nimport { MaxValidationModel} from '../question-models/max-validation.model';\r\nimport { MinValidationModel} from '../question-models/min-validation.model';\r\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\r\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\r\n\r\n@Injectable()\r\nexport class ValidationFactory {\r\n\r\n  constructor() {}\r\n\r\n  getValidators(question: QuestionBase, form?: any) {\r\n\r\n    const list: Array<any> = [];\r\n\r\n    if (question.validators) {\r\n\r\n      _.forEach(question.validators, (validator: ValidationModel) => {\r\n\r\n        switch (validator.type) {\r\n          case 'date':\r\n            list.push(this.dateValidator);\r\n            const allowFutureDates: boolean = ( <DateValidationModel>validator ).allowFutureDates;\r\n\r\n            if (!allowFutureDates) {\r\n              list.push(this.futureDateRestrictionValidator);\r\n            }\r\n            break;\r\n          case 'js_expression':\r\n            list.push(this.jsExpressionValidator.validate(<JsExpressionValidationModel>validator, form));\r\n            break;\r\n          case 'max':\r\n            list.push(this.getMaxValueValidator((<MaxValidationModel>validator).max));\r\n            break;\r\n          case 'min':\r\n            list.push(this.getMinValueValidator((<MinValidationModel>validator).min));\r\n            break;\r\n          case 'conditionalRequired':\r\n            list.push(this.conditionalRequiredValidator.validate(<ConditionalValidationModel>validator));\r\n            break;\r\n          case 'conditionalAnswered':\r\n            list.push(this.conditionalAnsweredValidator.validate(<ConditionalValidationModel>validator));\r\n            break;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (question.required && typeof(question.required) === 'string' && question.required === 'true') {\r\n      list.push(this.requiredValidator);\r\n    } else {\r\n\r\n      // TODO - handle custom required validator\r\n    }\r\n\r\n    return list;\r\n  }\r\n\r\n  get conditionalRequiredValidator(): ConditionalRequiredValidator {\r\n    return new ConditionalRequiredValidator();\r\n  }\r\n\r\n  get conditionalAnsweredValidator(): ConditionalAnsweredValidator {\r\n    return new ConditionalAnsweredValidator();\r\n  }\r\n\r\n  get requiredValidator(): any {\r\n    return new RequiredValidator().validate;\r\n  }\r\n\r\n  get dateValidator(): any {\r\n    return new DateValidator().validate;\r\n  }\r\n\r\n  get futureDateRestrictionValidator(): any {\r\n    return new FutureDateRestrictionValidator().validate;\r\n  }\r\n\r\n  get maxDateValidator(): any {\r\n    return new MaxDateValidator().validate;\r\n  }\r\n\r\n  get minDateValidator(): any {\r\n    return new MinDateValidator().validate;\r\n  }\r\n\r\n  get minLengthValidator(): any {\r\n    return Validators.minLength;\r\n  }\r\n\r\n  get maxLengthValidator() {\r\n    return Validators.maxLength;\r\n  }\r\n\r\n  public getMinValueValidator(min: number): any {\r\n    return new MinValidator().validate(min);\r\n  }\r\n\r\n  public getMaxValueValidator(max: number): any {\r\n\r\n    return new MaxValidator().validate(max);\r\n  }\r\n\r\n  get jsExpressionValidator() {\r\n\r\n    return new JsExpressionValidator();\r\n  }\r\n\r\n  public errors(errors: any, question: QuestionBase): Array<string> {\r\n\r\n    const messages: Array<string> = [];\r\n\r\n    for (const property in errors) {\r\n        if (errors.hasOwnProperty(property)) {\r\n\r\n            switch (property) {\r\n              case 'required':\r\n                messages.push(Messages.REQUIRED_FIELD_MSG);\r\n                break;\r\n              case 'date':\r\n                messages.push(Messages.INVALID_DATE_MSG);\r\n                break;\r\n              case 'futureDateRestriction':\r\n                messages.push(Messages.FUTURE_DATE_RESTRICTION_MSG);\r\n                break;\r\n              case 'minlength':\r\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{minLength}', errors.minlength.requiredLength));\r\n                break;\r\n              case 'maxlength':\r\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{maxLength}', errors.maxlength.requiredLength));\r\n                break;\r\n              case 'maxdate':\r\n                messages.push(Messages.MAX_DATE_MSG.replace('{maxDate}', errors.maxdate.requiredDate));\r\n                break;\r\n              case 'mindate':\r\n                messages.push(Messages.MIN_DATE_MSG.replace('{minDate}', errors.mindate.requiredDate));\r\n                break;\r\n              case 'max':\r\n                messages.push(Messages.MAX_MSG.replace('{max}', errors.max.requiredValue));\r\n                break;\r\n              case 'min':\r\n                messages.push(Messages.MIN_MSG.replace('{min}', errors.min.requiredValue));\r\n                break;\r\n              case 'js_expression':\r\n                messages.push(errors['js_expression'].message);\r\n                break;\r\n              case 'conditional_required':\r\n                messages.push(errors['conditional_required'].message);\r\n                break;\r\n              case 'conditional_answered':\r\n                messages.push(errors['conditional_answered'].message);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return messages;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Disabler } from '../control-hiders-disablers/can-disable';\r\nimport { Hider } from '../control-hiders-disablers/can-hide';\r\n\r\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\r\nimport { AfeFormControl, AfeFormArray, AfeFormGroup\r\n} from '../../abstract-controls-extension';\r\nimport { QuestionBase } from '../question-models/question-base';\r\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\r\nimport { Form } from './form';\r\n// Add ability to display all fields for debugging\r\nimport { DebugModeService } from './../services/debug-mode.service';\r\n\r\n@Injectable()\r\nexport class HidersDisablersFactory {\r\n\r\n    constructor(private expressionRunner: ExpressionRunner,\r\n     private expressionHelper: JsExpressionHelper,\r\n     private _debugModeService: DebugModeService) {\r\n    }\r\n\r\n    getJsExpressionDisabler(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\r\n        form?: Form): Disabler {\r\n        const runnable: Runnable =\r\n            this.expressionRunner.getRunnable(question.disable as string, control,\r\n                this.expressionHelper.helperFunctions, {}, form);\r\n        const disabler: Disabler = {\r\n            toDisable: false,\r\n            disableWhenExpression: question.disable as string,\r\n            reEvaluateDisablingExpression: () => {\r\n                const result = runnable.run();\r\n                disabler.toDisable = result;\r\n            }\r\n        };\r\n        return disabler;\r\n    }\r\n\r\n    getJsExpressionHider(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\r\n        form?: Form): Hider {\r\n\r\n        const hide: any = question.hide;\r\n        const value: string = typeof hide === 'object' ? this.convertHideObjectToString(hide) : question.hide as string;\r\n\r\n        // check if debugging has been enabled\r\n\r\n        const debugEnabled = this._debugModeService.debugEnabled();\r\n\r\n        const runnable: Runnable = this.expressionRunner.getRunnable(value, control,\r\n        this.expressionHelper.helperFunctions, {}, form);\r\n\r\n        const hider: Hider = {\r\n            toHide: false,\r\n            hideWhenExpression: value,\r\n            reEvaluateHidingExpression: () => {\r\n                 /* if debug is enabled then hiders to be false\r\n                 else run the normal eveluator i.e runnable.run()\r\n                 */\r\n                if (debugEnabled === true) {\r\n                      hider.toHide = false ;\r\n                  } else {\r\n                      hider.toHide =  runnable.run();\r\n                  }\r\n            }\r\n        };\r\n        return hider;\r\n    }\r\n\r\n    convertHideObjectToString(hide: any) {\r\n\r\n      if (hide.value instanceof Array) {\r\n\r\n        const arrayStr: string = '\\'' + hide.value.join('\\',\\'') + '\\'';\r\n        const exp = '!arrayContains([' + arrayStr + '],' + hide.field + ')';\r\n        return exp;\r\n      }\r\n\r\n      return '';\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Alert } from '../control-alerts/can-generate-alert';\r\n\r\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\r\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\r\nimport { QuestionBase } from '../question-models/question-base';\r\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\r\nimport { Form} from './form';\r\n\r\n@Injectable()\r\nexport class AlertsFactory {\r\n    constructor(private expressionRunner: ExpressionRunner, private expressionHelper: JsExpressionHelper) {\r\n    }\r\n    getJsExpressionshowAlert(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\r\n        form?: Form): Alert {\r\n        const runnable: Runnable =\r\n            this.expressionRunner.getRunnable(question.alert.alertWhenExpression, control,\r\n                this.expressionHelper.helperFunctions, {}, form);\r\n        const showAlert: Alert = {\r\n            shown: false,\r\n            alertWhenExpression: question.alert.alertWhenExpression,\r\n            alertMessage: question.alert.message,\r\n            reEvaluateAlertExpression: () => {\r\n                const result = runnable.run();\r\n                showAlert.shown = result;\r\n            }\r\n        };\r\n        return showAlert;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\nimport { AfeFormControl, AfeFormArray, AfeFormGroup, AfeControlType\r\n} from '../../abstract-controls-extension';\r\n\r\nimport { NestedQuestion } from '../question-models/interfaces/nested-questions';\r\n\r\nimport { QuestionBase } from '../question-models/question-base';\r\nimport { QuestionGroup } from '../question-models/group-question';\r\nimport { ValidationFactory } from '../form-factory/validation.factory';\r\nimport { HidersDisablersFactory } from './hiders-disablers.factory';\r\nimport { AlertsFactory } from './show-messages.factory';\r\nimport { Form } from './form';\r\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\r\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\r\n\r\n\r\n@Injectable()\r\nexport class FormControlService {\r\n    controls = [];\r\n    validationFactory: ValidationFactory;\r\n    hidersDisablersFactory: HidersDisablersFactory;\r\n\r\n    constructor(validationFactory: ValidationFactory,\r\n        hidersDisablersFactory: HidersDisablersFactory, private alertsFactory: AlertsFactory) {\r\n        this.validationFactory = validationFactory;\r\n        this.hidersDisablersFactory = hidersDisablersFactory;\r\n    }\r\n\r\n    generateControlModel(questionModel: QuestionBase | NestedQuestion, parentControl: AfeFormGroup,\r\n        generateChildren: boolean, form?: Form): AfeFormControl | AfeFormArray | AfeFormGroup {\r\n        if (questionModel instanceof QuestionBase) {\r\n            if (questionModel.controlType === AfeControlType.AfeFormArray) {\r\n                return this.generateFormArray(questionModel, parentControl, form);\r\n            }\r\n            if (questionModel.controlType === AfeControlType.AfeFormGroup) {\r\n                return this.generateFormGroupModel(questionModel, generateChildren, parentControl, form);\r\n            }\r\n\r\n            if (questionModel.controlType === AfeControlType.AfeFormControl) {\r\n                return this.generateFormControl(questionModel, parentControl, form);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    generateFormGroupModel(question: QuestionBase, generateChildren: boolean,\r\n        parentControl?: AfeFormGroup, form?: Form): AfeFormGroup {\r\n        const formGroup = new AfeFormGroup({});\r\n        this.wireHidersDisablers(question, formGroup, form);\r\n        this.wireAlerts(question, formGroup, form);\r\n        if (parentControl instanceof AfeFormGroup) {\r\n            parentControl.setControl(question.key, formGroup);\r\n        }\r\n\r\n        const asGroup = question as QuestionGroup;\r\n\r\n        if (generateChildren && asGroup && asGroup.questions.length > 0) {\r\n            this._generateFormGroupChildrenModel(asGroup.questions, formGroup, form);\r\n        }\r\n\r\n        return formGroup;\r\n    }\r\n\r\n    _generateFormGroupChildrenModel(questions: QuestionBase[], parentControl: AfeFormGroup, form?: Form) {\r\n\r\n        if (questions.length > 0) {\r\n            questions.forEach(element => {\r\n                const generated = this.generateControlModel(element, parentControl, true, form);\r\n                if (generated !== null) {\r\n                    parentControl.addControl(element.key, generated);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    generateFormArray(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormArray {\r\n\r\n        const validators = this.validationFactory.getValidators(question, form);\r\n         let formArray: AfeFormArray;\r\n         if (validators && validators.length > 0) {\r\n             formArray = new AfeFormArray([], validators[0]);\r\n         } else {\r\n            formArray = new AfeFormArray([]);\r\n         }\r\n        formArray.uuid = question.key;\r\n        this.wireHidersDisablers(question, formArray, form);\r\n        this.wireAlerts(question, formArray, form);\r\n        if (parentControl instanceof AfeFormGroup) {\r\n            parentControl.setControl(question.key, formArray);\r\n        }\r\n\r\n        return formArray;\r\n    }\r\n\r\n    generateFormControl(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormControl {\r\n\r\n        const value = question.defaultValue || '';\r\n        const validators = this.validationFactory.getValidators(question, form);\r\n\r\n        const control = new AfeFormControl(value, validators);\r\n        control.uuid = question.key;\r\n        this.wireHidersDisablers(question, control, form);\r\n        this.wireAlerts(question, control, form);\r\n        this.wireCalculator(question, control, (form ? form.dataSourcesContainer.dataSources : null));\r\n\r\n        if (parentControl instanceof AfeFormGroup) {\r\n            parentControl.setControl(question.key, control);\r\n        }\r\n\r\n        return control;\r\n    }\r\n\r\n    private wireAlerts(question: QuestionBase,\r\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\r\n        if (question.alert && question.alert !== '') {\r\n            const alert = this.alertsFactory.getJsExpressionshowAlert(question, control, form);\r\n            control.setAlertFn(alert);\r\n        }\r\n    }\r\n    private wireHidersDisablers(question: QuestionBase,\r\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\r\n        if (question.hide && question.hide !== '') {\r\n            const hider = this.hidersDisablersFactory.getJsExpressionHider(question, control, form);\r\n            control.setHidingFn(hider);\r\n        }\r\n\r\n        if (question.disable && question.disable !== '') {\r\n            const disable =\r\n                this.hidersDisablersFactory.getJsExpressionDisabler(question, control, form);\r\n            control.setDisablingFn(disable);\r\n        }\r\n    }\r\n\r\n    private wireCalculator(question: QuestionBase,\r\n        control: AfeFormControl, dataSource?: any) {\r\n        if (question.calculateExpression && question.calculateExpression !== '') {\r\n            const helper: JsExpressionHelper = new JsExpressionHelper();\r\n            const runner: ExpressionRunner = new ExpressionRunner();\r\n            const runnable: Runnable = runner.getRunnable(question.calculateExpression\r\n                , control,\r\n                helper.helperFunctions,\r\n                dataSource);\r\n            // this functionality strictly assumes the calculateExpression function has been defined in the JsExpressionHelper class\r\n            control.setCalculatorFn(runnable.run);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","export const DEFAULT_STYLES = `a {\r\n      color: white;\r\n      text-decoration: none;\r\n      font-size: 12px;\r\n      text-transform: uppercase;\r\n    }\r\n\r\n    ul {\r\n      list-style-type: none;\r\n      margin: 2px auto;\r\n      position: relative;\r\n    }\r\n\r\n    li {\r\n      display: block;\r\n      padding: 10px 20px;\r\n      white-space: nowrap;\r\n      transition: all 0.3s ease-in;\r\n      border-bottom: 4px solid transparent;\r\n    }\r\n\r\n    li:hover {\r\n      border-bottom: 4px solid white;\r\n      opacity: 0.7;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .owl-theme .owl-controls .owl-nav {\r\n      position: absolute;\r\n      width: 100%;\r\n      top: 0;\r\n    }\r\n\r\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"] {\r\n      position: absolute;\r\n      background: none;\r\n      color: black;\r\n    }\r\n\r\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"]:hover {\r\n      background: none;\r\n      color: black;\r\n    }\r\n\r\n    .owl-theme .owl-controls .owl-nav .owl-next {\r\n      right: 0;\r\n      transform: translate(120%);\r\n    }\r\n\r\n    .owl-theme .owl-controls .owl-nav .owl-prev {\r\n      left: 0;\r\n      transform: translate(-120%);\r\n    }\r\n\r\n    .slick-initialized .swipe-tab-content {\r\n      position: relative;\r\n      min-height: 365px;\r\n    }\r\n    @media screen and (min-width: 767px) {\r\n      .slick-initialized .swipe-tab-content {\r\n        min-height: 500px;\r\n      }\r\n    }\r\n    .slick-initialized .swipe-tab {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      height: 50px;\r\n      background: none;\r\n      border: 0;\r\n      color: #757575;\r\n      cursor: pointer;\r\n      text-align: center;\r\n      border-bottom: 2px solid rgba(51, 122, 183, 0);\r\n      transition: all 0.5s;\r\n    }\r\n    .slick-initialized .swipe-tab:hover {\r\n      color: #337AB7;\r\n    }\r\n    .slick-initialized .swipe-tab.active-tab {\r\n      border-bottom-color: #337AB7;\r\n      color: #337AB7;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .disabled {\r\n      opacity: .5;\r\n      pointer-events: none;\r\n    }\r\n\r\n    .select2-container {\r\n      margin-top: -5px;\r\n    }\r\n\r\n    .btn {\r\n      padding: 0px 12px !important;\r\n    }\r\n\r\n    .form-tooltip{\r\n      color:rgb(51, 122, 183);\r\n      display: inline-block;\r\n    }\r\n    .question-info{\r\n          opacity:0;\r\n          height:0px;\r\n          display: none;\r\n          transition-duration: opacity 1s ease-out;\r\n          transtion-delay: 0.5s;\r\n          padding-top: 2px;\r\n          padding-bottom: 2px;\r\n          color: #696969;\r\n          border-style: ridge;\r\n          border-width: 1px;\r\n          border-color: #337ab7;\r\n          margin-top: 2px;\r\n    }\r\n    .hide-info{\r\n      display:none;\r\n      height:0px;\r\n    }\r\n    .form-tooltip:hover ~ .question-info {\r\n          display:block;\r\n          opacity:1;\r\n          height:auto;\r\n     }\r\n    .form-tooltip .tooltipcontent::after {\r\n          content: \" \";\r\n          position: absolute;\r\n          bottom: 100%;  /* At the top of the tooltip */\r\n          right: 0%;\r\n          margin-left: -5px;\r\n          border-width: 5px;\r\n          border-style: solid;\r\n          border-top-color: transparent;\r\n          border-right-color: transparent;\r\n          border-bottom-color: #337ab7;\r\n          border-left-color: transparent;\r\n }\r\n\r\n    ng-select.form-control {\r\n      padding-top: 0;\r\n      height: auto;\r\n      padding-bottom: 0;\r\n    }\r\n\r\n .forms-dropdown-menu {\r\n     max-height: 450px;\r\n     overflow-y: scroll;\r\n }\r\n .no-border {\r\n  border: 0;\r\n  box-shadow: none;\r\n}\r\n\r\n    `;\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DataSources {\r\n    private _dataSources: any = {};\r\n    constructor() {\r\n    }\r\n\r\n    get dataSources(): any {\r\n        return this._dataSources;\r\n    }\r\n\r\n    registerDataSource(key: string, dataSource: any, unWrap = false) {\r\n        if (unWrap) {\r\n            // tslint:disable-next-line:forin\r\n            for (const o in dataSource) {\r\n                console.log('registering', o, dataSource[o]);\r\n                this.registerDataSource(o, dataSource[o], false);\r\n            }\r\n        }\r\n        if (this.dataSources[key]) {\r\n            console.warn('Overriding registered data source', key);\r\n        }\r\n        this._dataSources[key] = dataSource;\r\n    }\r\n\r\n    clearDataSource(key: string) {\r\n        delete this._dataSources[key];\r\n    }\r\n\r\n}\r\n","import {\r\n  Component, OnInit, Input, Inject, OnChanges, SimpleChanges\r\n} from '@angular/core';\r\nimport 'hammerjs';\r\nimport { DEFAULT_STYLES } from './form-renderer.component.css';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { DataSources } from '../data-sources/data-sources';\r\nimport { NodeBase, LeafNode, GroupNode } from '../form-factory/form-node';\r\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\r\nimport { ValidationFactory } from '../form-factory/validation.factory';\r\nimport { DataSource } from '../question-models/interfaces/data-source';\r\nimport { FormErrorsService } from '../services/form-errors.service';\r\nimport { QuestionGroup } from '../question-models/group-question';\r\n// import { concat, of, Observable, Subject, BehaviorSubject } from 'rxjs';\r\n// import * as _ from 'lodash';\r\n\r\n// import { debounceTime, distinctUntilChanged, tap, switchMap, catchError, map } from 'rxjs/operators';\r\n// import { QuestionBase } from '../question-models';\r\n\r\n@Component({\r\n  selector: 'form-renderer',\r\n  template: `<!--CONTAINERS-->\r\n<div *ngIf=\"node.question.renderingType === 'form'\">\r\n  <div class=\"dropdown dropdown-tabs forms-dropdown\">\r\n    <a class=\"btn dropdown-toggle\" data-toggle=\"dropdown\">\r\n      <i class=\"fa fa-angle-double-down\"></i>\r\n    </a>\r\n    <ul class=\"dropdown-menu dropdown-menu-right forms-dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdownMenu\">\r\n      <li *ngFor=\"let question of node.question.questions; let i = index;\" (click)=\"clickTab(i)\">\r\n        {{question.label}}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <mat-tab-group (selectedIndexChange)='tabSelected($event)' [selectedIndex]='activeTab'>\r\n    <mat-tab [label]='question.label' *ngFor=\"let question of node.question.questions; let i = index;\">\r\n      <div (swipeLeft)='loadNextTab()' (swipeRight)='loadPreviousTab()'>\r\n        <form-renderer [node]=\"node.children[question.key]\" [parentComponent]=\"this\" [parentGroup]=\"node.control\"></form-renderer>\r\n      </div>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <div style=\"text-align: center;\">\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"loadPreviousTab()\" [ngClass]=\"{disabled: isCurrentTabFirst()}\">&lt;&lt;</button>\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"loadNextTab()\" [ngClass]=\"{disabled: isCurrentTabLast()}\">\r\n      &gt;&gt;</button>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"node.question.renderingType === 'page'\">\r\n  <!--<h2>{{node.question.label}}</h2>-->\r\n  <form-renderer *ngFor=\"let question of node.question.questions\" [parentComponent]=\"this\" [node]=\"node.children[question.key]\"\r\n    [parentGroup]=\"parentGroup\"></form-renderer>\r\n</div>\r\n<div *ngIf=\"node.question.renderingType === 'section' && checkSection(node)\"> \r\n  <div class=\"panel  panel-primary\">\r\n    <div class=\"panel-heading\">\r\n      <button type=\"button\" class=\"btn btn-primary pull-right\" (click)=\"isCollapsed = !isCollapsed\">\r\n        {{isCollapsed ? 'Show' : 'Hide'}}\r\n      </button> {{node.question.label}}\r\n    </div>\r\n    <div class=\"panel-body\" [collapse]=\"isCollapsed\">\r\n      <form-renderer *ngFor=\"let question of node.question.questions\" [parentComponent]=\"this\" [node]=\"node.children[question.key]\"\r\n        [parentGroup]=\"parentGroup\"></form-renderer>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- MESSAGES -->\r\n<div *ngIf=\"node.control && node.control.alert && node.control.alert !== ''\" class=\"alert alert-warning\">\r\n  <a class=\"close\" data-dismiss=\"alert\">&times;</a> {{node.control.alert}}\r\n</div>\r\n\r\n<!--CONTROLS-->\r\n\r\n<div *ngIf=\"node.question.controlType === 0\" class=\"form-group\" [formGroup]=\"parentGroup\" [hidden]=\"node.control.hidden\"\r\n  [ngClass]=\"{disabled: node.control.disabled}\">\r\n  <!--LEAF CONTROL-->\r\n  <div class=\"question-area\">\r\n    <a class=\"form-tooltip pull-right\" (click)=\"toggleInformation(node.question.extras.id)\" data-placement=\"right\"\r\n      *ngIf=\"node.question && node.question.extras.questionInfo  && node.question.extras.questionInfo !== ''  && node.question.extras.questionInfo !== ' '\">\r\n      <i class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></i>\r\n    </a>\r\n\r\n    <label *ngIf=\"node.question.label\" [style.color]=\"hasErrors()? 'red' :''\" class=\"control-label\" [attr.for]=\"node.question.key\">\r\n      {{node.question.required ? '*':''}} {{node.question.label}}\r\n    </label>\r\n    <div [ngSwitch]=\"node.question.renderingType\">\r\n      <select class=\"form-control\" *ngSwitchCase=\"'select'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\r\n        <option *ngFor=\"let o of node.question.options\" [ngValue]=\"o.value\">{{o.label}}\r\n        </option>\r\n      </select>\r\n\r\n      <remote-file-upload *ngSwitchCase=\"'file'\" [dataSource]=\"dataSource\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"\r\n        (fileChanged)=\"upload($event)\">\r\n      </remote-file-upload>\r\n      <textarea [placeholder]=\"node.question.placeholder\" [rows]=\"node.question.rows\" class=\"form-control\"\r\n        *ngSwitchCase=\"'textarea'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\r\n      </textarea>\r\n      <!--\r\n      <ng-select *ngSwitchCase=\"'remote-select'\" [items]=\"items$ | async\" bindLabel=\"label\" bindValue=\"value\" placeholder=\"{{node.question.placeholder}}\"\r\n        [hideSelected]=\"true\" [loading]=\"itemsLoading\"  [typeahead]=\"itemsInput$\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\r\n      </ng-select>\r\n    -->\r\n      <remote-select *ngSwitchCase=\"'remote-select'\" [placeholder]=\"node.question.placeholder\" tabindex=\"0\"\r\n        [dataSource]=\"dataSource\" [componentID]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"></remote-select>\r\n      <!--  \r\n      <date-time-picker *ngSwitchCase=\"'date'\" [showTime]=\"node.question.showTime\" tabindex=\"0\" [weeks]='node.question.extras.questionOptions.weeksList'\r\n        (onDateChange)=\"onDateChanged(node)\" [showWeeks]=\"node.question.showWeeksAdder\" [formControlName]=\"node.question.key\"\r\n        [id]=\"node.question.key + 'id'\"></date-time-picker>\r\n  -->\r\n\r\n      <ngx-date-time-picker *ngSwitchCase=\"'date'\" [showTime]=\"node.question.showTime\" [id]=\"node.question.key + 'id'\"\r\n        [formControlName]=\"node.question.key\" [weeks]='node.question.extras.questionOptions.weeksList' (onDateChange)=\"onDateChanged(node)\"\r\n        [showWeeks]=\"node.question.showWeeksAdder\"></ngx-date-time-picker>\r\n      <ng-select *ngSwitchCase=\"'multi-select'\" [style.height]=\"'auto'\"  [style.overflow-x]=\"'hidden'\" tabindex=\"0\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"\r\n          [options]=\"node.question.options\" [multiple]=\"true\">\r\n      </ng-select>\r\n      <ng-select *ngSwitchCase=\"'single-select'\" [style.height]='auto'  tabindex=\"0\" [formControlName]=\"node.question.key\"\r\n        [id]=\"node.question.key + 'id'\" [options]=\"node.question.options\" [multiple]=\"false\">\r\n      </ng-select>\r\n      <input class=\"form-control\" *ngSwitchCase=\"'number'\" [formControlName]=\"node.question.key \" [attr.placeholder]=\"node.question.placeholder \"\r\n        [type]=\"'number'\" [id]=\"node.question.key + 'id' \" [step]=\"'any'\" [min]=\"node.question.extras.questionOptions.min\"\r\n        [max]=\"node.question.extras.questionOptions.max\">\r\n      <input class=\"form-control\" *ngSwitchDefault [formControlName]=\"node.question.key \" [attr.placeholder]=\"node.question.placeholder \"\r\n        [type]=\"node.question.renderingType\" [id]=\"node.question.key + 'id' \">\r\n\r\n      <div *ngSwitchCase=\"'radio'\">\r\n        <div *ngFor=\"let o of node.question.options\">\r\n          <label class=\"form-control no-border\">\r\n            <input type=\"radio\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\" [value]=\"o.value\">\r\n            {{ o.label }}\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngSwitchCase=\"'checkbox'\">\r\n        <checkbox [id]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\" [options]=\"node.question.options\"></checkbox>\r\n      </div>\r\n\r\n      <div *ngIf=\"node.question.enableHistoricalValue && node.question.historicalDisplay\" style=\"margin-top: 2px;\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col-xs-9\">\r\n              <span class=\"text-warning\">Previous Value: </span>\r\n              <strong>{{node.question.historicalDisplay?.text}}</strong>\r\n              <span *ngIf=\"node.question.showHistoricalValueDate\">\r\n                <span> | </span>\r\n                <strong class=\"text-primary\">{{node.question.historicalDisplay?._date}} </strong>\r\n                <span class=\"text-primary\" *ngIf=\"node.question.historicalDisplay && node.question.historicalDisplay._date \"> ({{node.question.historicalDisplay._date | timeAgo}})</span>\r\n              </span>\r\n\r\n            </div>\r\n            <button type=\"button\" [node]=\"node\" [name]=\"'historyValue'\" class=\"btn btn-primary btn-small col-xs-3\">Use\r\n              Value\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <appointments-overview [node]=\"node\"></appointments-overview>\r\n      <div *ngIf=\"hasErrors() \">\r\n        <p *ngFor=\"let e of errors() \">\r\n          <span class=\"text-danger \">{{e}}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"question-info col-md-12 col-lg-12 col-sm-12\" id=\"{{node.question.extras.id}}\" *ngIf=\"node.question && node.question.extras.questionInfo  && node.question.extras.questionInfo !== ''  && node.question.extras.questionInfo !== ' '\">\r\n      {{node.question.extras.questionInfo}}\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n<div *ngIf=\"node.question.controlType === 1\" [hidden]=\"node.control.hidden\" [ngClass]=\"{disabled: node.control.disabled}\">\r\n\r\n\r\n  <!--ARRAY CONTROL-->\r\n  <div [ngSwitch]=\"node.question.renderingType \">\r\n    <div class='well' style=\"padding: 2px; \" *ngSwitchCase=\" 'repeating' \">\r\n      <h4 style=\"margin: 2px; font-weight: bold;\">{{node.question.label}}</h4>\r\n      <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:2px;\" />\r\n      <div [ngSwitch]=\"node.question.extras.type\">\r\n        <div *ngSwitchCase=\"'testOrder'\">\r\n          <div *ngFor=\"let child of node.children; let i=index \">\r\n            <form-renderer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\r\n            \"\r\n              [parentGroup]=\"child.control \"></form-renderer>\r\n            <div>{{child.orderNumber}}</div>\r\n            <button type=\"button \" class='btn btn-sm btn-danger' (click)=\"node.removeAt(i) \">Remove</button>\r\n            <br />\r\n            <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:1px;\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngSwitchCase=\"'obsGroup'\" style=\"margin-bottom:20px;\">\r\n          <div *ngFor=\"let child of node.children; let i=index \">\r\n            <form-renderer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\r\n            \"\r\n              [parentGroup]=\"child.control \"></form-renderer>\r\n            <button type=\"button \" class='btn btn-sm btn-danger' (click)=\"node.removeAt(i) \">Remove</button>\r\n            <br />\r\n            <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:1px;\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button type=\"button \" class='btn btn-primary' (click)=\"node.createChildNode() \">Add</button>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n<div *ngIf=\"node.question.controlType === 2\" [hidden]=\"node.control.hidden\" [ngClass]=\"{disabled: node.control.disabled}\">\r\n\r\n  <!--GROUP-->\r\n  <div [ngSwitch]=\"node.question.renderingType \">\r\n    <div *ngSwitchCase=\" 'group' \">\r\n      <form-renderer *ngFor=\"let question of node.question.questions \" [parentComponent]=\"this\" [node]=\"node.children[question.key]\r\n            \"\r\n        [parentGroup]=\"node.control \"></form-renderer>\r\n    </div>\r\n    <div *ngSwitchCase=\" 'field-set' \" style=\"border: 1px solid #eeeeee; padding: 2px; margin: 2px;\">\r\n      <form-renderer *ngFor=\"let question of node.question.questions \" [parentComponent]=\"this\" [node]=\"node.children[question.key]\r\n            \"\r\n        [parentGroup]=\"node.control \"></form-renderer>\r\n    </div>\r\n  </div>\r\n\r\n</div>`,\r\n  styles: ['../../style/app.css', DEFAULT_STYLES]\r\n})\r\nexport class FormRendererComponent implements OnInit {\r\n\r\n\r\n  @Input() public parentComponent: FormRendererComponent;\r\n  @Input() public node: NodeBase;\r\n  @Input() public parentGroup: AfeFormGroup;\r\n  public childComponents: FormRendererComponent[] = [];\r\n  public showTime: boolean;\r\n  public showWeeks: boolean;\r\n  public activeTab: number;\r\n  public dataSource: DataSource;\r\n  public isCollapsed = false;\r\n  public auto: any;\r\n\r\n  // items$: Observable<any[]>;\r\n  // itemsLoading = false;\r\n  // itemsInput$ = new Subject<string>();\r\n\r\n  constructor(\r\n    private validationFactory: ValidationFactory,\r\n    private dataSources: DataSources,\r\n    private formErrorsService: FormErrorsService,\r\n    @Inject(DOCUMENT) private document: any) {\r\n    this.activeTab = 0;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.setUpRemoteSelect();\r\n    this.setUpFileUpload();\r\n    if (this.node && this.node.form) {\r\n      const tab = this.node.form.valueProcessingInfo.lastFormTab;\r\n      if (tab && tab !== this.activeTab) {\r\n        this.activeTab = tab;\r\n      }\r\n    }\r\n    if (this.node && this.node.question.renderingType === 'form') {\r\n      this.formErrorsService.announceErrorField$.subscribe(\r\n        (error) => {\r\n          this.scrollToControl(error);\r\n        });\r\n    }\r\n\r\n    if (this.node && this.node.question.renderingType === 'section') {\r\n      this.isCollapsed = !(this.node.question as QuestionGroup).isExpanded;\r\n    }\r\n\r\n    if (this.parentComponent) {\r\n      this.parentComponent.addChildComponent(this);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public addChildComponent(child: FormRendererComponent) {\r\n    this.childComponents.push(child);\r\n  }\r\n\r\n  public setUpRemoteSelect() {\r\n    if (this.node && this.node.question.extras &&\r\n      this.node.question.renderingType === 'remote-select') {\r\n      // let selectQuestion = this.node.form.searchNodeByQuestionId(this.node.question.key)[0];\r\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\r\n     /*\r\n      let defaltValues = of([]);\r\n      if (this.dataSource.resolveSelectedValue(selectQuestion.control.value)) {\r\n        defaltValues = this.dataSource.resolveSelectedValue(selectQuestion.control.value).pipe(\r\n          catchError(() => of([])), // empty list on error\r\n        );\r\n      }\r\n      this.items$ = concat(\r\n        defaltValues,\r\n        this.itemsInput$.pipe(\r\n          debounceTime(200),\r\n          distinctUntilChanged(),\r\n          tap(() => this.itemsLoading = true),\r\n          switchMap(term => this.dataSource.searchOptions(term).pipe(\r\n            catchError(() => of([])), // empty list on error\r\n            tap(() => {\r\n              this.itemsLoading = false\r\n            })\r\n          ))\r\n        )\r\n      );\r\n      */\r\n      if (this.dataSource && this.node.question.dataSourceOptions) {\r\n        this.dataSource.dataSourceOptions = this.node.question.dataSourceOptions;\r\n      }\r\n    }\r\n  }\r\n\r\n  public setUpFileUpload() {\r\n    if (this.node && this.node.question.extras && this.node.question.renderingType === 'file') {\r\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\r\n      // console.log('Key', this.node.question);\r\n      // console.log('Data source', this.dataSource);\r\n    }\r\n\r\n  }\r\n\r\n  checkSection(node: NodeBase) {\r\n    if (node.question.renderingType === 'section') {\r\n      let groupChildrenHidden = false;\r\n      const allSectionControlsHidden = Object.keys(node.children).every((k) => {\r\n        const innerNode = node.children[k];\r\n        if (innerNode instanceof GroupNode) {\r\n          groupChildrenHidden = Object.keys(innerNode.children).every((i) => innerNode.children[i].control.hidden);\r\n        }\r\n        return node.children[k].control.hidden || groupChildrenHidden;\r\n      });\r\n      return !allSectionControlsHidden;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public clickTab(tabNumber) {\r\n    this.activeTab = tabNumber;\r\n  }\r\n\r\n  public loadPreviousTab() {\r\n    if (!this.isCurrentTabFirst()) {\r\n      this.clickTab(this.activeTab - 1);\r\n      document.body.scrollTop = 0;\r\n    }\r\n  }\r\n\r\n  public isCurrentTabFirst() {\r\n    return this.activeTab === 0;\r\n  }\r\n\r\n  public isCurrentTabLast() {\r\n    return this.activeTab === this.node.question['questions'].length - 1;\r\n  }\r\n\r\n  public loadNextTab() {\r\n    if (!this.isCurrentTabLast()) {\r\n      this.clickTab(this.activeTab + 1);\r\n      document.body.scrollTop = 0;\r\n    }\r\n  }\r\n  public tabSelected($event) {\r\n    this.activeTab = $event;\r\n    this.setPreviousTab();\r\n  }\r\n  public setPreviousTab() {\r\n    if (this.node && this.node.form) {\r\n      this.node.form.valueProcessingInfo['lastFormTab'] = this.activeTab;\r\n    }\r\n\r\n  }\r\n  public hasErrors() {\r\n    return this.node.control.touched && !this.node.control.valid;\r\n  }\r\n\r\n  public errors() {\r\n    return this.getErrors(this.node);\r\n  }\r\n\r\n\r\n  public scrollToControl(error: string) {\r\n\r\n    const tab: number = +error.split(',')[0];\r\n    const elSelector = error.split(',')[1] + 'id';\r\n\r\n    // the tab components\r\n    const tabComponent: FormRendererComponent = this.childComponents[tab];\r\n\r\n    this.clickTab(tab);\r\n\r\n    setTimeout(() => {\r\n\r\n      // expand all sections\r\n      tabComponent.childComponents.forEach((section) => {\r\n        section.isCollapsed = false;\r\n\r\n        setTimeout(() => {\r\n          const element: any = this.document.getElementById(elSelector);\r\n          if (element !== null && element.focus) {\r\n            element.focus();\r\n            element.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n          }\r\n        }, 100);\r\n      });\r\n\r\n    }, 200);\r\n  }\r\n\r\n  public onDateChanged(node: LeafNode) {\r\n    // console.log('Node', node);\r\n    this.node = node;\r\n  }\r\n\r\n  public upload(event) {\r\n    // console.log('Event', event);\r\n    // console.log('Data', this.dataSource);\r\n  }\r\n\r\n  public toggleInformation(infoId) {\r\n    const e = document.getElementById(infoId);\r\n\r\n    if (e.style.display === 'block') {\r\n      e.style.display = 'none';\r\n    } else {\r\n      e.style.display = 'block';\r\n    }\r\n\r\n\r\n    console.log('InfoId', infoId);\r\n  }\r\n\r\n\r\n  private getErrors(node: NodeBase) {\r\n    const errors: any = node.control.errors;\r\n\r\n    if (errors) {\r\n\r\n      return this.validationFactory.errors(errors, node.question);\r\n    }\r\n\r\n    return [];\r\n  }\r\n}\r\n","import {\r\n    Component, OnInit, Input\r\n} from '@angular/core';\r\nimport * as _ from 'lodash';\r\n\r\nimport { Form } from '../form-factory/form';\r\nimport { ValidationFactory } from '../form-factory/validation.factory';\r\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\r\nimport { QuestionGroup } from '../question-models/group-question';\r\nimport { FormErrorsService } from '../services/form-errors.service';\r\n\r\n@Component({\r\n    selector: 'error-renderer',\r\n    template: `<div *ngIf=\"showErrors()\" class=\"container\">\r\n<ul class=\"list-group\">\r\n  <li class=\"list-group-item list-group-item-warning\" *ngFor=\"let errorNode of errorNodes\" (click)=announceErrorField(errorNode)>\r\n    <div class=\"error\" *ngIf=\"errorNode.control.valid == false\">\r\n      <h4>{{errorNode.question.label}}</h4>\r\n      <span class=\"text-danger\"> {{getControlError(errorNode)}}</span>\r\n    </div>\r\n  </li>\r\n</ul>\r\n</div>\r\n`,\r\n    styles: [`ul{list-style:none}.list-group-item{padding:2px 15px;cursor:pointer}ul li:hover{background-color:#fff}h4{margin-top:7px;margin-bottom:7px}`]\r\n})\r\nexport class ErrorRendererComponent implements OnInit {\r\n\r\n  @Input() form: Form;\r\n\r\n  constructor(private validationFactory: ValidationFactory, private formErrorsService: FormErrorsService) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  showErrors() {\r\n    return !this.form.valid && this.form.showErrors;\r\n  }\r\n\r\n  get errorNodes() {\r\n\r\n    const invalidControls = this.form.markInvalidControls(this.form.rootNode, []);\r\n    return invalidControls;\r\n  }\r\n\r\n  getControlError(node: LeafNode) {\r\n      const errors: any = node.control.errors;\r\n\r\n      if (errors) {\r\n\r\n          return this.validationFactory.errors(errors, node.question);\r\n      }\r\n\r\n      return [];\r\n  }\r\n\r\n  announceErrorField(errorNode: LeafNode) {\r\n\r\n    const nodes: Array<NodeBase> = this.form.searchNodeByQuestionId(errorNode.path.substring(0, errorNode.path.indexOf('.')));\r\n\r\n    _.forEach(nodes, (node: NodeBase) => {\r\n\r\n      if (node.question.renderingType === 'page') {\r\n        const pageIndex: number = this.getPageIndex(node);\r\n        this.formErrorsService.announceErrorField(pageIndex + ',' + errorNode.question.key);\r\n      }\r\n    });\r\n  }\r\n\r\n  getPageIndex(node: NodeBase) {\r\n     const questionGroup: QuestionGroup = this.form.rootNode.question as QuestionGroup;\r\n     return questionGroup.questions.indexOf(node.question);\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\nimport { QuestionBase } from '../question-models/question-base';\r\n\r\nexport class HistoricalFieldHelperService {\r\n\r\n  public getDisplayTextFromOptions(question: QuestionBase , valueProperty: string, displayProperty: string): string {\r\n\r\n    let displayText = '';\r\n    const historicalValue = question.historicalDataValue;\r\n    if (_.isArray(historicalValue.value)) {\r\n      let valueConverted = 0;\r\n      _.each(historicalValue.value, (val) => {\r\n        _.each(question.options, (option) => {\r\n\r\n          if (option[valueProperty] === val) {\r\n            if (valueConverted === 0) {\r\n              displayText = displayText + option[displayProperty];\r\n            } else {\r\n              displayText = displayText + ', ' + option[displayProperty];\r\n            }\r\n            valueConverted++;\r\n          }\r\n        });\r\n      });\r\n\r\n    } else {\r\n      _.each(question.options, (option) => {\r\n        if (option[valueProperty] === historicalValue.value) {\r\n          displayText = option[displayProperty];\r\n        }\r\n      });\r\n    }\r\n    return displayText ;\r\n  }\r\n\r\n\r\n}\r\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { HistoricalFieldHelperService } from '../helpers/historical-field-helper-service';\r\nimport * as _ from 'lodash';\r\nimport { NodeBase } from '../form-factory/form-node';\r\n\r\n@Directive({\r\n  selector: `[node]`\r\n})\r\n\r\nexport class HistoricalValueDirective {\r\n\r\n  @Input() _node: NodeBase;\r\n  @Output() _nodeChange = new EventEmitter<Object>();\r\n\r\n  historicalDisplay: string;\r\n\r\n  constructor(private historicalFieldHelper: HistoricalFieldHelperService) {\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  setValue(e) {\r\n\r\n    if (e.target.name === 'historyValue') {\r\n\r\n      if (this._node && (!this.compareString(this._node.question.renderingType, 'page')\r\n        || !this.compareString(this._node.question.renderingType, 'section'))) {\r\n\r\n        this._node.control.setValue(this._node.question.historicalDataValue.value);\r\n\r\n        this._node.question['historicalValue'] = this._node.question.historicalDataValue;\r\n        e.stopPropagation();\r\n        this._nodeChange.emit(this._node);\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n  private compareString(a, b) {\r\n    if (a === b) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  @Input()\r\n  set node(node: NodeBase) {\r\n\r\n    if (node) {\r\n      this._node = node;\r\n      if (this._node.question.enableHistoricalValue && !_.isUndefined(this._node.question.historicalDataValue)) {\r\n        const display: any = { text: '', _date: '' };\r\n        if ((this._node.question.renderingType === 'select'\r\n          || this._node.question.renderingType === 'multi-select'\r\n          || this._node.question.renderingType === 'single-select')) {\r\n\r\n          display.text = this.historicalFieldHelper.getDisplayTextFromOptions(\r\n            this._node.question,\r\n            'value',\r\n            'label'\r\n          );\r\n          display._date = this._node.question.historicalDataValue.valueDate;\r\n\r\n          this._node.question['historicalDisplay'] = display;\r\n\r\n        } else if (!_.isUndefined(this._node.question.historicalDataValue)) {\r\n\r\n          display.text = this._node.question.historicalDataValue.value;\r\n          display._date = this._node.question.historicalDataValue.valueDate;\r\n\r\n          this._node.question['historicalDisplay'] = display;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","export const STYLE = `\r\nng-select {\r\n  display: inline-block;\r\n  margin: 0;\r\n  position: relative;\r\n  vertical-align: middle;\r\n  width: 100%;\r\n}\r\nng-select * {\r\n  box-sizing: border-box;\r\n  font-family: Sans-Serif;\r\n}\r\nng-select > div {\r\n  border: 1px solid #ddd;\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  width: 100%;\r\n}\r\nng-select > div.disabled {\r\n  background-color: #eee;\r\n  color: #aaa;\r\n  cursor: default;\r\n  pointer-events: none;\r\n}\r\nng-select > div > div.single {\r\n  display: flex;\r\n  height: 30px;\r\n  width: 100%;\r\n}\r\nng-select > div > div.single > div.value,\r\nng-select > div > div.single > div.placeholder {\r\n  flex: 1;\r\n  line-height: 30px;\r\n  overflow: hidden;\r\n  padding: 0 10px;\r\n  white-space: nowrap;\r\n}\r\nng-select > div > div.single > div.placeholder {\r\n  color: #a9a9a9;\r\n}\r\nng-select > div > div.single > div.clear,\r\nng-select > div > div.single > div.toggle {\r\n  color: #aaa;\r\n  line-height: 30px;\r\n  text-align: center;\r\n  width: 30px;\r\n}\r\nng-select > div > div.single > div.clear:hover,\r\nng-select > div > div.single > div.toggle:hover {\r\n  background-color: #ececec;\r\n}\r\nng-select > div > div.single > div.clear {\r\n  font-size: 18px;\r\n}\r\nng-select > div > div.single > div.toggle {\r\n  font-size: 14px;\r\n}\r\nng-select > div > div.multiple {\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  height: 100%;\r\n  min-height: 30px;\r\n  padding: 0 10px;\r\n  width: 100%;\r\n}\r\nng-select > div > div.multiple > div.option {\r\n  background-color: #eee;\r\n  border: 1px solid #aaa;\r\n  border-radius: 4px;\r\n  color: #333;\r\n  cursor: default;\r\n  display: inline-block;\r\n  flex-shrink: 0;\r\n  font-size: 14px;\r\n  line-height: 22px;\r\n  margin: 3px 5px 3px 0;\r\n  padding: 0 4px;\r\n}\r\nng-select > div > div.multiple > div.option span.deselect-option {\r\n  color: #aaa;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  height: 20px;\r\n  line-height: 20px;\r\n}\r\nng-select > div > div.multiple > div.option span.deselect-option:hover {\r\n  color: #555;\r\n}\r\nng-select > div > div.multiple input {\r\n  background-color: transparent;\r\n  border: none;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  padding: 0;\r\n}\r\nng-select > div > div.multiple input:focus {\r\n  outline: none;\r\n}\r\n`;\r\n","export class Option {\r\n\r\n    value: string;\r\n    label: string;\r\n\r\n    disabled: boolean;\r\n    highlighted: boolean;\r\n    selected: boolean;\r\n    shown: boolean;\r\n\r\n    constructor(value: string, label: string) {\r\n        this.value = value;\r\n        this.label = label;\r\n\r\n        this.disabled = false;\r\n        this.highlighted = false;\r\n        this.selected = false;\r\n        this.shown = true;\r\n    }\r\n\r\n    show() {\r\n        this.shown = true;\r\n    }\r\n\r\n    hide() {\r\n        this.shown = false;\r\n    }\r\n\r\n    disable() {\r\n        this.disabled = true;\r\n    }\r\n\r\n    enable() {\r\n        this.disabled = false;\r\n    }\r\n\r\n    undecoratedCopy() {\r\n        return {\r\n            label: this.label,\r\n            value: this.value\r\n        };\r\n    }\r\n}\r\n","export class Diacritics {\r\n\r\n    static DIACRITICS = {\r\n        '\\u24B6': 'A',\r\n        '\\uFF21': 'A',\r\n        '\\u00C0': 'A',\r\n        '\\u00C1': 'A',\r\n        '\\u00C2': 'A',\r\n        '\\u1EA6': 'A',\r\n        '\\u1EA4': 'A',\r\n        '\\u1EAA': 'A',\r\n        '\\u1EA8': 'A',\r\n        '\\u00C3': 'A',\r\n        '\\u0100': 'A',\r\n        '\\u0102': 'A',\r\n        '\\u1EB0': 'A',\r\n        '\\u1EAE': 'A',\r\n        '\\u1EB4': 'A',\r\n        '\\u1EB2': 'A',\r\n        '\\u0226': 'A',\r\n        '\\u01E0': 'A',\r\n        '\\u00C4': 'A',\r\n        '\\u01DE': 'A',\r\n        '\\u1EA2': 'A',\r\n        '\\u00C5': 'A',\r\n        '\\u01FA': 'A',\r\n        '\\u01CD': 'A',\r\n        '\\u0200': 'A',\r\n        '\\u0202': 'A',\r\n        '\\u1EA0': 'A',\r\n        '\\u1EAC': 'A',\r\n        '\\u1EB6': 'A',\r\n        '\\u1E00': 'A',\r\n        '\\u0104': 'A',\r\n        '\\u023A': 'A',\r\n        '\\u2C6F': 'A',\r\n        '\\uA732': 'AA',\r\n        '\\u00C6': 'AE',\r\n        '\\u01FC': 'AE',\r\n        '\\u01E2': 'AE',\r\n        '\\uA734': 'AO',\r\n        '\\uA736': 'AU',\r\n        '\\uA738': 'AV',\r\n        '\\uA73A': 'AV',\r\n        '\\uA73C': 'AY',\r\n        '\\u24B7': 'B',\r\n        '\\uFF22': 'B',\r\n        '\\u1E02': 'B',\r\n        '\\u1E04': 'B',\r\n        '\\u1E06': 'B',\r\n        '\\u0243': 'B',\r\n        '\\u0182': 'B',\r\n        '\\u0181': 'B',\r\n        '\\u24B8': 'C',\r\n        '\\uFF23': 'C',\r\n        '\\u0106': 'C',\r\n        '\\u0108': 'C',\r\n        '\\u010A': 'C',\r\n        '\\u010C': 'C',\r\n        '\\u00C7': 'C',\r\n        '\\u1E08': 'C',\r\n        '\\u0187': 'C',\r\n        '\\u023B': 'C',\r\n        '\\uA73E': 'C',\r\n        '\\u24B9': 'D',\r\n        '\\uFF24': 'D',\r\n        '\\u1E0A': 'D',\r\n        '\\u010E': 'D',\r\n        '\\u1E0C': 'D',\r\n        '\\u1E10': 'D',\r\n        '\\u1E12': 'D',\r\n        '\\u1E0E': 'D',\r\n        '\\u0110': 'D',\r\n        '\\u018B': 'D',\r\n        '\\u018A': 'D',\r\n        '\\u0189': 'D',\r\n        '\\uA779': 'D',\r\n        '\\u01F1': 'DZ',\r\n        '\\u01C4': 'DZ',\r\n        '\\u01F2': 'Dz',\r\n        '\\u01C5': 'Dz',\r\n        '\\u24BA': 'E',\r\n        '\\uFF25': 'E',\r\n        '\\u00C8': 'E',\r\n        '\\u00C9': 'E',\r\n        '\\u00CA': 'E',\r\n        '\\u1EC0': 'E',\r\n        '\\u1EBE': 'E',\r\n        '\\u1EC4': 'E',\r\n        '\\u1EC2': 'E',\r\n        '\\u1EBC': 'E',\r\n        '\\u0112': 'E',\r\n        '\\u1E14': 'E',\r\n        '\\u1E16': 'E',\r\n        '\\u0114': 'E',\r\n        '\\u0116': 'E',\r\n        '\\u00CB': 'E',\r\n        '\\u1EBA': 'E',\r\n        '\\u011A': 'E',\r\n        '\\u0204': 'E',\r\n        '\\u0206': 'E',\r\n        '\\u1EB8': 'E',\r\n        '\\u1EC6': 'E',\r\n        '\\u0228': 'E',\r\n        '\\u1E1C': 'E',\r\n        '\\u0118': 'E',\r\n        '\\u1E18': 'E',\r\n        '\\u1E1A': 'E',\r\n        '\\u0190': 'E',\r\n        '\\u018E': 'E',\r\n        '\\u24BB': 'F',\r\n        '\\uFF26': 'F',\r\n        '\\u1E1E': 'F',\r\n        '\\u0191': 'F',\r\n        '\\uA77B': 'F',\r\n        '\\u24BC': 'G',\r\n        '\\uFF27': 'G',\r\n        '\\u01F4': 'G',\r\n        '\\u011C': 'G',\r\n        '\\u1E20': 'G',\r\n        '\\u011E': 'G',\r\n        '\\u0120': 'G',\r\n        '\\u01E6': 'G',\r\n        '\\u0122': 'G',\r\n        '\\u01E4': 'G',\r\n        '\\u0193': 'G',\r\n        '\\uA7A0': 'G',\r\n        '\\uA77D': 'G',\r\n        '\\uA77E': 'G',\r\n        '\\u24BD': 'H',\r\n        '\\uFF28': 'H',\r\n        '\\u0124': 'H',\r\n        '\\u1E22': 'H',\r\n        '\\u1E26': 'H',\r\n        '\\u021E': 'H',\r\n        '\\u1E24': 'H',\r\n        '\\u1E28': 'H',\r\n        '\\u1E2A': 'H',\r\n        '\\u0126': 'H',\r\n        '\\u2C67': 'H',\r\n        '\\u2C75': 'H',\r\n        '\\uA78D': 'H',\r\n        '\\u24BE': 'I',\r\n        '\\uFF29': 'I',\r\n        '\\u00CC': 'I',\r\n        '\\u00CD': 'I',\r\n        '\\u00CE': 'I',\r\n        '\\u0128': 'I',\r\n        '\\u012A': 'I',\r\n        '\\u012C': 'I',\r\n        '\\u0130': 'I',\r\n        '\\u00CF': 'I',\r\n        '\\u1E2E': 'I',\r\n        '\\u1EC8': 'I',\r\n        '\\u01CF': 'I',\r\n        '\\u0208': 'I',\r\n        '\\u020A': 'I',\r\n        '\\u1ECA': 'I',\r\n        '\\u012E': 'I',\r\n        '\\u1E2C': 'I',\r\n        '\\u0197': 'I',\r\n        '\\u24BF': 'J',\r\n        '\\uFF2A': 'J',\r\n        '\\u0134': 'J',\r\n        '\\u0248': 'J',\r\n        '\\u24C0': 'K',\r\n        '\\uFF2B': 'K',\r\n        '\\u1E30': 'K',\r\n        '\\u01E8': 'K',\r\n        '\\u1E32': 'K',\r\n        '\\u0136': 'K',\r\n        '\\u1E34': 'K',\r\n        '\\u0198': 'K',\r\n        '\\u2C69': 'K',\r\n        '\\uA740': 'K',\r\n        '\\uA742': 'K',\r\n        '\\uA744': 'K',\r\n        '\\uA7A2': 'K',\r\n        '\\u24C1': 'L',\r\n        '\\uFF2C': 'L',\r\n        '\\u013F': 'L',\r\n        '\\u0139': 'L',\r\n        '\\u013D': 'L',\r\n        '\\u1E36': 'L',\r\n        '\\u1E38': 'L',\r\n        '\\u013B': 'L',\r\n        '\\u1E3C': 'L',\r\n        '\\u1E3A': 'L',\r\n        '\\u0141': 'L',\r\n        '\\u023D': 'L',\r\n        '\\u2C62': 'L',\r\n        '\\u2C60': 'L',\r\n        '\\uA748': 'L',\r\n        '\\uA746': 'L',\r\n        '\\uA780': 'L',\r\n        '\\u01C7': 'LJ',\r\n        '\\u01C8': 'Lj',\r\n        '\\u24C2': 'M',\r\n        '\\uFF2D': 'M',\r\n        '\\u1E3E': 'M',\r\n        '\\u1E40': 'M',\r\n        '\\u1E42': 'M',\r\n        '\\u2C6E': 'M',\r\n        '\\u019C': 'M',\r\n        '\\u24C3': 'N',\r\n        '\\uFF2E': 'N',\r\n        '\\u01F8': 'N',\r\n        '\\u0143': 'N',\r\n        '\\u00D1': 'N',\r\n        '\\u1E44': 'N',\r\n        '\\u0147': 'N',\r\n        '\\u1E46': 'N',\r\n        '\\u0145': 'N',\r\n        '\\u1E4A': 'N',\r\n        '\\u1E48': 'N',\r\n        '\\u0220': 'N',\r\n        '\\u019D': 'N',\r\n        '\\uA790': 'N',\r\n        '\\uA7A4': 'N',\r\n        '\\u01CA': 'NJ',\r\n        '\\u01CB': 'Nj',\r\n        '\\u24C4': 'O',\r\n        '\\uFF2F': 'O',\r\n        '\\u00D2': 'O',\r\n        '\\u00D3': 'O',\r\n        '\\u00D4': 'O',\r\n        '\\u1ED2': 'O',\r\n        '\\u1ED0': 'O',\r\n        '\\u1ED6': 'O',\r\n        '\\u1ED4': 'O',\r\n        '\\u00D5': 'O',\r\n        '\\u1E4C': 'O',\r\n        '\\u022C': 'O',\r\n        '\\u1E4E': 'O',\r\n        '\\u014C': 'O',\r\n        '\\u1E50': 'O',\r\n        '\\u1E52': 'O',\r\n        '\\u014E': 'O',\r\n        '\\u022E': 'O',\r\n        '\\u0230': 'O',\r\n        '\\u00D6': 'O',\r\n        '\\u022A': 'O',\r\n        '\\u1ECE': 'O',\r\n        '\\u0150': 'O',\r\n        '\\u01D1': 'O',\r\n        '\\u020C': 'O',\r\n        '\\u020E': 'O',\r\n        '\\u01A0': 'O',\r\n        '\\u1EDC': 'O',\r\n        '\\u1EDA': 'O',\r\n        '\\u1EE0': 'O',\r\n        '\\u1EDE': 'O',\r\n        '\\u1EE2': 'O',\r\n        '\\u1ECC': 'O',\r\n        '\\u1ED8': 'O',\r\n        '\\u01EA': 'O',\r\n        '\\u01EC': 'O',\r\n        '\\u00D8': 'O',\r\n        '\\u01FE': 'O',\r\n        '\\u0186': 'O',\r\n        '\\u019F': 'O',\r\n        '\\uA74A': 'O',\r\n        '\\uA74C': 'O',\r\n        '\\u01A2': 'OI',\r\n        '\\uA74E': 'OO',\r\n        '\\u0222': 'OU',\r\n        '\\u24C5': 'P',\r\n        '\\uFF30': 'P',\r\n        '\\u1E54': 'P',\r\n        '\\u1E56': 'P',\r\n        '\\u01A4': 'P',\r\n        '\\u2C63': 'P',\r\n        '\\uA750': 'P',\r\n        '\\uA752': 'P',\r\n        '\\uA754': 'P',\r\n        '\\u24C6': 'Q',\r\n        '\\uFF31': 'Q',\r\n        '\\uA756': 'Q',\r\n        '\\uA758': 'Q',\r\n        '\\u024A': 'Q',\r\n        '\\u24C7': 'R',\r\n        '\\uFF32': 'R',\r\n        '\\u0154': 'R',\r\n        '\\u1E58': 'R',\r\n        '\\u0158': 'R',\r\n        '\\u0210': 'R',\r\n        '\\u0212': 'R',\r\n        '\\u1E5A': 'R',\r\n        '\\u1E5C': 'R',\r\n        '\\u0156': 'R',\r\n        '\\u1E5E': 'R',\r\n        '\\u024C': 'R',\r\n        '\\u2C64': 'R',\r\n        '\\uA75A': 'R',\r\n        '\\uA7A6': 'R',\r\n        '\\uA782': 'R',\r\n        '\\u24C8': 'S',\r\n        '\\uFF33': 'S',\r\n        '\\u1E9E': 'S',\r\n        '\\u015A': 'S',\r\n        '\\u1E64': 'S',\r\n        '\\u015C': 'S',\r\n        '\\u1E60': 'S',\r\n        '\\u0160': 'S',\r\n        '\\u1E66': 'S',\r\n        '\\u1E62': 'S',\r\n        '\\u1E68': 'S',\r\n        '\\u0218': 'S',\r\n        '\\u015E': 'S',\r\n        '\\u2C7E': 'S',\r\n        '\\uA7A8': 'S',\r\n        '\\uA784': 'S',\r\n        '\\u24C9': 'T',\r\n        '\\uFF34': 'T',\r\n        '\\u1E6A': 'T',\r\n        '\\u0164': 'T',\r\n        '\\u1E6C': 'T',\r\n        '\\u021A': 'T',\r\n        '\\u0162': 'T',\r\n        '\\u1E70': 'T',\r\n        '\\u1E6E': 'T',\r\n        '\\u0166': 'T',\r\n        '\\u01AC': 'T',\r\n        '\\u01AE': 'T',\r\n        '\\u023E': 'T',\r\n        '\\uA786': 'T',\r\n        '\\uA728': 'TZ',\r\n        '\\u24CA': 'U',\r\n        '\\uFF35': 'U',\r\n        '\\u00D9': 'U',\r\n        '\\u00DA': 'U',\r\n        '\\u00DB': 'U',\r\n        '\\u0168': 'U',\r\n        '\\u1E78': 'U',\r\n        '\\u016A': 'U',\r\n        '\\u1E7A': 'U',\r\n        '\\u016C': 'U',\r\n        '\\u00DC': 'U',\r\n        '\\u01DB': 'U',\r\n        '\\u01D7': 'U',\r\n        '\\u01D5': 'U',\r\n        '\\u01D9': 'U',\r\n        '\\u1EE6': 'U',\r\n        '\\u016E': 'U',\r\n        '\\u0170': 'U',\r\n        '\\u01D3': 'U',\r\n        '\\u0214': 'U',\r\n        '\\u0216': 'U',\r\n        '\\u01AF': 'U',\r\n        '\\u1EEA': 'U',\r\n        '\\u1EE8': 'U',\r\n        '\\u1EEE': 'U',\r\n        '\\u1EEC': 'U',\r\n        '\\u1EF0': 'U',\r\n        '\\u1EE4': 'U',\r\n        '\\u1E72': 'U',\r\n        '\\u0172': 'U',\r\n        '\\u1E76': 'U',\r\n        '\\u1E74': 'U',\r\n        '\\u0244': 'U',\r\n        '\\u24CB': 'V',\r\n        '\\uFF36': 'V',\r\n        '\\u1E7C': 'V',\r\n        '\\u1E7E': 'V',\r\n        '\\u01B2': 'V',\r\n        '\\uA75E': 'V',\r\n        '\\u0245': 'V',\r\n        '\\uA760': 'VY',\r\n        '\\u24CC': 'W',\r\n        '\\uFF37': 'W',\r\n        '\\u1E80': 'W',\r\n        '\\u1E82': 'W',\r\n        '\\u0174': 'W',\r\n        '\\u1E86': 'W',\r\n        '\\u1E84': 'W',\r\n        '\\u1E88': 'W',\r\n        '\\u2C72': 'W',\r\n        '\\u24CD': 'X',\r\n        '\\uFF38': 'X',\r\n        '\\u1E8A': 'X',\r\n        '\\u1E8C': 'X',\r\n        '\\u24CE': 'Y',\r\n        '\\uFF39': 'Y',\r\n        '\\u1EF2': 'Y',\r\n        '\\u00DD': 'Y',\r\n        '\\u0176': 'Y',\r\n        '\\u1EF8': 'Y',\r\n        '\\u0232': 'Y',\r\n        '\\u1E8E': 'Y',\r\n        '\\u0178': 'Y',\r\n        '\\u1EF6': 'Y',\r\n        '\\u1EF4': 'Y',\r\n        '\\u01B3': 'Y',\r\n        '\\u024E': 'Y',\r\n        '\\u1EFE': 'Y',\r\n        '\\u24CF': 'Z',\r\n        '\\uFF3A': 'Z',\r\n        '\\u0179': 'Z',\r\n        '\\u1E90': 'Z',\r\n        '\\u017B': 'Z',\r\n        '\\u017D': 'Z',\r\n        '\\u1E92': 'Z',\r\n        '\\u1E94': 'Z',\r\n        '\\u01B5': 'Z',\r\n        '\\u0224': 'Z',\r\n        '\\u2C7F': 'Z',\r\n        '\\u2C6B': 'Z',\r\n        '\\uA762': 'Z',\r\n        '\\u24D0': 'a',\r\n        '\\uFF41': 'a',\r\n        '\\u1E9A': 'a',\r\n        '\\u00E0': 'a',\r\n        '\\u00E1': 'a',\r\n        '\\u00E2': 'a',\r\n        '\\u1EA7': 'a',\r\n        '\\u1EA5': 'a',\r\n        '\\u1EAB': 'a',\r\n        '\\u1EA9': 'a',\r\n        '\\u00E3': 'a',\r\n        '\\u0101': 'a',\r\n        '\\u0103': 'a',\r\n        '\\u1EB1': 'a',\r\n        '\\u1EAF': 'a',\r\n        '\\u1EB5': 'a',\r\n        '\\u1EB3': 'a',\r\n        '\\u0227': 'a',\r\n        '\\u01E1': 'a',\r\n        '\\u00E4': 'a',\r\n        '\\u01DF': 'a',\r\n        '\\u1EA3': 'a',\r\n        '\\u00E5': 'a',\r\n        '\\u01FB': 'a',\r\n        '\\u01CE': 'a',\r\n        '\\u0201': 'a',\r\n        '\\u0203': 'a',\r\n        '\\u1EA1': 'a',\r\n        '\\u1EAD': 'a',\r\n        '\\u1EB7': 'a',\r\n        '\\u1E01': 'a',\r\n        '\\u0105': 'a',\r\n        '\\u2C65': 'a',\r\n        '\\u0250': 'a',\r\n        '\\uA733': 'aa',\r\n        '\\u00E6': 'ae',\r\n        '\\u01FD': 'ae',\r\n        '\\u01E3': 'ae',\r\n        '\\uA735': 'ao',\r\n        '\\uA737': 'au',\r\n        '\\uA739': 'av',\r\n        '\\uA73B': 'av',\r\n        '\\uA73D': 'ay',\r\n        '\\u24D1': 'b',\r\n        '\\uFF42': 'b',\r\n        '\\u1E03': 'b',\r\n        '\\u1E05': 'b',\r\n        '\\u1E07': 'b',\r\n        '\\u0180': 'b',\r\n        '\\u0183': 'b',\r\n        '\\u0253': 'b',\r\n        '\\u24D2': 'c',\r\n        '\\uFF43': 'c',\r\n        '\\u0107': 'c',\r\n        '\\u0109': 'c',\r\n        '\\u010B': 'c',\r\n        '\\u010D': 'c',\r\n        '\\u00E7': 'c',\r\n        '\\u1E09': 'c',\r\n        '\\u0188': 'c',\r\n        '\\u023C': 'c',\r\n        '\\uA73F': 'c',\r\n        '\\u2184': 'c',\r\n        '\\u24D3': 'd',\r\n        '\\uFF44': 'd',\r\n        '\\u1E0B': 'd',\r\n        '\\u010F': 'd',\r\n        '\\u1E0D': 'd',\r\n        '\\u1E11': 'd',\r\n        '\\u1E13': 'd',\r\n        '\\u1E0F': 'd',\r\n        '\\u0111': 'd',\r\n        '\\u018C': 'd',\r\n        '\\u0256': 'd',\r\n        '\\u0257': 'd',\r\n        '\\uA77A': 'd',\r\n        '\\u01F3': 'dz',\r\n        '\\u01C6': 'dz',\r\n        '\\u24D4': 'e',\r\n        '\\uFF45': 'e',\r\n        '\\u00E8': 'e',\r\n        '\\u00E9': 'e',\r\n        '\\u00EA': 'e',\r\n        '\\u1EC1': 'e',\r\n        '\\u1EBF': 'e',\r\n        '\\u1EC5': 'e',\r\n        '\\u1EC3': 'e',\r\n        '\\u1EBD': 'e',\r\n        '\\u0113': 'e',\r\n        '\\u1E15': 'e',\r\n        '\\u1E17': 'e',\r\n        '\\u0115': 'e',\r\n        '\\u0117': 'e',\r\n        '\\u00EB': 'e',\r\n        '\\u1EBB': 'e',\r\n        '\\u011B': 'e',\r\n        '\\u0205': 'e',\r\n        '\\u0207': 'e',\r\n        '\\u1EB9': 'e',\r\n        '\\u1EC7': 'e',\r\n        '\\u0229': 'e',\r\n        '\\u1E1D': 'e',\r\n        '\\u0119': 'e',\r\n        '\\u1E19': 'e',\r\n        '\\u1E1B': 'e',\r\n        '\\u0247': 'e',\r\n        '\\u025B': 'e',\r\n        '\\u01DD': 'e',\r\n        '\\u24D5': 'f',\r\n        '\\uFF46': 'f',\r\n        '\\u1E1F': 'f',\r\n        '\\u0192': 'f',\r\n        '\\uA77C': 'f',\r\n        '\\u24D6': 'g',\r\n        '\\uFF47': 'g',\r\n        '\\u01F5': 'g',\r\n        '\\u011D': 'g',\r\n        '\\u1E21': 'g',\r\n        '\\u011F': 'g',\r\n        '\\u0121': 'g',\r\n        '\\u01E7': 'g',\r\n        '\\u0123': 'g',\r\n        '\\u01E5': 'g',\r\n        '\\u0260': 'g',\r\n        '\\uA7A1': 'g',\r\n        '\\u1D79': 'g',\r\n        '\\uA77F': 'g',\r\n        '\\u24D7': 'h',\r\n        '\\uFF48': 'h',\r\n        '\\u0125': 'h',\r\n        '\\u1E23': 'h',\r\n        '\\u1E27': 'h',\r\n        '\\u021F': 'h',\r\n        '\\u1E25': 'h',\r\n        '\\u1E29': 'h',\r\n        '\\u1E2B': 'h',\r\n        '\\u1E96': 'h',\r\n        '\\u0127': 'h',\r\n        '\\u2C68': 'h',\r\n        '\\u2C76': 'h',\r\n        '\\u0265': 'h',\r\n        '\\u0195': 'hv',\r\n        '\\u24D8': 'i',\r\n        '\\uFF49': 'i',\r\n        '\\u00EC': 'i',\r\n        '\\u00ED': 'i',\r\n        '\\u00EE': 'i',\r\n        '\\u0129': 'i',\r\n        '\\u012B': 'i',\r\n        '\\u012D': 'i',\r\n        '\\u00EF': 'i',\r\n        '\\u1E2F': 'i',\r\n        '\\u1EC9': 'i',\r\n        '\\u01D0': 'i',\r\n        '\\u0209': 'i',\r\n        '\\u020B': 'i',\r\n        '\\u1ECB': 'i',\r\n        '\\u012F': 'i',\r\n        '\\u1E2D': 'i',\r\n        '\\u0268': 'i',\r\n        '\\u0131': 'i',\r\n        '\\u24D9': 'j',\r\n        '\\uFF4A': 'j',\r\n        '\\u0135': 'j',\r\n        '\\u01F0': 'j',\r\n        '\\u0249': 'j',\r\n        '\\u24DA': 'k',\r\n        '\\uFF4B': 'k',\r\n        '\\u1E31': 'k',\r\n        '\\u01E9': 'k',\r\n        '\\u1E33': 'k',\r\n        '\\u0137': 'k',\r\n        '\\u1E35': 'k',\r\n        '\\u0199': 'k',\r\n        '\\u2C6A': 'k',\r\n        '\\uA741': 'k',\r\n        '\\uA743': 'k',\r\n        '\\uA745': 'k',\r\n        '\\uA7A3': 'k',\r\n        '\\u24DB': 'l',\r\n        '\\uFF4C': 'l',\r\n        '\\u0140': 'l',\r\n        '\\u013A': 'l',\r\n        '\\u013E': 'l',\r\n        '\\u1E37': 'l',\r\n        '\\u1E39': 'l',\r\n        '\\u013C': 'l',\r\n        '\\u1E3D': 'l',\r\n        '\\u1E3B': 'l',\r\n        '\\u017F': 'l',\r\n        '\\u0142': 'l',\r\n        '\\u019A': 'l',\r\n        '\\u026B': 'l',\r\n        '\\u2C61': 'l',\r\n        '\\uA749': 'l',\r\n        '\\uA781': 'l',\r\n        '\\uA747': 'l',\r\n        '\\u01C9': 'lj',\r\n        '\\u24DC': 'm',\r\n        '\\uFF4D': 'm',\r\n        '\\u1E3F': 'm',\r\n        '\\u1E41': 'm',\r\n        '\\u1E43': 'm',\r\n        '\\u0271': 'm',\r\n        '\\u026F': 'm',\r\n        '\\u24DD': 'n',\r\n        '\\uFF4E': 'n',\r\n        '\\u01F9': 'n',\r\n        '\\u0144': 'n',\r\n        '\\u00F1': 'n',\r\n        '\\u1E45': 'n',\r\n        '\\u0148': 'n',\r\n        '\\u1E47': 'n',\r\n        '\\u0146': 'n',\r\n        '\\u1E4B': 'n',\r\n        '\\u1E49': 'n',\r\n        '\\u019E': 'n',\r\n        '\\u0272': 'n',\r\n        '\\u0149': 'n',\r\n        '\\uA791': 'n',\r\n        '\\uA7A5': 'n',\r\n        '\\u01CC': 'nj',\r\n        '\\u24DE': 'o',\r\n        '\\uFF4F': 'o',\r\n        '\\u00F2': 'o',\r\n        '\\u00F3': 'o',\r\n        '\\u00F4': 'o',\r\n        '\\u1ED3': 'o',\r\n        '\\u1ED1': 'o',\r\n        '\\u1ED7': 'o',\r\n        '\\u1ED5': 'o',\r\n        '\\u00F5': 'o',\r\n        '\\u1E4D': 'o',\r\n        '\\u022D': 'o',\r\n        '\\u1E4F': 'o',\r\n        '\\u014D': 'o',\r\n        '\\u1E51': 'o',\r\n        '\\u1E53': 'o',\r\n        '\\u014F': 'o',\r\n        '\\u022F': 'o',\r\n        '\\u0231': 'o',\r\n        '\\u00F6': 'o',\r\n        '\\u022B': 'o',\r\n        '\\u1ECF': 'o',\r\n        '\\u0151': 'o',\r\n        '\\u01D2': 'o',\r\n        '\\u020D': 'o',\r\n        '\\u020F': 'o',\r\n        '\\u01A1': 'o',\r\n        '\\u1EDD': 'o',\r\n        '\\u1EDB': 'o',\r\n        '\\u1EE1': 'o',\r\n        '\\u1EDF': 'o',\r\n        '\\u1EE3': 'o',\r\n        '\\u1ECD': 'o',\r\n        '\\u1ED9': 'o',\r\n        '\\u01EB': 'o',\r\n        '\\u01ED': 'o',\r\n        '\\u00F8': 'o',\r\n        '\\u01FF': 'o',\r\n        '\\u0254': 'o',\r\n        '\\uA74B': 'o',\r\n        '\\uA74D': 'o',\r\n        '\\u0275': 'o',\r\n        '\\u01A3': 'oi',\r\n        '\\u0223': 'ou',\r\n        '\\uA74F': 'oo',\r\n        '\\u24DF': 'p',\r\n        '\\uFF50': 'p',\r\n        '\\u1E55': 'p',\r\n        '\\u1E57': 'p',\r\n        '\\u01A5': 'p',\r\n        '\\u1D7D': 'p',\r\n        '\\uA751': 'p',\r\n        '\\uA753': 'p',\r\n        '\\uA755': 'p',\r\n        '\\u24E0': 'q',\r\n        '\\uFF51': 'q',\r\n        '\\u024B': 'q',\r\n        '\\uA757': 'q',\r\n        '\\uA759': 'q',\r\n        '\\u24E1': 'r',\r\n        '\\uFF52': 'r',\r\n        '\\u0155': 'r',\r\n        '\\u1E59': 'r',\r\n        '\\u0159': 'r',\r\n        '\\u0211': 'r',\r\n        '\\u0213': 'r',\r\n        '\\u1E5B': 'r',\r\n        '\\u1E5D': 'r',\r\n        '\\u0157': 'r',\r\n        '\\u1E5F': 'r',\r\n        '\\u024D': 'r',\r\n        '\\u027D': 'r',\r\n        '\\uA75B': 'r',\r\n        '\\uA7A7': 'r',\r\n        '\\uA783': 'r',\r\n        '\\u24E2': 's',\r\n        '\\uFF53': 's',\r\n        '\\u00DF': 's',\r\n        '\\u015B': 's',\r\n        '\\u1E65': 's',\r\n        '\\u015D': 's',\r\n        '\\u1E61': 's',\r\n        '\\u0161': 's',\r\n        '\\u1E67': 's',\r\n        '\\u1E63': 's',\r\n        '\\u1E69': 's',\r\n        '\\u0219': 's',\r\n        '\\u015F': 's',\r\n        '\\u023F': 's',\r\n        '\\uA7A9': 's',\r\n        '\\uA785': 's',\r\n        '\\u1E9B': 's',\r\n        '\\u24E3': 't',\r\n        '\\uFF54': 't',\r\n        '\\u1E6B': 't',\r\n        '\\u1E97': 't',\r\n        '\\u0165': 't',\r\n        '\\u1E6D': 't',\r\n        '\\u021B': 't',\r\n        '\\u0163': 't',\r\n        '\\u1E71': 't',\r\n        '\\u1E6F': 't',\r\n        '\\u0167': 't',\r\n        '\\u01AD': 't',\r\n        '\\u0288': 't',\r\n        '\\u2C66': 't',\r\n        '\\uA787': 't',\r\n        '\\uA729': 'tz',\r\n        '\\u24E4': 'u',\r\n        '\\uFF55': 'u',\r\n        '\\u00F9': 'u',\r\n        '\\u00FA': 'u',\r\n        '\\u00FB': 'u',\r\n        '\\u0169': 'u',\r\n        '\\u1E79': 'u',\r\n        '\\u016B': 'u',\r\n        '\\u1E7B': 'u',\r\n        '\\u016D': 'u',\r\n        '\\u00FC': 'u',\r\n        '\\u01DC': 'u',\r\n        '\\u01D8': 'u',\r\n        '\\u01D6': 'u',\r\n        '\\u01DA': 'u',\r\n        '\\u1EE7': 'u',\r\n        '\\u016F': 'u',\r\n        '\\u0171': 'u',\r\n        '\\u01D4': 'u',\r\n        '\\u0215': 'u',\r\n        '\\u0217': 'u',\r\n        '\\u01B0': 'u',\r\n        '\\u1EEB': 'u',\r\n        '\\u1EE9': 'u',\r\n        '\\u1EEF': 'u',\r\n        '\\u1EED': 'u',\r\n        '\\u1EF1': 'u',\r\n        '\\u1EE5': 'u',\r\n        '\\u1E73': 'u',\r\n        '\\u0173': 'u',\r\n        '\\u1E77': 'u',\r\n        '\\u1E75': 'u',\r\n        '\\u0289': 'u',\r\n        '\\u24E5': 'v',\r\n        '\\uFF56': 'v',\r\n        '\\u1E7D': 'v',\r\n        '\\u1E7F': 'v',\r\n        '\\u028B': 'v',\r\n        '\\uA75F': 'v',\r\n        '\\u028C': 'v',\r\n        '\\uA761': 'vy',\r\n        '\\u24E6': 'w',\r\n        '\\uFF57': 'w',\r\n        '\\u1E81': 'w',\r\n        '\\u1E83': 'w',\r\n        '\\u0175': 'w',\r\n        '\\u1E87': 'w',\r\n        '\\u1E85': 'w',\r\n        '\\u1E98': 'w',\r\n        '\\u1E89': 'w',\r\n        '\\u2C73': 'w',\r\n        '\\u24E7': 'x',\r\n        '\\uFF58': 'x',\r\n        '\\u1E8B': 'x',\r\n        '\\u1E8D': 'x',\r\n        '\\u24E8': 'y',\r\n        '\\uFF59': 'y',\r\n        '\\u1EF3': 'y',\r\n        '\\u00FD': 'y',\r\n        '\\u0177': 'y',\r\n        '\\u1EF9': 'y',\r\n        '\\u0233': 'y',\r\n        '\\u1E8F': 'y',\r\n        '\\u00FF': 'y',\r\n        '\\u1EF7': 'y',\r\n        '\\u1E99': 'y',\r\n        '\\u1EF5': 'y',\r\n        '\\u01B4': 'y',\r\n        '\\u024F': 'y',\r\n        '\\u1EFF': 'y',\r\n        '\\u24E9': 'z',\r\n        '\\uFF5A': 'z',\r\n        '\\u017A': 'z',\r\n        '\\u1E91': 'z',\r\n        '\\u017C': 'z',\r\n        '\\u017E': 'z',\r\n        '\\u1E93': 'z',\r\n        '\\u1E95': 'z',\r\n        '\\u01B6': 'z',\r\n        '\\u0225': 'z',\r\n        '\\u0240': 'z',\r\n        '\\u2C6C': 'z',\r\n        '\\uA763': 'z',\r\n        '\\u0386': '\\u0391',\r\n        '\\u0388': '\\u0395',\r\n        '\\u0389': '\\u0397',\r\n        '\\u038A': '\\u0399',\r\n        '\\u03AA': '\\u0399',\r\n        '\\u038C': '\\u039F',\r\n        '\\u038E': '\\u03A5',\r\n        '\\u03AB': '\\u03A5',\r\n        '\\u038F': '\\u03A9',\r\n        '\\u03AC': '\\u03B1',\r\n        '\\u03AD': '\\u03B5',\r\n        '\\u03AE': '\\u03B7',\r\n        '\\u03AF': '\\u03B9',\r\n        '\\u03CA': '\\u03B9',\r\n        '\\u0390': '\\u03B9',\r\n        '\\u03CC': '\\u03BF',\r\n        '\\u03CD': '\\u03C5',\r\n        '\\u03CB': '\\u03C5',\r\n        '\\u03B0': '\\u03C5',\r\n        '\\u03C9': '\\u03C9',\r\n        '\\u03C2': '\\u03C3'\r\n    };\r\n\r\n    static strip(text: string): string {\r\n\r\n        const match = (a: string): string => {\r\n            return this.DIACRITICS[a] || a;\r\n        };\r\n        if (text) {\r\n            return text.replace(/[^\\u0000-\\u007E]/g, match);\r\n        } else {\r\n            return '';\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","import { Option } from './option';\r\nimport { Diacritics } from './diacritics';\r\n\r\nexport class OptionList {\r\n    private _options: Array<Option>;\r\n\r\n    /* Consider using these for performance improvement. */\r\n    // private _selection: Array<Option>;\r\n    // private _filtered: Array<Option>;\r\n    // private _value: Array<string>;\r\n\r\n    private _highlightedOption: Option = null;\r\n    // v0 and v1 are assumed not to be undefined or null.\r\n    static equalValues(v0: Array<string>, v1: Array<string>): boolean {\r\n\r\n        if (v0.length !== v1.length) {\r\n            return false;\r\n        }\r\n\r\n        const a: Array<string> = v0.slice().sort();\r\n        const b: Array<string> = v1.slice().sort();\r\n\r\n        return a.every((v, i) => {\r\n            return v === b[i];\r\n        });\r\n    }\r\n\r\n\r\n    constructor(options: Array<any>) {\r\n\r\n        if (typeof options === 'undefined' || options === null) {\r\n            options = [];\r\n        }\r\n\r\n        this._options = options.map((option) => {\r\n            const o: Option = new Option(option.value, option.label);\r\n            if (option.disabled) {\r\n                o.disable();\r\n            }\r\n            return o;\r\n        });\r\n\r\n        this.highlight();\r\n    }\r\n\r\n    /** Options. **/\r\n\r\n    get options(): Array<Option> {\r\n        return this._options;\r\n    }\r\n\r\n    getOptionsByValue(value: string): Array<Option> {\r\n        return this.options.filter((option) => {\r\n            return option.value === value;\r\n        });\r\n    }\r\n\r\n    /** Value. **/\r\n\r\n    get value(): Array<string> {\r\n        return this.selection.map((selectedOption) => {\r\n            return selectedOption.value;\r\n        });\r\n    }\r\n\r\n    set value(v: Array<string>) {\r\n        v = typeof v === 'undefined' || v === null ? [] : v;\r\n\r\n        this.options.forEach((option) => {\r\n            option.selected = v.indexOf(option.value) > -1;\r\n        });\r\n    }\r\n\r\n    /** Selection. **/\r\n\r\n    get selection(): Array<Option> {\r\n        return this.options.filter((option) => {\r\n            return option.selected;\r\n        });\r\n    }\r\n\r\n    select(option: Option, multiple: boolean) {\r\n        if (!multiple) {\r\n            this.clearSelection();\r\n        }\r\n        option.selected = true;\r\n    }\r\n\r\n    deselect(option: Option) {\r\n        option.selected = false;\r\n    }\r\n\r\n    clearSelection() {\r\n        this.options.forEach((option) => {\r\n            option.selected = false;\r\n        });\r\n    }\r\n\r\n    /** Filter. **/\r\n\r\n    get filtered(): Array<Option> {\r\n        return this.options.filter((option) => {\r\n            return option.shown;\r\n        });\r\n    }\r\n\r\n    filter(term: string) {\r\n\r\n        if (term.trim() === '') {\r\n            this.resetFilter();\r\n        } else {\r\n            this.options.forEach((option) => {\r\n                const l: string = Diacritics.strip(option.label).toUpperCase();\r\n                const t: string = Diacritics.strip(term).toUpperCase();\r\n                option.shown = l.indexOf(t) > -1;\r\n            });\r\n        }\r\n\r\n        this.highlight();\r\n    }\r\n\r\n    resetFilter() {\r\n        this.options.forEach((option) => {\r\n            option.shown = true;\r\n        });\r\n    }\r\n\r\n    /** Highlight. **/\r\n\r\n    get highlightedOption(): Option {\r\n        return this._highlightedOption;\r\n    }\r\n\r\n    highlight() {\r\n        const option: Option = this.hasShownSelected() ?\r\n            this.getFirstShownSelected() : this.getFirstShown();\r\n        this.highlightOption(option);\r\n    }\r\n\r\n    highlightOption(option: Option) {\r\n        this.clearHighlightedOption();\r\n\r\n        if (option !== null) {\r\n            option.highlighted = true;\r\n            this._highlightedOption = option;\r\n        }\r\n    }\r\n\r\n    highlightNextOption() {\r\n        const shownOptions = this.filtered;\r\n        const index = this.getHighlightedIndexFromList(shownOptions);\r\n\r\n        if (index > -1 && index < shownOptions.length - 1) {\r\n            this.highlightOption(shownOptions[index + 1]);\r\n        }\r\n    }\r\n\r\n    highlightPreviousOption() {\r\n        const shownOptions = this.filtered;\r\n        const index = this.getHighlightedIndexFromList(shownOptions);\r\n\r\n        if (index > 0) {\r\n            this.highlightOption(shownOptions[index - 1]);\r\n        }\r\n    }\r\n\r\n    private clearHighlightedOption() {\r\n        if (this.highlightedOption !== null) {\r\n            this.highlightedOption.highlighted = false;\r\n            this._highlightedOption = null;\r\n        }\r\n    }\r\n\r\n    private getHighlightedIndexFromList(options: Array<Option>) {\r\n        for (let i = 0; i < options.length; i++) {\r\n            if (options[i].highlighted) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    getHighlightedIndex() {\r\n        return this.getHighlightedIndexFromList(this.filtered);\r\n    }\r\n\r\n    /** Util. **/\r\n\r\n    hasShown() {\r\n        return this.options.some((option) => {\r\n            return option.shown;\r\n        });\r\n    }\r\n\r\n    hasSelected() {\r\n        return this.options.some((option) => {\r\n            return option.selected;\r\n        });\r\n    }\r\n\r\n    hasShownSelected() {\r\n        return this.options.some((option) => {\r\n            return option.shown && option.selected;\r\n        });\r\n    }\r\n\r\n    private getFirstShown(): Option {\r\n        for (const option of this.options) {\r\n            if (option.shown) {\r\n                return option;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private getFirstShownSelected(): Option {\r\n        for (const option of this.options) {\r\n            if (option.shown && option.selected) {\r\n                return option;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    EventEmitter,\r\n    ExistingProvider,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n    forwardRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { STYLE } from './select.component.style';\r\nimport { SelectDropdownComponent } from './select-dropdown.component';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\nexport const SELECT_VALUE_ACCESSOR: ExistingProvider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SelectComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ng-select',\r\n    template: `<div\r\n    #selection\r\n    [attr.tabindex]=\"disabled ? null : 0\"\r\n    [ngClass]=\"{'open': isOpen, 'focus': hasFocus, 'below': isBelow, 'disabled': disabled}\"\r\n    (click)=\"onSelectContainerClick($event)\"\r\n    (focus)=\"onSelectContainerFocus()\"\r\n    (keydown)=\"onSelectContainerKeydown($event)\"\r\n    (window:click)=\"onWindowClick()\"\r\n    (window:resize)=\"onWindowResize()\">\r\n\r\n    <div class=\"single\"\r\n        *ngIf=\"!multiple\">\r\n        <div class=\"value\"\r\n            *ngIf=\"optionList.hasSelected()\">\r\n            {{optionList.selection[0].label}}\r\n        </div>\r\n        <div class=\"placeholder\"\r\n            *ngIf=\"!optionList.hasSelected()\">\r\n            {{placeholderView}}\r\n        </div>\r\n        <div class=\"clear\"\r\n            *ngIf=\"allowClear\"\r\n            (click)=\"onClearSelectionClick($event)\">\r\n            &#x2715;\r\n        </div>\r\n        <div class=\"toggle\"\r\n            *ngIf=\"isOpen\">\r\n            &#x25B2;\r\n        </div>\r\n        <div class=\"toggle\"\r\n            *ngIf=\"!isOpen\">\r\n            &#x25BC;\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"multiple\"\r\n        *ngIf=\"multiple\">\r\n        <div class=\"option\"\r\n            *ngFor=\"let option of optionList.selection\">\r\n            <span class=\"deselect-option\"\r\n                (click)=onDeselectOptionClick(option)>\r\n                &#x2715;\r\n            </span>\r\n            {{option.label}}\r\n        </div>\r\n        <input\r\n            *ngIf=\"filterEnabled\"\r\n            #filterInput\r\n            tabindex=\"-1\"\r\n            [placeholder]=\"placeholderView\"\r\n            [ngStyle]=\"{'width.px': filterInputWidth}\"\r\n            (input)=\"onMultipleFilterInput($event)\"\r\n            (keydown)=\"onMultipleFilterKeydown($event)\"/>\r\n    </div>\r\n\r\n</div>\r\n<select-dropdown\r\n    *ngIf=\"isOpen\"\r\n    #dropdown\r\n    [multiple]=\"multiple\"\r\n    [optionList]=\"optionList\"\r\n    [notFoundMsg]=\"notFoundMsg\"\r\n    [highlightColor]=\"highlightColor\"\r\n    [highlightTextColor]=\"highlightTextColor\"\r\n    [filterEnabled]=\"filterEnabled\"\r\n    [width]=\"width\"\r\n    [top]=\"top\"\r\n    [left]=\"left\"\r\n    (close)=\"onDropdownClose($event)\"\r\n    (optionClicked)=\"onDropdownOptionClicked($event)\"\r\n    (singleFilterClick)=\"onSingleFilterClick()\"\r\n    (singleFilterInput)=\"onSingleFilterInput($event)\"\r\n    (singleFilterKeydown)=\"onSingleFilterKeydown($event)\">\r\n</select-dropdown>\r\n`,\r\n    styles: [STYLE],\r\n    providers: [SELECT_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectComponent\r\n    implements AfterViewInit, ControlValueAccessor, OnChanges, OnInit {\r\n    /** Keys. **/\r\n\r\n    private KEYS: any = {\r\n        BACKSPACE: 8,\r\n        TAB: 9,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32,\r\n        UP: 38,\r\n        DOWN: 40\r\n    };\r\n\r\n    @Input() options: Array<any>;\r\n\r\n    @Input() allowClear = false;\r\n    @Input() disabled = false;\r\n    @Input() highlightColor = '#2196f3';\r\n    @Input() highlightTextColor = '#fff';\r\n    @Input() multiple = false;\r\n    @Input() noFilter = 0;\r\n    @Input() notFoundMsg = 'No results found';\r\n    @Input() placeholder = '';\r\n\r\n    @Output() opened: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() closed: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() selected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() deselected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() typed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    @ViewChild('selection') selectionSpan: any;\r\n    @ViewChild('dropdown') dropdown: SelectDropdownComponent;\r\n    @ViewChild('filterInput') filterInput: any;\r\n\r\n    private _value: Array<any> = [];\r\n    optionList: OptionList;\r\n\r\n    // Selection state variables.\r\n    hasSelected = false;\r\n\r\n    // View state variables.\r\n    filterEnabled = true;\r\n    filterInputWidth = 1;\r\n    hasFocus = false;\r\n    isBelow = true;\r\n    isDisabled = false;\r\n    isOpen = false;\r\n    placeholderView = '';\r\n\r\n    clearClicked = false;\r\n    selectContainerClicked = false;\r\n\r\n    // Width and position for the dropdown container.\r\n    width: number;\r\n    top: number;\r\n    left: number;\r\n\r\n    private onChange = (_: any) => { };\r\n    private onTouched = () => { };\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular lifecycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.placeholderView = this.placeholder;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.updateFilterWidth();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('options')) {\r\n            this.updateOptionsList(changes['options'].isFirstChange());\r\n        }\r\n        if (changes.hasOwnProperty('noFilter')) {\r\n            const numOptions: number = this.optionList.options.length;\r\n            const minNumOptions: number = changes['noFilter'].currentValue;\r\n            this.filterEnabled = numOptions >= minNumOptions;\r\n        }\r\n    }\r\n\r\n    // Window.\r\n\r\n    onWindowClick() {\r\n        if (!this.selectContainerClicked) {\r\n            this.closeDropdown();\r\n        }\r\n        this.clearClicked = false;\r\n        this.selectContainerClicked = false;\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.updateWidth();\r\n    }\r\n\r\n    // Select container.\r\n\r\n    onSelectContainerClick(event: any) {\r\n        this.selectContainerClicked = true;\r\n        if (!this.clearClicked) {\r\n            this.toggleDropdown();\r\n        }\r\n    }\r\n\r\n    onSelectContainerFocus() {\r\n        this.onTouched();\r\n    }\r\n\r\n    onSelectContainerKeydown(event: any) {\r\n        this.handleSelectContainerKeydown(event);\r\n    }\r\n\r\n    // Dropdown container.\r\n\r\n    onDropdownOptionClicked(option: Option) {\r\n        this.multiple ?\r\n            this.toggleSelectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    onDropdownClose(focus: any) {\r\n        this.closeDropdown(focus);\r\n    }\r\n\r\n    // Single filter input.\r\n\r\n    onSingleFilterClick() {\r\n        this.selectContainerClicked = true;\r\n    }\r\n\r\n    onSingleFilterInput(term: string) {\r\n        setTimeout(() => {\r\n            if (term.length > 2) {\r\n                this.typed.emit(term);\r\n            }\r\n        }, 500);\r\n        this.optionList.filter(term);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.handleSingleFilterKeydown(event);\r\n    }\r\n\r\n    // Multiple filter input.\r\n\r\n    onMultipleFilterInput(event: any) {\r\n        if (!this.isOpen) {\r\n            this.openDropdown();\r\n        }\r\n        this.updateFilterWidth();\r\n        setTimeout(() => {\r\n            this.optionList.filter(event.target.value);\r\n        });\r\n    }\r\n\r\n    onMultipleFilterKeydown(event: any) {\r\n        this.handleMultipleFilterKeydown(event);\r\n    }\r\n\r\n    // Single clear select.\r\n\r\n    onClearSelectionClick(event: any) {\r\n        this.clearClicked = true;\r\n        this.clearSelection();\r\n        this.closeDropdown(true);\r\n    }\r\n\r\n    // Multiple deselect option.\r\n\r\n    onDeselectOptionClick(option: Option) {\r\n        this.clearClicked = true;\r\n        this.deselectOption(option);\r\n    }\r\n\r\n    /** API. **/\r\n\r\n    // TODO fix issues with global click/key handler that closes the dropdown.\r\n    open() {\r\n        this.openDropdown();\r\n    }\r\n\r\n    close() {\r\n        this.closeDropdown();\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelection();\r\n    }\r\n\r\n    select(value: string) {\r\n        this.optionList.getOptionsByValue(value).forEach((option) => {\r\n            this.selectOption(option);\r\n        });\r\n        this.valueChanged();\r\n    }\r\n\r\n    /** ControlValueAccessor interface methods. **/\r\n\r\n    writeValue(value: any) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    /** Value. **/\r\n\r\n    get value(): any {\r\n        if (this._value.length === 0) {\r\n            return '';\r\n        } else {\r\n            return this.multiple ? this._value : this._value[0];\r\n        }\r\n    }\r\n\r\n    set value(v: any) {\r\n        if (typeof v === 'undefined' || v === null || v === '') {\r\n            v = [];\r\n        } else if (typeof v === 'string') {\r\n            v = [v];\r\n        } else if (!Array.isArray(v)) {\r\n            throw new TypeError('Value must be a string or an array.');\r\n        }\r\n\r\n        if (!OptionList.equalValues(v, this._value)) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    private valueChanged() {\r\n        this._value = this.optionList.value;\r\n\r\n        this.hasSelected = this._value.length > 0;\r\n        this.placeholderView = this.hasSelected ? '' : this.placeholder;\r\n        this.updateFilterWidth();\r\n\r\n        this.onChange(this.value);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private updateOptionsList(firstTime: boolean) {\r\n        let v: Array<string>;\r\n\r\n        if (!firstTime) {\r\n            v = this.optionList.value;\r\n        }\r\n\r\n        this.optionList = new OptionList(this.options);\r\n\r\n        if (!firstTime) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    /** Dropdown. **/\r\n\r\n    private toggleDropdown() {\r\n        if (!this.isDisabled) {\r\n            this.isOpen ? this.closeDropdown(true) : this.openDropdown();\r\n        }\r\n    }\r\n\r\n    private openDropdown() {\r\n        if (!this.isOpen) {\r\n            this.updateWidth();\r\n            this.updatePosition();\r\n            this.isOpen = true;\r\n            if (this.multiple && this.filterEnabled) {\r\n                this.filterInput.nativeElement.focus();\r\n            }\r\n            this.opened.emit(null);\r\n        }\r\n    }\r\n    /* tslint:disable */\r\n    private closeDropdown(focus: boolean = false) {\r\n        if (this.isOpen) {\r\n            this.clearFilterInput();\r\n            this.isOpen = false;\r\n            if (focus) {\r\n                this.focus();\r\n            }\r\n            this.closed.emit(null);\r\n        }\r\n    }\r\n    /* tslint:enable */\r\n    /** Select. **/\r\n\r\n    private selectOption(option: Option) {\r\n        if (!option.selected) {\r\n            this.optionList.select(option, this.multiple);\r\n            this.valueChanged();\r\n            this.selected.emit(option.undecoratedCopy());\r\n            // Is this not allready done when setting the value??\r\n            /*setTimeout(() => {\r\n                if (this.multiple) {\r\n                    this.updateFilterWidth();\r\n                }\r\n            });*/\r\n        }\r\n    }\r\n\r\n    private deselectOption(option: Option) {\r\n        if (option.selected) {\r\n            this.optionList.deselect(option);\r\n            this.valueChanged();\r\n            this.deselected.emit(option.undecoratedCopy());\r\n            setTimeout(() => {\r\n                if (this.multiple) {\r\n                    // this.updateFilterWidth();\r\n                    this.updatePosition();\r\n                    this.optionList.highlight();\r\n                    if (this.isOpen) {\r\n                        this.dropdown.moveHighlightedIntoView();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private clearSelection() {\r\n        const selection: Array<Option> = this.optionList.selection;\r\n        if (selection.length > 0) {\r\n            this.optionList.clearSelection();\r\n            this.valueChanged();\r\n\r\n            if (selection.length === 1) {\r\n                this.deselected.emit(selection[0].undecoratedCopy());\r\n            } else {\r\n                this.deselected.emit(selection.map((option) => {\r\n                    return option.undecoratedCopy();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    private toggleSelectOption(option: Option) {\r\n        option.selected ?\r\n            this.deselectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    private selectHighlightedOption() {\r\n        const option: Option = this.optionList.highlightedOption;\r\n        if (option !== null) {\r\n            this.selectOption(option);\r\n            this.closeDropdown(true);\r\n        }\r\n    }\r\n\r\n    private deselectLast() {\r\n        const sel: Array<Option> = this.optionList.selection;\r\n\r\n        if (sel.length > 0) {\r\n            const option: Option = sel[sel.length - 1];\r\n            this.deselectOption(option);\r\n            this.setMultipleFilterInput(option.label + ' ');\r\n        }\r\n    }\r\n\r\n    /** Filter. **/\r\n\r\n    private clearFilterInput() {\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        } else {\r\n            this.dropdown.clearFilterInput();\r\n        }\r\n    }\r\n\r\n    private setMultipleFilterInput(value: string) {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = value;\r\n        }\r\n    }\r\n\r\n\r\n    private handleSelectContainerKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (this.isOpen) {\r\n            if (key === this.KEYS.ESC ||\r\n                (key === this.KEYS.UP && event.altKey)) {\r\n                this.closeDropdown(true);\r\n            } else if (key === this.KEYS.TAB) {\r\n                this.closeDropdown();\r\n            } else if (key === this.KEYS.ENTER) {\r\n                this.selectHighlightedOption();\r\n            } else if (key === this.KEYS.UP) {\r\n                this.optionList.highlightPreviousOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            } else if (key === this.KEYS.DOWN) {\r\n                this.optionList.highlightNextOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        } else {\r\n            if (key === this.KEYS.ENTER || key === this.KEYS.SPACE ||\r\n                (key === this.KEYS.DOWN && event.altKey)) {\r\n\r\n                /* FIREFOX HACK:\r\n                 *\r\n                 * The setTimeout is added to prevent the enter keydown event\r\n                 * to be triggered for the filter input field, which causes\r\n                 * the dropdown to be closed again.\r\n                 */\r\n                setTimeout(() => { this.openDropdown(); });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private handleMultipleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.BACKSPACE) {\r\n            if (this.hasSelected && this.filterEnabled &&\r\n                this.filterInput.nativeElement.value === '') {\r\n                this.deselectLast();\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleSingleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.ESC || key === this.KEYS.TAB\r\n            || key === this.KEYS.UP || key === this.KEYS.DOWN\r\n            || key === this.KEYS.ENTER) {\r\n            this.handleSelectContainerKeydown(event);\r\n        }\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    focus() {\r\n        this.hasFocus = true;\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        } else {\r\n            this.selectionSpan.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    blur() {\r\n        this.hasFocus = false;\r\n        this.selectionSpan.nativeElement.blur();\r\n    }\r\n\r\n    updateWidth() {\r\n        this.width = this.selectionSpan.nativeElement.offsetWidth;\r\n    }\r\n\r\n    updatePosition() {\r\n        const e = this.selectionSpan.nativeElement;\r\n        this.left = e.offsetLeft;\r\n        this.top = e.offsetTop + e.offsetHeight;\r\n    }\r\n\r\n    updateFilterWidth() {\r\n        if (typeof this.filterInput !== 'undefined') {\r\n            const value: string = this.filterInput.nativeElement.value;\r\n            this.filterInputWidth = value.length === 0 ?\r\n                1 + this.placeholderView.length * 10 : 1 + value.length * 10;\r\n        }\r\n    }\r\n}\r\n","export const STYLE = `select-dropdown {\r\n  box-sizing: border-box;\r\n  font-family: Sans-Serif;\r\n}\r\nselect-dropdown * {\r\n  box-sizing: border-box;\r\n  font-family: Sans-Serif;\r\n}\r\nselect-dropdown > div {\r\n  background-color: #fff;\r\n  border: 1px solid #ccc;\r\n  border-top: none;\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  z-index: 1;\r\n}\r\nselect-dropdown > div .filter {\r\n  padding: 3px;\r\n  width: 100%;\r\n}\r\nselect-dropdown > div .filter input {\r\n  border: 1px solid #eee;\r\n  box-sizing: border-box;\r\n  padding: 4px;\r\n  width: 100%;\r\n}\r\nselect-dropdown > div .options {\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n}\r\nselect-dropdown > div .options ul {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nselect-dropdown > div .options ul li {\r\n  padding: 4px 8px;\r\n  cursor: pointer;\r\n  user-select: none;\r\n}\r\nselect-dropdown .selected {\r\n  background-color: #e0e0e0;\r\n}\r\nselect-dropdown .selected.highlighted {\r\n  background-color: #2196F3;\r\n  color: #fff;\r\n}\r\nselect-dropdown .highlighted {\r\n  background-color: #2196F3;\r\n  color: #fff;\r\n}\r\nselect-dropdown .disabled {\r\n  background-color: #fff;\r\n  color: #9e9e9e;\r\n  cursor: default;\r\n  pointer-events: none;\r\n}`;\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { STYLE } from './select-dropdown.component.style';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\n@Component({\r\n    selector: 'select-dropdown',\r\n    template: `<div\r\n    [ngStyle]=\"{'top.px': top, 'left.px': left, 'width.px': width}\">\r\n\r\n    <div class=\"filter\"\r\n        *ngIf=\"!multiple\">\r\n        <input\r\n            *ngIf=\"filterEnabled\"\r\n            #filterInput\r\n            (click)=\"onSingleFilterClick($event)\"\r\n            (input)=\"onSingleFilterInput($event)\"\r\n            (keydown)=\"onSingleFilterKeydown($event)\">\r\n    </div>\r\n\r\n    <div class=\"options\"\r\n        #optionsList>\r\n        <ul\r\n            (wheel)=\"onOptionsWheel($event)\">\r\n            <li *ngFor=\"let option of optionList.filtered\"\r\n                [ngClass]=\"{'highlighted': option.highlighted, 'selected': option.selected, 'disabled': option.disabled}\"\r\n                [ngStyle]=\"getOptionStyle(option)\"\r\n                (click)=\"onOptionClick(option)\"\r\n                (mouseover)=\"onOptionMouseover(option)\">\r\n                {{option.label}}\r\n            </li>\r\n            <li\r\n                *ngIf=\"!optionList.hasShown()\"\r\n                class=\"message\">\r\n                {{notFoundMsg}}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n`,\r\n    styles: [STYLE],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectDropdownComponent\r\n    implements AfterViewInit, OnChanges, OnInit {\r\n\r\n    @Input() filterEnabled: boolean;\r\n    @Input() highlightColor: string;\r\n    @Input() highlightTextColor: string;\r\n    @Input() left: number;\r\n    @Input() multiple: boolean;\r\n    @Input() notFoundMsg: string;\r\n    @Input() optionList: OptionList;\r\n    @Input() top: number;\r\n    @Input() width: number;\r\n\r\n    @Output() close = new EventEmitter<boolean>();\r\n    @Output() optionClicked = new EventEmitter<Option>();\r\n    @Output() singleFilterClick = new EventEmitter<null>();\r\n    @Output() singleFilterInput = new EventEmitter<string>();\r\n    @Output() singleFilterKeydown = new EventEmitter<any>();\r\n\r\n    @ViewChild('filterInput') filterInput: any;\r\n    @ViewChild('optionsList') optionsList: any;\r\n\r\n    disabledColor = '#fff';\r\n    disabledTextColor = '9e9e9e';\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular life cycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.optionsReset();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('optionList')) {\r\n            this.optionsReset();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.moveHighlightedIntoView();\r\n        if (!this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    // Filter input (single select).\r\n\r\n    onSingleFilterClick(event: any) {\r\n        this.singleFilterClick.emit(null);\r\n    }\r\n\r\n    onSingleFilterInput(event: any) {\r\n        this.singleFilterInput.emit(event.target.value);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.singleFilterKeydown.emit(event);\r\n    }\r\n\r\n    // Options list.\r\n\r\n    onOptionsWheel(event: any) {\r\n        this.handleOptionsWheel(event);\r\n    }\r\n\r\n    onOptionMouseover(option: Option) {\r\n        this.optionList.highlightOption(option);\r\n    }\r\n\r\n    onOptionClick(option: Option) {\r\n        this.optionClicked.emit(option);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private optionsReset() {\r\n        this.optionList.resetFilter();\r\n        this.optionList.highlight();\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    getOptionStyle(option: Option): any {\r\n        if (option.highlighted) {\r\n            return {\r\n                'background-color': this.highlightColor,\r\n                'color': this.highlightTextColor\r\n            };\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    clearFilterInput() {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    moveHighlightedIntoView() {\r\n\r\n        const list = this.optionsList.nativeElement;\r\n        const listHeight = list.offsetHeight;\r\n\r\n        const itemIndex = this.optionList.getHighlightedIndex();\r\n\r\n        if (itemIndex > -1) {\r\n            const item = list.children[0].children[itemIndex];\r\n            const itemHeight = item.offsetHeight;\r\n\r\n            const itemTop = itemIndex * itemHeight;\r\n            const itemBottom = itemTop + itemHeight;\r\n\r\n            const viewTop = list.scrollTop;\r\n            const viewBottom = viewTop + listHeight;\r\n\r\n            if (itemBottom > viewBottom) {\r\n                list.scrollTop = itemBottom - listHeight;\r\n            } else if (itemTop < viewTop) {\r\n                list.scrollTop = itemTop;\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleOptionsWheel(e: any) {\r\n        const div = this.optionsList.nativeElement;\r\n        const atTop = div.scrollTop === 0;\r\n        const atBottom = div.offsetHeight + div.scrollTop === div.scrollHeight;\r\n\r\n        if (atTop && e.deltaY < 0) {\r\n            e.preventDefault();\r\n        } else if (atBottom && e.deltaY > 0) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {SelectComponent} from './select.component';\r\nimport {SelectDropdownComponent} from './select-dropdown.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SelectComponent,\r\n        SelectDropdownComponent\r\n    ],\r\n    exports: [\r\n        SelectComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule\r\n    ]\r\n})\r\nexport class SelectModule {}\r\n","\r\nimport {\r\n    Pipe,\r\n    PipeTransform,\r\n    OnDestroy,\r\n    WrappedValue,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { of } from 'rxjs';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\nimport { DomSanitizer} from '@angular/platform-browser';\r\n// import { FileUploadResourceService } from '../../etl-api/file-upload-resource.service';\r\n\r\n// Using similarity from AsyncPipe to avoid having to pipe |secure|async in HTML.\r\n// tslint:disable-next-line:use-pipe-transform-interface\r\n@Pipe({\r\n    name: 'secure',\r\n    pure: false\r\n})\r\nexport class SecurePipe implements PipeTransform, OnDestroy {\r\n    private _latestValue: any = null;\r\n    private _latestReturnedValue: any = null;\r\n    private _subscription: Subscription = null;\r\n    private _obj: Observable<any> = null;\r\n    private getfile;\r\n    private previousUrl: string;\r\n    private _result: BehaviorSubject<any> = new BehaviorSubject(null);\r\n    private result: Observable<any> = this._result.asObservable();\r\n    private _internalSubscription: Subscription = null;\r\n\r\n    constructor(\r\n        private _ref: ChangeDetectorRef,\r\n        private sanitizer: DomSanitizer\r\n    ) { }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this._subscription) {\r\n            this._dispose();\r\n        }\r\n    }\r\n\r\n    transform(url: string, getfile): any {\r\n        this.getfile = getfile;\r\n        const obj = this.internalTransform(url);\r\n        return this.asyncTrasnform(obj);\r\n    }\r\n\r\n    private internalTransform(url: string): Observable<any> {\r\n        if (!url) {\r\n            return this.result;\r\n        }\r\n\r\n        if (this.previousUrl !== url) {\r\n            this.previousUrl = url;\r\n            this._internalSubscription = this.getfile(url)\r\n                .subscribe(m => {\r\n                    const sanitized = this.sanitizer.bypassSecurityTrustUrl(m);\r\n                    this._result.next(sanitized);\r\n                });\r\n        }\r\n\r\n        return this.result;\r\n    }\r\n\r\n    private asyncTrasnform(obj: Observable<any>): any {\r\n        if (!this._obj) {\r\n            if (obj) {\r\n                this._subscribe(obj);\r\n            }\r\n            this._latestReturnedValue = this._latestValue;\r\n            return this._latestValue;\r\n        }\r\n        if (obj !== this._obj) {\r\n            this._dispose();\r\n            return this.asyncTrasnform(obj);\r\n        }\r\n        if (this._latestValue === this._latestReturnedValue) {\r\n            return this._latestReturnedValue;\r\n        }\r\n        this._latestReturnedValue = this._latestValue;\r\n        return WrappedValue.wrap(this._latestValue);\r\n    }\r\n\r\n    private _subscribe(obj: Observable<any>) {\r\n        const _this = this;\r\n        this._obj = obj;\r\n\r\n        this._subscription = obj.subscribe({\r\n            next: function (value) {\r\n                return _this._updateLatestValue(obj, value);\r\n            }, error: (e: any) => { throw e; }\r\n        });\r\n    }\r\n\r\n    private _dispose() {\r\n        if (this._subscription) {\r\n            this._subscription.unsubscribe();\r\n        }\r\n        if (this._internalSubscription) {\r\n            this._internalSubscription.unsubscribe();\r\n        }\r\n\r\n        this._internalSubscription = null;\r\n        this._latestValue = null;\r\n        this._latestReturnedValue = null;\r\n        this._subscription = null;\r\n        this._obj = null;\r\n    }\r\n\r\n    private _updateLatestValue(async: any, value: Object) {\r\n        if (async === this._obj) {\r\n            this._latestValue = value;\r\n            this._ref.markForCheck();\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SecurePipe } from './components/file-upload/secure.pipe';\r\nimport { DataSources } from './form-entry/data-sources/data-sources';\r\n@NgModule({\r\n    declarations: [\r\n        SecurePipe\r\n    ],\r\n    imports: [ CommonModule ],\r\n    exports: [\r\n        SecurePipe\r\n    ],\r\n    providers: [\r\n        DataSources\r\n    ],\r\n})\r\nexport class SharedModule {}\r\n","import { Component, OnInit, Input, forwardRef, Renderer2 } from '@angular/core';\r\nimport {\r\n    ControlValueAccessor,\r\n    NG_VALUE_ACCESSOR\r\n} from '@angular/forms';\r\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\r\n@Component({\r\n    selector: 'remote-file-upload',\r\n    template: `<div>\r\n    <lib-file-uploader [(ngModel)]=\"innerValue\" (_onClear)=\"clearValue()\" (uploadData)=\"onFileChange($event)\">\r\n    </lib-file-uploader>\r\n    <div *ngFor=\"let value of innerValue\" >\r\n      <img class=\"img-responsive\" [src]=\"value | secure:this.dataSource.fetchFile\" alt=\"\" />\r\n    </div>\r\n</div>`,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => RemoteFileUploadComponent),\r\n            multi: true,\r\n        }],\r\n    styles: [`img {\r\n        margin-left: auto;margin-right: auto;display: block;\r\n    }`\r\n    ]\r\n})\r\nexport class RemoteFileUploadComponent implements OnInit, ControlValueAccessor {\r\n    uploading = false;\r\n    innerValue = null;\r\n    private _dataSource: DataSource;\r\n    @Input()\r\n    public get dataSource(): DataSource {\r\n        return this._dataSource;\r\n    }\r\n    public set dataSource(v: DataSource) {\r\n        this._dataSource = v;\r\n    }\r\n\r\n\r\n    constructor(private renderer: Renderer2) { }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n    public onFileChange(fileList) {\r\n        console.log(fileList.length);\r\n          for (const file of fileList) {\r\n            this.upload(file);\r\n          }\r\n      }\r\n    upload(data) {\r\n        if (this.dataSource) {\r\n            this.uploading = true;\r\n            this.dataSource.fileUpload(data).subscribe((result) => {\r\n                // console.log('Result', result);\r\n                this.innerValue.push(result.image);\r\n                this.propagateChange(this.innerValue);\r\n                this.uploading = false;\r\n            }, (error) => {\r\n                this.uploading = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    // this is the initial value set to the component\r\n    public writeValue(value: any) {\r\n        if (value !== this.innerValue) {\r\n            this.innerValue = value;\r\n        }\r\n    }\r\n    // registers 'fn' that will be fired when changes are made\r\n    // this is how we emit the changes back to the form\r\n    public registerOnChange(fn: any) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    // not used, used for touch input\r\n    public registerOnTouched() { }\r\n    // change events from the textarea\r\n    onChange(event) {\r\n        this.propagateChange(event.id);\r\n        // .....\r\n        // update the form\r\n        // this.propagateChange(this.data);\r\n    }\r\n\r\n\r\n    // the method set in registerOnChange, it is just\r\n    // a placeholder for a method that takes one parameter,\r\n    // we use it to emit changes back to the form\r\n    private propagateChange = (_: any) => { };\r\n\r\n    public clearValue() {\r\n        this.innerValue = null;\r\n        this.propagateChange(this.innerValue);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxFileUploaderModule } from 'ngx-file-uploader/dist/ngx-file-uploader';\r\nimport { SharedModule } from '../../shared.module';\r\n// import { SelectModule } from 'ng2-select/ng2-select';\r\nimport { SelectModule } from '../../components/select/select.module';\r\nimport { RemoteFileUploadComponent } from './file-upload.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, SelectModule, FormsModule, NgxFileUploaderModule, SharedModule],\r\n    exports: [RemoteFileUploadComponent],\r\n    declarations: [RemoteFileUploadComponent],\r\n    providers: [],\r\n})\r\nexport class RemoteFileUploadModule { }\r\n","/**\r\n * date-picker.component\r\n */\r\n\r\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport * as moment_ from 'moment';\r\n\r\nconst moment = moment_;\r\nimport * as _ from 'lodash';\r\nimport { Moment } from 'moment/moment';\r\n\r\n// webpack1_\r\ndeclare let require: any;\r\n// const myDpStyles: string = require('./date-picker.component.css');\r\n// const myDpTpl: string = require('./date-picker.component.html');\r\n// webpack2_\r\n\r\n@Component({\r\n  selector: 'date-picker',\r\n  template: `<picker-modal (onOverlayClick)=\"cancelDatePicker()\">\r\n  <div class=\"picker-wrap\">\r\n    <div class=\"picker-box\">\r\n      <div class=\"picker-header\">\r\n        <div class=\"picker-header-nav\">\r\n          <span class=\"nav-prev\" (click)=\"prev()\"></span>\r\n        </div>\r\n        <div class=\"picker-header-content\">\r\n          <div class=\"content\">\r\n            <span (click)=\"showMonthSelection()\" class=\"month\">{{calendarDate | moment: \"MMMM\"}}</span>\r\n            <span class=\"seperator\">|</span>\r\n            <span (click)=\"showYearSelection()\" class=\"year\">{{calendarDate | moment: \"YYYY\"}}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"picker-header-nav\">\r\n          <span class=\"nav-next\" (click)=\"next()\"></span>\r\n        </div>\r\n      </div>\r\n      <div class=\"picker-calendar\">\r\n        <div class=\"picker-calendar-row\" *ngIf=\"!onDisplayMonths && !onDisplayYears\">\r\n          <span class=\"picker-weekday\" *ngFor=\"let day of dayNames\">{{ day }}</span>\r\n        </div>\r\n        <div class=\"picker-calendar-row\" *ngIf=\"!onDisplayMonths && !onDisplayYears\">\r\n                    <span class=\"picker-day\" (click)=\"selectDay(day)\" [ngClass]=\"{\r\n                       'out-focus': day.month() != calendarDate.month(),\r\n                       'today': day.isSame(today),\r\n                       'selected': day.isSame(selectedDate)\r\n                      }\" *ngFor=\"let day of calendarDays\">\r\n                    {{ day | moment: 'D'}}\r\n                </span>\r\n        </div>\r\n        <div class=\"picker-calendar-row\" *ngIf=\"onDisplayMonths\">\r\n                    <span class=\"picker-month\" *ngFor=\"let month of monthsShort\"\r\n                          (click)=\"selectMonth(month)\"\r\n                          [ngClass]=\"{\r\n                       'selected': month === currentMonth\r\n                      }\">\r\n                    {{ month }}\r\n                </span>\r\n        </div>\r\n        <div class=\"picker-calendar-row\" *ngIf=\"onDisplayYears\">\r\n                    <span class=\"picker-year\" *ngFor=\"let year of displayYearRange\"\r\n                          (click)=\"selectYear(year)\"\r\n                          [ngClass]=\"{\r\n                       'selected': year === currentYear\r\n                      }\">\r\n                    {{ year }}\r\n                </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"picker-footer\">\r\n        <div class=\"picker-action action-today\" (click)=\"selectToday()\"><span class=\"text\">Today</span></div>\r\n        <div class=\"picker-action action-clear\" (click)=\"clearPickDate()\"><span class=\"text\">Clear</span></div>\r\n        <div class=\"picker-action action-close\" (click)=\"cancelDatePicker()\"><span class=\"text\">Close</span></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</picker-modal>\r\n`,\r\n  styles: [`*,::after,::before{box-sizing:border-box}.picker-wrap{width:95vw;max-width:666px}.picker-box{font-family:'Open Sans';min-width:400px!important;padding:.625rem 1rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-footer,.picker-header{font-size:1.333rem;line-height:2.5rem;display:flex;height:2.5rem;width:100%}.picker-header-nav{position:relative;cursor:pointer;width:calc(100% / 8)}.picker-header-nav>*{position:absolute;top:50%;right:auto;bottom:auto;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.picker-header-nav .nav-next::before,.picker-header-nav .nav-prev::before{content:\" \";border-top:.5em solid transparent;border-bottom:.5em solid transparent;border-right:.75em solid #000;width:0;height:0;display:block;margin:0 auto}.picker-header-nav .nav-next::before{border-right:0;border-left:.75em solid #000}.picker-header-content{width:calc(100% * 6 / 8);text-align:center}.picker-header-content .month{font-size:1.778rem;line-height:2.5rem;margin-right:.5rem;font-weight:700}.picker-header-content .year{font-style:italic;color:#999}.picker-calendar{width:100%}.picker-calendar .picker-calendar-row{display:flex;flex-wrap:wrap;width:100%;margin-bottom:.625rem}.picker-calendar .picker-weekday{font-weight:700;text-align:left;color:#999;width:calc(100% / 7)}.picker-calendar .picker-day,.picker-calendar .picker-month,.picker-calendar .picker-year{font-size:1.333rem;line-height:2.5rem;position:relative;height:2.5rem;text-align:center;cursor:pointer;width:calc(100% / 7)}.picker-calendar .picker-day:hover,.picker-calendar .picker-month:hover,.picker-calendar .picker-year:hover{background:#b1dcfb}.picker-calendar .out-focus{color:#ddd}.picker-calendar .out-focus:hover{color:#000}.picker-calendar .selected{background:#0089ec;color:#fff}.picker-calendar .selected:hover{background:#0089ec}.picker-calendar .today::before{content:\" \";position:absolute;top:2px;right:2px;width:0;height:0;border-top:.5em solid #0059bc;border-left:.5em solid transparent}.picker-footer{cursor:pointer}.picker-footer .picker-action{text-align:center;width:calc(100% / 3)}.picker-footer .picker-action:hover{background-color:#b1dcfb}.picker-footer .picker-action .text{padding-left:.8rem}.picker-footer .action-clear::before,.picker-footer .action-close::before,.picker-footer .action-today::before{content:\" \";position:relative;display:inline-block;height:0;width:0}.picker-footer .action-today::before{border-top:.66em solid #0059bc;border-left:.66em solid transparent}.picker-footer .action-clear::before{top:-.5rem;width:1rem;border-top:3px solid #e20}.picker-footer .action-close::before{width:1rem;height:1rem;background:linear-gradient(to bottom,transparent 35%,#777 35%,#777 65%,transparent 65%),linear-gradient(to right,transparent 35%,#777 35%,#777 65%,transparent 65%);-webkit-transform:rotate(45deg);transform:rotate(45deg)}`],\r\n})\r\n\r\nexport class DatePickerComponent implements OnInit {\r\n\r\n  public dayNames: Array<string>;\r\n\r\n  @Input() public initDate: any;\r\n  @Input() public locale = 'en';\r\n  @Input() public viewFormat = 'll';\r\n  @Input() public returnObject = 'js';\r\n  @Output() public onDatePickerCancel = new EventEmitter<boolean>();\r\n  @Output() public onSelectDate = new EventEmitter<any>();\r\n\r\n  public calendarDate: Moment;\r\n  public selectedDate: Moment;\r\n  public currentMonth: any ;\r\n  public today: Moment;\r\n  public currentYear: number;\r\n  public onDisplayMonths = false;\r\n  public onDisplayYears = false;\r\n  public displayYearsIndex = 0;\r\n  public displayYearRange: Array<number>;\r\n  public fullYearRange: Array<any>;\r\n  public monthsShort: Array<string> = moment.monthsShort();\r\n  public calendarDays: Array<Moment>;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.initValue();\r\n    // default to current year range\r\n    _.each(this.fullYearRange, (v, i) => {\r\n      this.currentYear = this.calendarDate.clone().startOf('year').year();\r\n      if (v.indexOf(this.currentYear) !== -1) {\r\n        this.displayYearsIndex = i;\r\n      }\r\n    });\r\n    this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\r\n    this.generateCalendar();\r\n  }\r\n\r\n  public prev(): void {\r\n    if (this.onDisplayYears) {\r\n      this.displayYearsIndex--;\r\n      if (this.displayYearsIndex < 0) {\r\n        this.displayYearsIndex = 0;\r\n      }\r\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\r\n    } else {\r\n      this.calendarDate = this.calendarDate.clone().subtract(1, 'M');\r\n    }\r\n    this.generateCalendar();\r\n  }\r\n\r\n  public showMonthSelection(): void {\r\n    this.onDisplayMonths = true;\r\n    this.onDisplayYears = false;\r\n  }\r\n\r\n  public showYearSelection(): void {\r\n    this.onDisplayYears = true;\r\n    this.onDisplayMonths = false;\r\n  }\r\n\r\n  public next(): void {\r\n    if (this.onDisplayYears) {\r\n      this.displayYearsIndex++;\r\n      if (this.displayYearsIndex >= this.fullYearRange.length) {\r\n        this.displayYearsIndex = this.fullYearRange.length - 1;\r\n      }\r\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex++];\r\n    } else {\r\n      this.calendarDate = this.calendarDate.clone().add(1, 'M');\r\n    }\r\n    this.generateCalendar();\r\n  }\r\n\r\n  public selectDay(day: Moment): void {\r\n    const daysDifference = day.diff(this.calendarDate.clone().startOf('date'), 'days');\r\n    day = this.calendarDate.clone().add(daysDifference, 'd');\r\n    const selectedDay = this.parseToReturnObjectType(day);\r\n    this.onSelectDate.emit(selectedDay);\r\n    this.cancelDatePicker();\r\n    return;\r\n  }\r\n\r\n  public selectMonth(month: string) {\r\n    this.calendarDate = this.calendarDate.clone().month(month);\r\n    this.onDisplayMonths = false;\r\n    this.generateCalendar();\r\n  }\r\n\r\n  public selectYear(year: number) {\r\n    this.calendarDate = this.calendarDate.clone().year(year);\r\n    this.onDisplayYears = false;\r\n    this.generateCalendar();\r\n  }\r\n\r\n  public selectToday(): void {\r\n    const today = this.parseToReturnObjectType(moment());\r\n    this.onSelectDate.emit(today);\r\n    this.cancelDatePicker();\r\n    return;\r\n  }\r\n\r\n  public clearPickDate(): void {\r\n    this.onSelectDate.emit(null);\r\n    this.cancelDatePicker();\r\n    return;\r\n  }\r\n\r\n  public cancelDatePicker(): void {\r\n    this.onDatePickerCancel.emit(false);\r\n    return;\r\n  }\r\n\r\n  protected generateYears(): void {\r\n    const currentYear = moment().year();\r\n    const startYr = this.calendarDate.clone().subtract(100, 'y').year();\r\n    // const endYr = this.calendarDate.clone().add(10, 'y').year();\r\n    const years = [];\r\n    for (let year = startYr; year <= currentYear; year++) {\r\n      years.push(year);\r\n    }\r\n\r\n    this.fullYearRange = _.chunk(years, 14);\r\n  }\r\n\r\n  protected initValue() {\r\n\r\n    // set moment locale (default is en)\r\n    moment.locale(this.locale);\r\n    // set today value\r\n    this.today = moment().startOf('date');\r\n    this.currentMonth = this.monthsShort[moment().month()];\r\n    this.currentYear = moment().year();\r\n\r\n    // set week days name array\r\n    this.dayNames = moment.weekdaysShort(true);\r\n\r\n    // check if the input initDate has value\r\n    if (this.initDate) {\r\n      this.calendarDate = this.returnObject === 'string' ? moment(this.initDate, this.viewFormat) :\r\n        moment(this.initDate);\r\n      this.selectedDate = this.calendarDate.clone().startOf('date');\r\n    } else {\r\n      this.calendarDate = moment();\r\n    }\r\n    this.generateYears();\r\n  }\r\n\r\n  protected generateCalendar(): void {\r\n    this.calendarDays = [];\r\n    const start = 0 - (this.calendarDate.clone().startOf('month').day() +\r\n     (7 - moment.localeData().firstDayOfWeek())) % 7;\r\n    const end = 41 + start; // iterator ending point\r\n\r\n    for (let i = start; i <= end; i += 1) {\r\n      const day = this.calendarDate.clone().startOf('month').add(i, 'days');\r\n      this.calendarDays.push(day);\r\n    }\r\n  }\r\n\r\n  protected parseToReturnObjectType(day: Moment): any {\r\n    switch (this.returnObject) {\r\n      case 'js':\r\n        return day.toDate();\r\n\r\n      case 'string':\r\n        return day.format(this.viewFormat);\r\n\r\n      case 'moment':\r\n        return day;\r\n\r\n      case 'json':\r\n        return day.toJSON();\r\n\r\n      case 'array':\r\n        return day.toArray();\r\n\r\n      case 'iso':\r\n        return day.toISOString();\r\n\r\n      case 'object':\r\n        return day.toObject();\r\n\r\n      default:\r\n        return day;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * time-picker.component\r\n */\r\n\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport * as moment_ from 'moment';\r\n\r\nconst moment = moment_;\r\nimport { Moment } from 'moment/moment';\r\n\r\n// webpack1_\r\ndeclare let require: any;\r\n// const myDpStyles: string = require('./time-picker.component.css');\r\n// const myDpTpl: string = require('./time-picker.component.html');\r\n// webpack2_\r\n\r\n@Component({\r\n    selector: 'time-picker',\r\n    template: `<picker-modal (onOverlayClick)=\"cancelTimePicker()\">\r\n    <div class=\"picker-wrap\">\r\n        <div class=\"picker-box\">\r\n            <div class=\"picker-header\">Time Picker</div>\r\n            <div class=\"picker-table\">\r\n                <ul class=\"picker-table-time\">\r\n                    <li class=\"picker-table-number hour\">\r\n                        <span class=\"arrow up\" (click)=\"increaseHour()\"></span>\r\n                        {{time | moment: hourFormat}}\r\n                        <span class=\"arrow down\" (click)=\"decreaseHour()\"></span>\r\n                    </li>\r\n                    <li class=\"picker-table-separator\">:</li>\r\n                    <li class=\"picker-table-number minute\">\r\n                        <span class=\"arrow up\" (click)=\"increaseMinute()\"></span>\r\n                        {{time | moment: 'mm'}}\r\n                        <span class=\"arrow down\" (click)=\"decreaseMinute()\"></span>\r\n                    </li>\r\n                    <li *ngIf=\"showSecond\" class=\"picker-table-separator\">:</li>\r\n                    <li *ngIf=\"showSecond\" class=\"picker-table-number second\">\r\n                        <span class=\"arrow up\" (click)=\"increaseSecond()\"></span>\r\n                        {{time | moment: 'ss'}}\r\n                        <span class=\"arrow down\" (click)=\"decreaseSecond()\"></span>\r\n                    </li>\r\n                    <li *ngIf=\"use12Hour\" class=\"picker-table-meridiem meridiem\">\r\n                        {{time | moment: 'A'}}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"picker-footer\">\r\n                <div class=\"picker-action action-now\" (click)=\"selectNow()\"><span class=\"text\">Now</span></div>\r\n                <div class=\"picker-action action-confirm\" (click)=\"selectTime()\"><span class=\"text\">Confirm</span></div>\r\n                <div class=\"picker-action action-clear\" (click)=\"clearTime()\"><span class=\"text\">Clear</span></div>\r\n                <div class=\"picker-action action-close\" (click)=\"cancelTimePicker()\"><span class=\"text\">Close</span></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</picker-modal>\r\n`,\r\n    styles: [`*,::after,::before{box-sizing:border-box}.picker-wrap{width:95vw;max-width:40rem;font-family:'Open Sans'}.picker-box{width:100%;padding:.625rem 1rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-footer,.picker-header{font-size:1.333rem;line-height:2.5rem;height:2.5rem;width:100%}.picker-header{text-align:center}.picker-table{width:100%;margin:2.5rem 0}.picker-table-time{font-size:2.37rem;line-height:2.5rem;list-style:none;margin:0;padding:0;display:flex;justify-content:center;width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-table-meridiem,.picker-table-number,.picker-table-separator{text-align:center}.picker-table-meridiem,.picker-table-number{position:relative;width:20%}.arrow{position:absolute;left:50%;border:solid #777;border-width:0 .2rem .2rem 0;display:inline-block;padding:.25rem;cursor:pointer}.arrow.up{top:-1rem;-webkit-transform:translateX(-50%) rotate(-135deg);transform:translateX(-50%) rotate(-135deg)}.arrow.down{bottom:-1rem;-webkit-transform:translateX(-50%) rotate(45deg);transform:translateX(-50%) rotate(45deg)}.arrow:hover{border-color:#1975d2}.picker-table-separator{width:calc(20% / 3)}.picker-footer{display:flex;justify-content:center;width:100%;cursor:pointer}.picker-footer .picker-action{width:25%;text-align:center}.picker-footer .picker-action:hover{background-color:#b1dcfb}.picker-footer .picker-action .text{padding-left:.8rem}.picker-footer .action-clear::before,.picker-footer .action-close::before,.picker-footer .action-confirm::before,.picker-footer .action-now::before{content:\" \";position:relative;display:inline-block;height:0;width:0}.picker-footer .action-now::before{border-top:.66em solid #0059bc;border-left:.66em solid transparent}.picker-footer .action-confirm::before{width:1rem;height:1rem;border-radius:100%;background-color:#00b5ad}.picker-footer .action-clear::before{top:-.5rem;width:1rem;border-top:3px solid #e20}.picker-footer .action-close::before{width:1rem;height:1rem;background:linear-gradient(to bottom,transparent 35%,#777 35%,#777 65%,transparent 65%),linear-gradient(to right,transparent 35%,#777 35%,#777 65%,transparent 65%);-webkit-transform:rotate(45deg);transform:rotate(45deg)}`],\r\n})\r\n\r\nexport class TimePickerComponent implements OnInit {\r\n\r\n    @Input() initTime: any;\r\n    @Input() showSecond = true;\r\n    @Input() viewFormat = 'hh:mm A';\r\n    @Input() use12Hour = false;\r\n    @Input() returnObject = 'js';\r\n    @Output() onSelectTime = new EventEmitter<any>();\r\n    @Output() onTimePickerCancel = new EventEmitter<boolean>();\r\n    hourFormat = 'HH';\r\n    public time: Moment;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.use12Hour) {\r\n            this.hourFormat = 'hh';\r\n        }\r\n        this.time = this.initTime ? moment(this.initTime, this.viewFormat) : moment();\r\n\r\n        // check if the input initDate has value\r\n        if (this.initTime) {\r\n            this.time = this.returnObject === 'string' ? moment(this.initTime, this.viewFormat) :\r\n                moment(this.initTime);\r\n        } else {\r\n            this.time = moment();\r\n        }\r\n    }\r\n\r\n    increaseHour(): void {\r\n        this.time = this.time.clone().add(1, 'h');\r\n    }\r\n\r\n    decreaseHour(): void {\r\n        this.time = this.time.clone().subtract(1, 'h');\r\n    }\r\n\r\n    increaseMinute() {\r\n        this.time = this.time.clone().add(1, 'm');\r\n    }\r\n\r\n    decreaseMinute() {\r\n        this.time = this.time.clone().subtract(1, 'm');\r\n    }\r\n\r\n    increaseSecond(): void {\r\n        this.time = this.time.clone().add(1, 's');\r\n    }\r\n\r\n    decreaseSecond(): void {\r\n        this.time = this.time.clone().subtract(1, 's');\r\n    }\r\n\r\n    selectTime(): void {\r\n        const selectTime = this.parseToReturnObjectType(this.time);\r\n        this.onSelectTime.emit(selectTime);\r\n        this.cancelTimePicker();\r\n        return;\r\n    }\r\n\r\n    selectNow(): void {\r\n        const selectTime = this.parseToReturnObjectType(moment());\r\n        this.onSelectTime.emit(selectTime);\r\n        this.cancelTimePicker();\r\n        return;\r\n    }\r\n\r\n    clearTime(): void {\r\n        this.onSelectTime.emit(null);\r\n        this.cancelTimePicker();\r\n        return;\r\n    }\r\n\r\n    cancelTimePicker(): void {\r\n        this.onTimePickerCancel.emit(false);\r\n        return;\r\n    }\r\n\r\n    protected parseToReturnObjectType(time: Moment): any {\r\n        switch (this.returnObject) {\r\n            case 'js':\r\n                return time.toDate();\r\n\r\n            case 'string':\r\n                return time.format(this.viewFormat);\r\n\r\n            case 'moment':\r\n                return time;\r\n\r\n            case 'json':\r\n                return time.toJSON();\r\n\r\n            case 'array':\r\n                return time.toArray();\r\n\r\n            case 'iso':\r\n                return time.toISOString();\r\n\r\n            case 'object':\r\n                return time.toObject();\r\n\r\n            default:\r\n                return time;\r\n        }\r\n    }\r\n\r\n}\r\n","/**\r\n * modal.component\r\n */\r\n\r\nimport {\r\n    Component, Output, OnInit, EventEmitter,\r\n    ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\n// webpack1_\r\ndeclare let require: any;\r\n// const myDpStyles: string = require('./modal.component.css');\r\n// const myDpTpl: string = require('./modal.component.html');\r\n// webpack2_\r\n\r\n@Component({\r\n    selector: 'picker-modal',\r\n    template: `<section class=\"x-modal\">\r\n    <section class=\"modal-overlay\" (click)=\"closeModal()\"></section>\r\n    <section class=\"modal-main\" id=\"section-modal-main\">\r\n        <ng-content></ng-content>\r\n    </section>\r\n</section>\r\n`,\r\n    styles: [`:host{z-index:9999999999}*,::after,::before{box-sizing:border-box}.modal-main{position:absolute;left:19.6%;right:auto;top:auto;z-index:111;background-color:#fff;border:1px solid #d7dad7;border-radius:6px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);box-shadow:0 5px 15px rgba(0,0,0,.3)}`],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    animations: [\r\n    ],\r\n})\r\n\r\nexport class ModalComponent implements OnInit {\r\n\r\n    @Output() onOverlayClick = new EventEmitter<boolean>();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    closeModal() {\r\n        this.onOverlayClick.emit(false);\r\n    }\r\n}\r\n","/**\r\n * moment.pipe\r\n */\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { Moment } from 'moment/moment';\r\n\r\n@Pipe({name: 'moment'})\r\n\r\nexport class MomentPipe implements PipeTransform {\r\n    transform(moment: Moment, format?: string): string {\r\n        return format ? moment.format(format) : moment.format('MMM DD, YYYY');\r\n    }\r\n}\r\n","import { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport * as moment_ from 'moment';\r\n\r\nconst Moment = moment_;\r\n\r\n@Component({\r\n    selector: 'date-time-picker',\r\n    template: `<div class='row'>\r\n    <div *ngIf=\"!showTime\" class='col-xs-12 col-md-12'>\r\n        <input *ngIf=\"!showWeeks\" type=\"text\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\r\n            readonly placeholder=\"Select Date\" />\r\n        <div *ngIf=\"showWeeks\" class=\"input-group\">\r\n            <input type=\"text\" class=\"form-control\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\r\n                readonly placeholder=\"Select Date\">\r\n            <div class=\"input-group-btn\">\r\n                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Weeks <span class=\"caret\"></span></button>\r\n                <ul class=\"dropdown-menu up\">\r\n                    <li (click)=\"weeksSelected(count)\" *ngFor=\"let count of weeks\"><span> {{count}} Weeks</span></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"showTime\" class='col-xs-8 col-md-8'>\r\n        <input *ngIf=\"!showWeeks\" type=\"text\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\r\n            readonly placeholder=\"Select Date\" />\r\n        <div *ngIf=\"showWeeks\" class=\"input-group\">\r\n            <input type=\"text\" class=\"form-control\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\r\n                readonly placeholder=\"Select Date\">\r\n            <div class=\"input-group-btn\">\r\n                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Weeks <span class=\"caret\"></span></button>\r\n                <ul class=\"dropdown-menu up\">\r\n                    <li (click)=\"weeksSelected(count)\" *ngFor=\"let count of weeks\"><span> {{count}} Weeks</span></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"showTime\" class='col-xs-4 col-md-4'>\r\n        <input type=\"text\" class=\"form-control\" [value]=\"value | date: 'shortTime'\" (focus)=\"toggleTimePicker(true)\" readonly placeholder=\"Select Time\"\r\n        />\r\n    </div>\r\n</div>\r\n<date-picker *ngIf=\"showDatePicker\" [initDate]=\"value\" (onSelectDate)=\"setDate($event)\" (onDatePickerCancel)=\"toggleDatePicker($event)\"></date-picker>\r\n\r\n<time-picker *ngIf=\"showTimePicker\" [initTime]=\"value\" [use12Hour]=\"true\" (onSelectTime)=\"setTime($event)\" (onTimePickerCancel)=\"toggleTimePicker($event)\"></time-picker>\r\n`,\r\n    styles: [`input[readonly]{background-color:#fff}.up{bottom:100%!important;top:auto!important}.glyphicon{top:1px}`],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => DateTimePickerComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class DateTimePickerComponent implements OnInit, ControlValueAccessor {\r\n    @Input() modelValue: any;\r\n    @Input() showDate = true;\r\n    @Input() showTime = false;\r\n    @Input() showWeeks = false;\r\n    @Input() weeks: number[] = [2, 4, 6, 8, 12, 16, 24];\r\n    @Output() onDateChange = new EventEmitter<any>();\r\n    public showDatePicker = false;\r\n    public showTimePicker = false;\r\n    onChange: any = () => { };\r\n    onTouched: any = () => { };\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() { }\r\n\r\n    weeksSelected(count) {\r\n        const now = new Date();\r\n        const nextDate = now.setDate(now.getDate() + count * 7);\r\n        this.value = Moment(nextDate).format();\r\n    }\r\n    setDate(date: any): void {\r\n        if (date && date !== '') {\r\n            this.value = Moment(date).format();\r\n        } else {\r\n            this.value = date;\r\n        }\r\n\r\n    }\r\n\r\n    setTime(time: any): void {\r\n        if (time && time !== '') {\r\n            this.value = Moment(time).format();\r\n        } else {\r\n            this.value = time;\r\n        }\r\n        return;\r\n    }\r\n\r\n    toggleDatePicker(status: boolean): void {\r\n      this.showDatePicker = status;\r\n      /*setTimeout(function() {\r\n        let _body = document.getElementById('content-wrapper').getBoundingClientRect(),\r\n          elem = document.getElementById('section-modal-main');\r\n        if (elem) {\r\n          let elemBox = elem.getBoundingClientRect();\r\n          if (elemBox.bottom > _body.bottom) {\r\n            elem.style.bottom = '36px';\r\n          }\r\n        }\r\n      }, 0);*/\r\n      return;\r\n    }\r\n\r\n    toggleTimePicker(status: boolean): void {\r\n        this.showTimePicker = status;\r\n        return;\r\n    }\r\n    get value() {\r\n        return this.modelValue;\r\n    }\r\n\r\n    set value(val) {\r\n        this.modelValue = val;\r\n        this.onDateChange.emit(val);\r\n        this.onChange(val);\r\n        this.onTouched();\r\n    }\r\n\r\n    registerOnChange(fn) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    writeValue(value) {\r\n        if (value instanceof Date) {\r\n            this.value = Moment(value).format();\r\n        } else {\r\n            this.value = value;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * date-time-picker.module\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DatePickerComponent } from './date-picker/date-picker.component';\r\nimport { TimePickerComponent } from './time-picker/time-picker.component';\r\nimport { ModalComponent } from './picker-modal/modal.component';\r\nimport { MomentPipe } from './pipes/moment.pipe';\r\nimport { DateTimePickerComponent } from './date-time-picker.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule],\r\n    declarations: [\r\n        DatePickerComponent,\r\n        TimePickerComponent,\r\n        ModalComponent,\r\n        MomentPipe,\r\n        DateTimePickerComponent\r\n    ],\r\n    exports: [\r\n        DatePickerComponent,\r\n        TimePickerComponent,\r\n        ModalComponent,\r\n        MomentPipe,\r\n        DateTimePickerComponent\r\n    ],\r\n    providers: []\r\n})\r\nexport class DateTimePickerModule {\r\n}\r\n","import { Moment } from 'moment/moment';\r\n\r\nimport { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\r\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport * as moment_ from 'moment';\r\nconst moment = moment_;\r\n\r\nexport const MY_FORMATS = {\r\n    parse: {\r\n        dateInput: 'LL',\r\n    },\r\n    display: {\r\n        dateInput: 'LL',\r\n        monthYearLabel: 'MMM YYYY',\r\n        dateA11yLabel: 'LL',\r\n        monthYearA11yLabel: 'MMMM YYYY',\r\n    },\r\n};\r\n\r\n@Component({\r\n    selector: 'ngx-date-time-picker',\r\n    template: `<div>\r\n  <div class=\"row\">\r\n    <div [class]=\"getDatePickerCssClass()\">\r\n      <div class=\"input-group\">\r\n        <input matInput \r\n              [matDatepicker]=\"picker\" \r\n              class=\"form-control\" \r\n              [value]=\"value\" \r\n              placeholder=\"Choose a date\" \r\n              (dateChange)=\"onDateSelect($event)\"\r\n              (click)=\"picker.open()\"\r\n              readonly\r\n        >\r\n        <mat-datepicker #picker disabled=\"false\"></mat-datepicker>\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\" class=\"input-group-btn\"></mat-datepicker-toggle>\r\n      </div>\r\n    </div>\r\n    <div [class]=\"getWeekPickerCssClass()\" *ngIf=\"showWeeks\">\r\n      <mat-select placeholder=\"Select Weeks\"  class=\"form-control\" name=\"weeks\" (selectionChange) =\"weekSelect($event)\">\r\n        <mat-option *ngFor=\"let count of weeks\" [value]=\"count\">\r\n          {{count}} Weeks\r\n        </mat-option>\r\n      </mat-select>\r\n    </div>\r\n    <div [class]=\"getTimePickerCssClass()\" *ngIf=\"showTime\">\r\n          <input type=\"text\" class=\"form-control\" [value]=\"value | date: 'shortTime'\" (focus)=\"toggleTimePicker(true)\" readonly placeholder=\"Select Time\"\r\n          />\r\n          <time-picker *ngIf=\"showTimePicker\" [initTime]=\"value\" [use12Hour]=\"true\" (onSelectTime)=\"onTimeSelect($event)\" (onTimePickerCancel)=\"toggleTimePicker($event)\"></time-picker>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n`,\r\n    styles: [`#time-section{display:inline-block}#ngx-atp-time-picker,#ngx-mat-form-field{width:100%}.up{bottom:100%!important;top:auto!important}.time-btn{margin-top:-20px}`],\r\n    providers: [\r\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n        { provide: DateAdapter, useClass: MomentDateAdapter },\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => NgxDateTimePickerComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class NgxDateTimePickerComponent implements OnInit, ControlValueAccessor {\r\n\r\n    // public date = new FormControl(moment());\r\n    public selectedTime = moment().format();\r\n    public selectedDate = moment().format();\r\n    public loadInitial = false;\r\n    public value;\r\n    public showTimePicker = false;\r\n    @Input() weeks: number[] = [0, 2, 4, 6, 8, 12, 16, 24];\r\n    @Input() modelValue: any;\r\n    @Input() showTime = false;\r\n    @Input() showWeeks = true;\r\n    @Output() onDateChange = new EventEmitter<any>();\r\n    public onChange: any = () => { };\r\n    public onTouched: any = () => { };\r\n    public ngOnInit() {\r\n\r\n    }\r\n\r\n\r\n    public writeValue(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    public registerOnChange(fn) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    public registerOnTouched(fn) {\r\n\r\n    }\r\n\r\n    public onTimeSelect($event) {\r\n        const setDate = moment(this.selectedDate);\r\n        const setTime = $event;\r\n        this.setDateTime(setDate, setTime);\r\n    }\r\n\r\n    public onDateSelect($event) {\r\n\r\n        const setDate = moment($event.value);\r\n        const setTime = this.selectedTime;\r\n        const dateString = this.setDateTime(setDate, setTime);\r\n\r\n        const selectedDate = $event.value;\r\n        this.value = dateString;\r\n\r\n    }\r\n\r\n    public toggleTimePicker(status: boolean): void {\r\n        this.showTimePicker = status;\r\n        return;\r\n    }\r\n\r\n\r\n    public setCurrentTime() {\r\n\r\n        const setDate = moment(this.selectedDate);\r\n        const currentTime = moment().format('HH:mm:ss');\r\n        this.setDateTime(setDate, currentTime);\r\n    }\r\n\r\n    public weekSelect($event) {\r\n        const dateToUse = moment().format();\r\n        const nextWeekDate = moment(dateToUse).add($event.value, 'weeks');\r\n        const nextWeekTime = dateToUse;\r\n        this.setDateTime(nextWeekDate, nextWeekTime);\r\n    }\r\n\r\n    public selectionChange($event) {\r\n        console.log('Week selected', $event);\r\n    }\r\n\r\n\r\n    public getWeekPickerCssClass() {\r\n        if (this.showTime) {\r\n            return 'col-sm-2 form-group';\r\n        }\r\n        return 'col-sm-3 form-group';\r\n    }\r\n\r\n    public getDatePickerCssClass() {\r\n        if (this.showTime && this.showWeeks) {\r\n            return 'col-sm-5 form-group';\r\n        }\r\n\r\n        if (this.showWeeks === true) {\r\n            return 'col-sm-9 form-group';\r\n        }\r\n\r\n        if (this.showTime === true) {\r\n            return 'col-sm-8 form-group';\r\n        }\r\n        return 'col-sm-12 form-group';\r\n    }\r\n\r\n    public getTimePickerCssClass() {\r\n        if (this.showTime && this.showWeeks) {\r\n            return 'col-sm-5 form-group';\r\n        }\r\n\r\n        if (this.showWeeks === true) {\r\n            return 'col-sm-9 form-group';\r\n        }\r\n        return 'col-sm-4 form-group';\r\n    }\r\n\r\n    public setDateTime(setDate, setTime) {\r\n        const newDate = moment(setDate).format('DD-MM-YYYY');\r\n        let newTime;\r\n        if (this.showTime) {\r\n            newTime = moment(setTime).format('HH:mm:ss');\r\n        } else {\r\n            newTime = '00:00:00';\r\n        }\r\n        const newDateTime = moment(newDate + '' + newTime, 'DD-MM-YYYY HH:mm:ss');\r\n        const dateTimeString = moment(newDateTime).format();\r\n        this.selectedDate = dateTimeString;\r\n        this.selectedTime = dateTimeString;\r\n        this.value = dateTimeString;\r\n        this.onChange(this.value);\r\n\r\n        return dateTimeString;\r\n\r\n\r\n    }\r\n}\r\n","/**\r\n * date-time-picker.module\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatNativeDateModule , MatInputModule } from '@angular/material';\r\nimport { NgxDateTimePickerComponent } from './ngx-date-time-picker.component';\r\n// import { AmazingTimePickerModule } from 'amazing-time-picker';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatDatepickerModule,\r\n        MatFormFieldModule,\r\n        MatNativeDateModule,\r\n        MatInputModule,\r\n        DateTimePickerModule,\r\n        // AmazingTimePickerModule,\r\n        MatSelectModule\r\n    ],\r\n    declarations: [\r\n        NgxDateTimePickerComponent\r\n    ],\r\n    exports: [\r\n        MatDatepickerModule,\r\n        MatFormFieldModule,\r\n        MatNativeDateModule,\r\n        MatInputModule,\r\n        NgxDateTimePickerComponent\r\n    ],\r\n    providers: [\r\n    ]\r\n})\r\nexport class NgxDateTimePickerModule {\r\n}\r\n","\r\nimport { SelectOption } from './interfaces/select-option';\r\nexport class Option {\r\n    label: string;\r\n    value: any;\r\n    constructor(options: SelectOption) {\r\n        this.label = options.label;\r\n        this.value = options.value;\r\n    }\r\n}\r\n","import {\r\n  Component, Input, forwardRef, OnInit, OnChanges\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Option } from '../form-entry/question-models/select-option';\r\n\r\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\r\n\r\n\r\n@Component({\r\n  selector: 'afe-ng-select',\r\n  template: `<ng-select\r\n                   (searchInputText)=\"getChangingText($event)\"\r\n                    (ngModelChange)=\"onValueChange($event)\"\r\n                    [options]=\"question_options\"\r\n                    [multiple]=\"multiple\" >\r\n            </ng-select>\r\n  `,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => AfeNgSelectComponent),\r\n      multi: true\r\n    }]\r\n})\r\nexport class AfeNgSelectComponent implements ControlValueAccessor, OnInit, OnChanges {\r\n  subject: BehaviorSubject<Option[]>;\r\n  subjectOption: BehaviorSubject<Option>;\r\n  @Input() dataSource: DataSource;\r\n  @Input() multiple: boolean;\r\n  @Input() extras: any;\r\n  question_options: any = [];\r\n  selected_question_option: any;\r\n  errors: any = [];\r\n  propagateChange = (_: any) => { };\r\n\r\n  getChangingText(event) {\r\n    // console.log(event);\r\n    this.getData(event).subscribe((options) => {\r\n      this.question_options = options;\r\n    });\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.propagateChange = fn;\r\n\r\n  }\r\n\r\n  registerOnTouched(fn: any): void { }\r\n\r\n  ngOnChanges(changes: any) { }\r\n\r\n  ngOnInit() {\r\n    if (this.extras) {\r\n      if (this.extras.originalValue) {\r\n        this.resolveSelectedOption(this.extras.originalValue).subscribe((option) => {\r\n          this.selected_question_option = option;\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  getData(searchText: string): Observable<Option[]> {\r\n\r\n    this.subject = new BehaviorSubject<Option[]>([]);\r\n\r\n    const OptionsObservable = this.dataSource.searchOptions(searchText);\r\n\r\n    OptionsObservable.subscribe(\r\n      (options) => {\r\n        // console.log('options', options);\r\n        const mappedOptions: Option[] = new Array<Option>();\r\n\r\n        for (let i = 0; i < options.length; i++) {\r\n          mappedOptions.push(new Option(options[i]));\r\n        }\r\n        this.subject.next(mappedOptions);\r\n      },\r\n      (error) => {\r\n        this.subject.error(error);\r\n      }\r\n    );\r\n\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  onValueChange(event) { }\r\n  resolveSelectedOption(value: any): Observable<Option> {\r\n\r\n    this.subjectOption = new BehaviorSubject<Option>(null);\r\n    const OptionObservable = this.dataSource.resolveSelectedValue(value);\r\n\r\n    OptionObservable.subscribe(\r\n      (option) => {\r\n        // console.log('option', option);\r\n        this.subjectOption.next(option);\r\n      },\r\n      (error) => {\r\n        this.subjectOption.error(error);\r\n      }\r\n    );\r\n\r\n    return this.subjectOption.asObservable();\r\n  }\r\n\r\n  resetOptions() {\r\n    this.subject.next(new Array<Option>());\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as _ from 'lodash';\r\n\r\n@Injectable()\r\nexport class FormSchemaCompiler {\r\n  constructor() {\r\n\r\n  }\r\n\r\n  public compileFormSchema(formSchema: Object, referencedComponents: Array<any>): Object {\r\n    // get all referenced forms\r\n    const refForms: Object = this.getReferencedForms(formSchema, referencedComponents);\r\n    if (_.isEmpty(refForms)) { return formSchema; }\r\n\r\n    // get all place-holders from the form schema\r\n    const placeHolders = this.getAllPlaceholderObjects(formSchema);\r\n    if (_.isEmpty(placeHolders)) { return formSchema; }\r\n\r\n    // replace all placeHolders\r\n    this.replaceAllPlaceholdersWithActualObjects(refForms, placeHolders);\r\n    return formSchema;\r\n  }\r\n\r\n\r\n  private findSchemaByName(schemaArray: Array<any>, nameOfSchema: string): Object {\r\n    if (_.isEmpty(schemaArray) || _.isEmpty(nameOfSchema)) { return; }\r\n    let foundSchema: any = {};\r\n    _.each(schemaArray, (schema: any) => {\r\n      if (schema.name === nameOfSchema) {\r\n        foundSchema = schema;\r\n      }\r\n    });\r\n    return foundSchema;\r\n  }\r\n\r\n  private getPageInSchemaByLabel(schema: any, pageLabel: string): Object {\r\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel)) { return; }\r\n    let foundPage: Object = {};\r\n    _.each(schema.pages, (page) => {\r\n      if (page.label === pageLabel) {\r\n        foundPage = page;\r\n      }\r\n    }\r\n    );\r\n    return foundPage;\r\n  }\r\n\r\n  private getSectionInSchemaByPageLabelBySectionLabel\r\n    (schema: Object, pageLabel: string, sectionLabel: string): Object {\r\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel) || _.isEmpty(sectionLabel)) { return; }\r\n    const foundPage: any = this.getPageInSchemaByLabel(schema, pageLabel);\r\n    if (_.isEmpty(foundPage)) { return; }\r\n    let foundSection: Object = {};\r\n    _.each(foundPage.sections, (section) => {\r\n      if (section.label === sectionLabel) {\r\n        foundSection = section;\r\n      }\r\n    }\r\n    );\r\n    return foundSection;\r\n  }\r\n\r\n  private getQuestionByIdInSchema(schema: any, questionId: string): Array<any> {\r\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\r\n    if (Array.isArray(schema)) {\r\n      let question: Array<any>;\r\n      for (let i = 0; i < schema.length; i++) {\r\n        if (!_.isEmpty(schema[i])) {\r\n          question = this.getQuestionByIdInSchema(schema[i], questionId);\r\n        }\r\n        if (!_.isEmpty(question)) {\r\n          break;\r\n        }\r\n      }\r\n      return question;\r\n    } else if (typeof schema === 'object') {\r\n      if (this.isQuestionObjectWithId(schema, questionId)) {\r\n        return schema;\r\n      } else if (this.isSchemaSubObjectExpandable(schema)) {\r\n        const toExpand = (schema.pages || schema.sections || schema.questions);\r\n        return this.getQuestionByIdInSchema(toExpand, questionId);\r\n      } else {\r\n        return;\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  private getQuestionsArrayByQuestionIdInSchema(schema: any, questionId: string): Array<any> {\r\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\r\n    return this.getQuestionsArrayByQuestionId(schema, schema, questionId);\r\n  }\r\n\r\n\r\n  private getQuestionsArrayByQuestionId(parent: any, object: any, questionId: string): Array<any> {\r\n    if (Array.isArray(object)) {\r\n      let returnedValue: Array<any>;\r\n      for (let i = 0; i < object.length; i++) {\r\n        if (!_.isEmpty(object[i])) {\r\n          returnedValue = this.getQuestionsArrayByQuestionId(object, object[i], questionId);\r\n        }\r\n        if (!_.isEmpty(returnedValue)) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      return returnedValue;\r\n    } else if (typeof object === 'object') {\r\n      if (this.isQuestionObjectWithId(object, questionId)) {\r\n        return parent;\r\n      } else if (this.isSchemaSubObjectExpandable(object)) {\r\n        const toExpand = (object.pages || object.sections || object.questions);\r\n        return this.getQuestionsArrayByQuestionId(toExpand, toExpand, questionId);\r\n      } else {\r\n        return;\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  // object is page or section or question\r\n  private isSchemaSubObjectExpandable(object: Object): Boolean {\r\n    if (typeof object === 'object') {\r\n      const objectKeys = Object.keys(object);\r\n      if (_.includes(objectKeys, 'pages') ||\r\n        _.includes(objectKeys, 'sections') ||\r\n        _.includes(objectKeys, 'questions')) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private isQuestionObjectWithId(object: Object, id: any): Boolean {\r\n    return object['id'] === id;\r\n\r\n  }\r\n\r\n  private getAllPlaceholderObjects(schema: Object): Array<any> {\r\n    const referencedObjects: Array<any> = [];\r\n    this.extractPlaceholderObjects(schema, referencedObjects);\r\n    return referencedObjects;\r\n  }\r\n\r\n  private extractPlaceholderObjects(subSchema: any, objectsArray: Array<Object>): void {\r\n    if (_.isEmpty(subSchema)) { return; }\r\n    if (Array.isArray(subSchema)) {\r\n      for (let i = 0; i < subSchema.length; i++) {\r\n        if (!_.isEmpty(subSchema[i])) {\r\n          this.extractPlaceholderObjects(subSchema[i], objectsArray);\r\n        }\r\n      }\r\n    } else if (typeof subSchema === 'object') {\r\n      if (!_.isEmpty(subSchema.reference)) {\r\n        objectsArray.push(subSchema);\r\n      } else if (this.isSchemaSubObjectExpandable(subSchema)) {\r\n        const toExpand = (subSchema.pages || subSchema.sections || subSchema.questions);\r\n        this.extractPlaceholderObjects(toExpand, objectsArray);\r\n      }\r\n    }\r\n  }\r\n\r\n  private fillPlaceholderObject(placeHolderObject: Object, referenceObject: Object): Object {\r\n    for (const member in referenceObject) {\r\n      if (_.isEmpty(placeHolderObject[member])) {\r\n        placeHolderObject[member] = referenceObject[member];\r\n      }\r\n    }\r\n    return placeHolderObject;\r\n  }\r\n\r\n  private replaceAllPlaceholdersWithActualObjects\r\n    (keyValReferencedForms: Object, placeHoldersArray: Array<any>): Array<any> {\r\n    _.each(placeHoldersArray, (placeHolder) => {\r\n      const referencedObject: Object =\r\n        this.getReferencedObject(placeHolder.reference, keyValReferencedForms);\r\n\r\n      if (_.isEmpty(referencedObject)) {\r\n        console.error('Form compile: Error finding referenced object', placeHolder.reference);\r\n      } else {\r\n        placeHolder = this.fillPlaceholderObject(placeHolder, referencedObject);\r\n        placeHolder = this.removeExcludedQuestionsFromPlaceholder(placeHolder);\r\n        delete placeHolder['reference'];\r\n      }\r\n    });\r\n    return placeHoldersArray;\r\n  }\r\n\r\n  private removeObjectFromArray(array: Array<any>, object: Object): void {\r\n    const indexOfObject = array.indexOf(object);\r\n    if (indexOfObject === -1) { return; }\r\n\r\n    array.splice(indexOfObject, 1);\r\n  }\r\n\r\n  private removeExcludedQuestionsFromPlaceholder(placeHolder: any): Object {\r\n    if (Array.isArray(placeHolder.reference.excludeQuestions)) {\r\n      _.each(placeHolder.reference.excludeQuestions, (excludedQuestionId) => {\r\n        const questionsArray: Array<any> = this.getQuestionsArrayByQuestionIdInSchema(\r\n          placeHolder, excludedQuestionId);\r\n\r\n        if (!Array.isArray(questionsArray)) { return; }\r\n        const question = this.getQuestionByIdInSchema(questionsArray, excludedQuestionId);\r\n\r\n        this.removeObjectFromArray(questionsArray, question);\r\n      });\r\n    }\r\n    return placeHolder;\r\n  }\r\n\r\n  private getReferencedObject(referenceData: any, keyValReferencedForms: Object): Object {\r\n    if (_.isEmpty(referenceData.form)) {\r\n      console.error('Form compile: reference missing form attribute', referenceData);\r\n      return;\r\n    }\r\n    if (_.isEmpty(keyValReferencedForms[referenceData.form])) {\r\n      console.error('Form compile: referenced form alias not found', referenceData);\r\n      return;\r\n    }\r\n    if (!_.isEmpty(referenceData.questionId)) {\r\n      return this.getQuestionByIdInSchema(\r\n        keyValReferencedForms[referenceData.form],\r\n        referenceData.questionId);\r\n    }\r\n\r\n    if (!_.isEmpty(referenceData.page) && !_.isEmpty(referenceData.section)) {\r\n      return this.getSectionInSchemaByPageLabelBySectionLabel(\r\n        keyValReferencedForms[referenceData.form],\r\n        referenceData.page,\r\n        referenceData.section\r\n      );\r\n    }\r\n    if (!_.isEmpty(referenceData.page)) {\r\n      return this.getPageInSchemaByLabel(\r\n        keyValReferencedForms[referenceData.form],\r\n        referenceData.page\r\n      );\r\n    }\r\n    console.error('Form compile: Unsupported reference type', referenceData.reference);\r\n  }\r\n\r\n  private getReferencedForms(formSchema: any, formSchemasLookupArray: Array<any>): Object {\r\n    const referencedForms: Array<any> = formSchema.referencedForms;\r\n\r\n    if (_.isEmpty(referencedForms)) { return; }\r\n\r\n    const keyValReferencedForms: Object = {};\r\n\r\n    _.each(referencedForms, (reference: any) => {\r\n      keyValReferencedForms[reference.alias] =\r\n        this.findSchemaByName(formSchemasLookupArray, reference.formName);\r\n    });\r\n    return keyValReferencedForms;\r\n  }\r\n}\r\n","import { QuestionBase } from './question-base';\r\nimport { TextQuestionOptions } from './interfaces/text-question-options';\r\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\r\n\r\nexport class TextInputQuestion extends QuestionBase {\r\n\r\n    placeholder: string;\r\n    constructor(options: TextQuestionOptions) {\r\n\r\n        super(options);\r\n        this.placeholder = options.placeholder || '';\r\n        this.controlType = AfeControlType.AfeFormControl;\r\n    }\r\n}\r\n","import { TextInputQuestion } from './text-input-question';\r\nimport { TextAreaQuestionOptions } from './interfaces/text-area-question-options';\r\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\r\n\r\nexport class TextAreaInputQuestion extends TextInputQuestion {\r\n    isExpanded: boolean;\r\n    rows: number;\r\n\r\n    constructor(options: TextAreaQuestionOptions) {\r\n\r\n        super(options);\r\n        this.placeholder = options.placeholder || '';\r\n        this.isExpanded = options.isExpanded || false;\r\n        this.rows = options.rows || 18;\r\n        this.renderingType = 'textarea';\r\n        this.controlType = AfeControlType.AfeFormControl;\r\n    }\r\n}\r\n","import { QuestionBase } from './question-base';\r\nimport { SelectQuestionOptions } from './interfaces/select-question-options';\r\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\r\n\r\nexport class SelectQuestion extends QuestionBase {\r\n\r\n    options: { key: string, value: string }[];\r\n    dataSource?: any;\r\n\r\n    constructor(options: SelectQuestionOptions) {\r\n        super(options);\r\n        this.renderingType = 'select';\r\n        this.options = options.options || [];\r\n        this.controlType = AfeControlType.AfeFormControl;\r\n        this.dataSource = options.dataSource || '';\r\n    }\r\n\r\n}\r\n","import { QuestionBase } from './question-base';\r\nimport { UiSelectQuestionOptions } from './interfaces/ui-select-question-options';\r\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\r\n\r\nexport class UiSelectQuestion extends QuestionBase {\r\n\r\n    options: { key: string, value: string }[];\r\n    searchFunction: Function;\r\n    resolveFunction: Function;\r\n    constructor(options: UiSelectQuestionOptions) {\r\n        super(options);\r\n        this.renderingType = 'ui-select';\r\n        this.options = options.options || [];\r\n        this.controlType = AfeControlType.AfeFormControl;\r\n    }\r\n\r\n}\r\n","import { QuestionBase } from './question-base';\r\nimport { DateQuestionOptions } from './interfaces/date-question-options';\r\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\r\n\r\nexport class DateQuestion extends QuestionBase {\r\n    showTime = true;\r\n    showWeeksAdder = false;\r\n    constructor(options: DateQuestionOptions) {\r\n        super(options);\r\n        this.renderingType = 'date';\r\n        this.controlType = AfeControlType.AfeFormControl;\r\n    }\r\n}\r\n","import { SelectQuestion } from './select-question';\r\nimport { MultiSelectQuestionOptions } from './interfaces/multi-select-options';\r\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\r\n\r\nexport class MultiSelectQuestion extends SelectQuestion {\r\n\r\n    options: { key: string, value: string }[];\r\n\r\n    constructor(options: MultiSelectQuestionOptions) {\r\n        super(options);\r\n        this.renderingType = 'multi-select'  || 'single-select';\r\n        this.options = options.options || [];\r\n        this.controlType = AfeControlType.AfeFormControl;\r\n    }\r\n\r\n}\r\n","import { QuestionBase } from '../question-base';\r\nimport { BaseOptions } from './base-options';\r\n\r\nexport abstract class NestedQuestion extends QuestionBase {\r\n    abstract questions: QuestionBase[];\r\n    constructor(options: BaseOptions) {\r\n        super(options);\r\n    }\r\n}\r\n","import { QuestionBase } from './question-base';\r\nimport { GroupQuestionOptions } from './interfaces/group-question-options';\r\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\r\n\r\nimport { NestedQuestion } from './interfaces/nested-questions';\r\n\r\nexport class QuestionGroup extends NestedQuestion {\r\n    questions: QuestionBase[];\r\n    isExpanded = true;\r\n\r\n    constructor(options: GroupQuestionOptions) {\r\n        super(options);\r\n        this.renderingType = 'group';\r\n        this.questions = options.questions || [];\r\n        this.controlType = AfeControlType.AfeFormGroup;\r\n    }\r\n}\r\n","import { QuestionBase } from './question-base';\r\nimport { RepeatingQuestionOptions } from './interfaces/repeating-question-options';\r\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\r\n\r\nimport { NestedQuestion } from './interfaces/nested-questions';\r\n\r\nexport class RepeatingQuestion extends NestedQuestion {\r\n    questions: QuestionBase[];\r\n\r\n    constructor(options: RepeatingQuestionOptions) {\r\n        super(options);\r\n        this.renderingType = 'repeating';\r\n        this.questions = options.questions || [];\r\n        this.controlType = AfeControlType.AfeFormArray;\r\n    }\r\n}\r\n","import { QuestionBase } from './question-base';\r\nimport { CheckboxOptions } from './interfaces/checkbox-options';\r\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\r\n\r\nexport class CheckBoxQuestion extends QuestionBase {\r\n\r\n    options: { key: string, value: string }[];\r\n\r\n    constructor(options: CheckboxOptions) {\r\n        super(options);\r\n        this.renderingType = 'checkbox' || 'radio';\r\n        this.options = options.options || [];\r\n        this.controlType = AfeControlType.AfeFormControl;\r\n    }\r\n\r\n}\r\n","import { QuestionBase } from './question-base';\r\nimport { FileUploadQuestionOptions } from './interfaces/file-upload-question-options';\r\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\r\n\r\nexport class FileUploadQuestion extends QuestionBase {\r\n    showTime = true;\r\n    showWeeksAdder = false;\r\n    dataSource?: any;\r\n    constructor(options: FileUploadQuestionOptions) {\r\n        super(options);\r\n        this.renderingType = 'file';\r\n        this.dataSource = options.dataSource;\r\n        this.controlType = AfeControlType.AfeFormControl;\r\n    }\r\n}\r\n","import { QuestionBase } from './question-base';\r\nimport { TestOrderQuestionOptions } from './interfaces/test-order-question-options';\r\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\r\n\r\nexport class TestOrderQuestion extends QuestionBase {\r\n    orderType: string;\r\n    selectableOrders: { concept: string, label: string }[];\r\n    orderSettingUuid: string;\r\n    rendering: string;\r\n    options: any[];\r\n    constructor(options: TestOrderQuestionOptions) {\r\n        super(options);\r\n        this.renderingType = 'select';\r\n        this.orderType = options.orderType;\r\n        this.selectableOrders = options.selectableOrders;\r\n        this.options = options.options;\r\n        this.orderSettingUuid = options.orderSettingUuid;\r\n        this.rendering = options.orderSettingUuid;\r\n        this.controlType = AfeControlType.AfeFormControl;\r\n    }\r\n}\r\n","import { ValidationModel } from './validation.model';\r\n\r\nexport class DateValidationModel extends ValidationModel {\r\n\r\n  allowFutureDates = false;\r\n\r\n  constructor(validations: any) {\r\n    super(validations);\r\n\r\n    this.allowFutureDates = validations.allowFutureDates === 'true' ? true : false;\r\n  }\r\n}\r\n","import { ValidationModel } from './validation.model';\r\n\r\nexport class MaxValidationModel extends ValidationModel {\r\n\r\n  max: number;\r\n\r\n  constructor(validations: any) {\r\n    super(validations);\r\n    const max: any = validations.max;\r\n    this.max = +max;\r\n  }\r\n}\r\n","import { ValidationModel } from './validation.model';\r\n\r\nexport class MinValidationModel extends ValidationModel {\r\n\r\n  min: number;\r\n\r\n  constructor(validations: any) {\r\n    super(validations);\r\n    const min: any = validations.min;\r\n    this.min = +min;\r\n  }\r\n}\r\n","import { Option } from '../question-models/select-option';\r\nimport { DataSource } from '../question-models/interfaces/data-source';\r\nimport { Observable, BehaviorSubject, of } from 'rxjs';\r\n\r\n\r\nexport class DummyDataSource implements DataSource {\r\n  options: Observable<Option[]>;\r\n  option: Observable<Option>;\r\n  returnErrorOnNext = false;\r\n\r\n  constructor() { }\r\n\r\n  resolveSelectedValue(value): Observable<Option> {\r\n    let selectOptions = this.sampleData();\r\n\r\n    selectOptions = selectOptions.map(function (obj) {\r\n      const option = new Option({\r\n        label: obj.label,\r\n        value: obj.concept\r\n      });\r\n      return option;\r\n    });\r\n\r\n\r\n    selectOptions = selectOptions.filter(\r\n      option => option.value === value\r\n    );\r\n\r\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\r\n    if (!this.returnErrorOnNext) {\r\n      test.next(selectOptions[0]);\r\n    } else {\r\n      test.error(new Error('Error loading Options'));\r\n    }\r\n\r\n    return test.asObservable();\r\n  }\r\n  fileUpload(url) {\r\n    return of({ image: '' });\r\n  }\r\n  fetchFile(url) {\r\n    return of({ image: '' });\r\n  }\r\n  searchOptions(searchText): Observable<Option[]> {\r\n    let selectOptions = this.sampleData();\r\n\r\n    selectOptions = selectOptions.map(function (obj) {\r\n      const option = new Option({\r\n        label: obj.label,\r\n        value: obj.concept\r\n      });\r\n      return option;\r\n    });\r\n\r\n\r\n    selectOptions = selectOptions.filter(\r\n      option => option.label.indexOf(searchText) !== -1\r\n    );\r\n\r\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\r\n    if (!this.returnErrorOnNext) {\r\n      test.next(selectOptions);\r\n    } else {\r\n      test.error(new Error('Error loading Options'));\r\n    }\r\n\r\n    return test.asObservable();\r\n  }\r\n\r\n  sampleData(): any {\r\n    return [\r\n      {\r\n        concept: 'a899e0ac-1350-11df-a1f1-0026b9348838',\r\n        label: 'None'\r\n      },\r\n      {\r\n        concept: 'a8ad1276-1350-11df-a1f1-0026b9348838',\r\n        label: 'Breathlessness'\r\n      },\r\n      {\r\n        concept: 'a892e4b4-1350-11df-a1f1-0026b9348838',\r\n        label: 'Chest pain'\r\n      },\r\n      {\r\n        concept: 'a8afc8b8-1350-11df-a1f1-0026b9348838',\r\n        label: 'Cough = 2 weeks'\r\n      },\r\n      {\r\n        concept: 'd7adae14-c386-49cc-8f7c-765d8ceec566',\r\n        label: 'Fever for = 2 weeks'\r\n      },\r\n      {\r\n        concept: '3f57aafc-7162-41da-a51b-6a804cb6f5e8',\r\n        label: 'New exposure to household contact with TB'\r\n      },\r\n      {\r\n        concept: 'a89807f0-1350-11df-a1f1-0026b9348838',\r\n        label: 'Noticeable Weight loss'\r\n      },\r\n      {\r\n        concept: 'e1862fef-68ed-4df4-90dd-a00152f719aa',\r\n        label: 'Night sweats = 2 weeks'\r\n      },\r\n      {\r\n        concept: 'a8ad462e-1350-11df-a1f1-0026b9348838',\r\n        label: 'Abdomen'\r\n      },\r\n      {\r\n        concept: 'f218c60e-4b54-475a-a4fa-facab9216da8',\r\n        label: 'Groin'\r\n      },\r\n      {\r\n        concept: 'a8a774b0-1350-11df-a1f1-0026b9348838',\r\n        label: 'Joints'\r\n      },\r\n      {\r\n        concept: '4639388c-ee31-4dcf-abb4-ad71253493bb',\r\n        label: 'Neck Kw'\r\n      }\r\n\r\n    ];\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport * as moment_ from 'moment';\r\n\r\nconst moment = moment_;\r\n\r\n@Injectable()\r\nexport class HistoricalEncounterDataService {\r\n\r\n  dataSources: any = {};\r\n  constructor() {\r\n  }\r\n\r\n  registerEncounters(name: string, encounters: any) {\r\n    const encStore: any = {\r\n      data: [],\r\n      getValue: (key: string, index = 0): any => {\r\n        const pathArray = key.split('.');\r\n        if (pathArray.length > 0) {\r\n          return this.getFirstValue(pathArray, encStore.data[index]);\r\n        }\r\n        return encStore.data[index][key];\r\n      },\r\n      getAllObjects: () => {\r\n        return encStore.data;\r\n      },\r\n      getSingleObject: (index = 0) => {\r\n        return encStore.data[index];\r\n      }\r\n    };\r\n\r\n    if (_.isArray(encounters)) {\r\n      const group: Array<any> = [];\r\n      _.each(encounters, (encounter) => {\r\n        group.push(this._transformEncounter(encounter));\r\n      });\r\n\r\n      // Sort them in reverse chronological order\r\n      encStore.data = _.sortBy(group, 'encounterDatetime').reverse();\r\n    } else {\r\n      // Assume a single openmrs rest encounter object.\r\n      encStore.data.push(this._transformEncounter(encounters));\r\n    }\r\n\r\n    this.putObject(name, encStore);\r\n\r\n  }\r\n\r\n  putObject(name, object): void {\r\n    this.dataSources[name] = object;\r\n  }\r\n\r\n  getObject(name: string): any {\r\n    return this.dataSources[name] || null;\r\n  }\r\n\r\n  getFirstValue(path: Array<string>, object: any): any {\r\n\r\n    const answers = [];\r\n\r\n    this.getAllValues(path, object, answers);\r\n\r\n    if (answers.length > 0) {\r\n      return {\r\n        value: answers[0],\r\n        valueDate: moment(object.encounterDatetime).format('ll')\r\n      };\r\n    }\r\n\r\n  }\r\n\r\n  getAllValues(path, object, answers) {\r\n    if (_.isNil(object)) {\r\n      return;\r\n    }\r\n\r\n    if (path.length <= 1) {\r\n      if (!_.isNil(object[path[0]])) {\r\n        answers.push(object[path[0]]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const newpath = path.splice(1);\r\n    const key = path[0];\r\n\r\n    if (_.isArray(object[key]) && object[key].length > 0) {\r\n      _.each(object[key], (childObject) => {\r\n        this.getAllValues(newpath.slice(0), childObject, answers);\r\n      });\r\n    } else {\r\n      this.getAllValues(newpath.slice(0), object[key], answers);\r\n    }\r\n  }\r\n\r\n  private _transformEncounter(encounter: any) {\r\n    if (_.isNil(encounter)) {\r\n      return;\r\n    }\r\n    // Transform encounter Level details to key value pairs.\r\n    const prevEncounter: any = {\r\n      encounterDatetime: encounter.encounterDatetime\r\n    };\r\n\r\n    if (encounter.location && encounter.location.uuid) {\r\n      prevEncounter.location = encounter.location.uuid;\r\n    }\r\n\r\n    if (encounter.patient && encounter.patient.uuid) {\r\n      prevEncounter.patient = encounter.patient.uuid;\r\n    }\r\n\r\n    if (encounter.form && encounter.form.uuid) {\r\n      prevEncounter.form = encounter.form.uuid;\r\n    }\r\n\r\n    if (encounter.encounterType && encounter.encounterType.uuid) {\r\n      prevEncounter.encounterType = encounter.encounterType.uuid;\r\n    }\r\n\r\n    if (encounter.provider) {\r\n      const provider = encounter.provider;\r\n      prevEncounter.provider = provider.uuid;\r\n    }\r\n\r\n    // Deal with obs.\r\n    if (encounter.obs) {\r\n      const processedObs: any = this._transformObs(encounter.obs);\r\n\r\n      // add in individual processed obs to prevEncounter\r\n      _.extend(prevEncounter, processedObs);\r\n    }\r\n\r\n    return prevEncounter;\r\n  }\r\n\r\n  private _transformObs(obs: any): any {\r\n\r\n    if (!obs) {\r\n      return null;\r\n    }\r\n\r\n    const obsRep: any = {};\r\n    if (_.isArray(obs)) {\r\n      _.each(obs, (singleObs) => {\r\n        this._augumentObs(obsRep, this._transformObs(singleObs));\r\n      });\r\n      return obsRep;\r\n    } else if (obs.groupMembers) {\r\n      const group: any = {};\r\n      _.each(obs.groupMembers, (member) => {\r\n        this._augumentObs(group, this._transformObs(member));\r\n      });\r\n\r\n      // Handle already existing data\r\n      if (obsRep[obs.concept.uuid] && _.isArray(obsRep[obs.concept.uuid])) {\r\n        obsRep[obs.concept.uuid].push(group);\r\n      } else {\r\n        obsRep[obs.concept.uuid] = [group];\r\n      }\r\n      return obsRep;\r\n    } else {\r\n      if (obs.value instanceof Object) {\r\n        obsRep[obs.concept.uuid] = obs.value.uuid;\r\n      } else {\r\n        obsRep[obs.concept.uuid] = obs.value;\r\n      }\r\n      return obsRep;\r\n    }\r\n\r\n  }\r\n\r\n  private _augumentObs(existing: any, toAdd: any): any {\r\n    for (const key in toAdd) {\r\n      if (_.has(existing, key)) {\r\n        // check if not an array yet\r\n        if (!_.isArray(existing[key])) {\r\n          const temp = existing[key];\r\n          existing[key] = [temp];\r\n        }\r\n\r\n        // Check whether the incoming is array (for group members)\r\n        if (_.isArray(toAdd[key])) {\r\n          Array.prototype.push.apply(existing[key], toAdd[key]);\r\n        } else {\r\n          existing[key].push(toAdd[key]);\r\n        }\r\n      } else {\r\n        existing[key] = toAdd[key];\r\n      }\r\n    }\r\n    return existing;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HistoricalEncounterDataService } from '../services/historical-encounter-data.service';\r\nimport { JsExpressionHelper } from './js-expression-helper';\r\nimport { Runnable, ExpressionRunner } from '../expression-runner/expression-runner';\r\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\r\n\r\n@Injectable()\r\nexport class HistoricalHelperService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public evaluate(expr: string, dataSources: any, additionalScopevalues: any): any {\r\n    const HD = new HistoricalEncounterDataService();\r\n    HD.registerEncounters('prevEnc', dataSources['rawPrevEnc']);\r\n    const deps: any = {\r\n      HD: HD\r\n    };\r\n\r\n    if (additionalScopevalues) {\r\n      for (const o in additionalScopevalues) {\r\n        if (additionalScopevalues[o]) {\r\n          deps[o] = additionalScopevalues[o];\r\n        }\r\n      }\r\n    }\r\n\r\n    const helper = new JsExpressionHelper();\r\n    const control: AfeFormControl = new AfeFormControl();\r\n    const runner: ExpressionRunner = new ExpressionRunner();\r\n    const runnable: Runnable = runner.getRunnable(expr, control, helper.helperFunctions, deps);\r\n\r\n    return runnable.run();\r\n  }\r\n\r\n  public evaluatePrecondition(expr: string, dataSources: any, historicalValue: any): any {\r\n    const additionalScope = {\r\n      histValue: historicalValue\r\n    };\r\n\r\n    return this.evaluate(expr, dataSources, additionalScope);\r\n  }\r\n\r\n}\r\n","import * as _ from 'lodash';\r\nimport * as moment_ from 'moment';\r\n\r\nconst moment = moment_;\r\n\r\nimport { TextInputQuestion } from '../question-models/text-input-question';\r\nimport { TextAreaInputQuestion } from '../question-models/text-area-input-question';\r\nimport { SelectQuestion } from '../question-models/select-question';\r\nimport { UiSelectQuestion } from '../question-models/ui-select-question';\r\nimport { DateQuestion } from '../question-models/date-question';\r\nimport { MultiSelectQuestion } from '../question-models/multi-select-question';\r\nimport { QuestionGroup } from '../question-models/group-question';\r\nimport { RepeatingQuestion } from '../question-models/repeating-question';\r\nimport { QuestionBase } from '../question-models/question-base';\r\nimport { FileUploadQuestion } from '../question-models/file-upload-question';\r\nimport { TestOrderQuestion } from '../question-models/test-order-question';\r\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\r\n\r\nimport { ValidationModel } from '../question-models/validation.model';\r\nimport { DateValidationModel } from '../question-models/date-validation.model';\r\nimport { MaxValidationModel } from '../question-models/max-validation.model';\r\nimport { MinValidationModel } from '../question-models/min-validation.model';\r\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\r\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\r\nimport { DummyDataSource } from '../data-sources/dummy-data-source';\r\nimport { HistoricalHelperService } from '../helpers/historical-expression-helper-service';\r\nimport { Form } from './form';\r\nimport { CheckBoxQuestion } from '../question-models/models';\r\n\r\nexport class QuestionFactory {\r\n  dataSources: any = {};\r\n  historicalHelperService: HistoricalHelperService = new HistoricalHelperService();\r\n  constructor() {\r\n  }\r\n\r\n  createQuestionModel(formSchema: any, form?: Form): QuestionBase {\r\n    if (form) {\r\n      const dataSources = form.dataSourcesContainer.dataSources;\r\n      this.dataSources = dataSources;\r\n    }\r\n    return this.toFormQuestionModel(formSchema);\r\n  }\r\n\r\n  toSelectQuestion(schemaQuestion: any): SelectQuestion {\r\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.id;\r\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\r\n      return {\r\n        label: obj.label,\r\n        value: obj.concept\r\n      };\r\n    });\r\n\r\n    const options: any = question.options;\r\n    options.splice(0, 0, {\r\n      label: '',\r\n      value: ''\r\n    });\r\n\r\n    question.renderingType = schemaQuestion.questionOptions.rendering;\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toNumericQuestion(schemaQuestion: any): TextInputQuestion {\r\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.id;\r\n    question.renderingType = 'number';\r\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toNumberQuestion(schemaQuestion: any): TextInputQuestion {\r\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.id;\r\n    question.renderingType = 'number';\r\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\r\n    question.extras = schemaQuestion;\r\n\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toDateQuestion(schemaQuestion: any): DateQuestion {\r\n    if (schemaQuestion.type === 'encounterDatetime') {\r\n      return this.toEncounterDatetimeQuestion(schemaQuestion);\r\n    }\r\n    const question = new DateQuestion({ type: '', key: '' });\r\n    question.renderingType = 'date';\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n    question.showTime = schemaQuestion.questionOptions.showTime as boolean;\r\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\r\n\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toEncounterDatetimeQuestion(schemaQuestion: any): DateQuestion {\r\n    const question = new DateQuestion({ type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.renderingType = 'date';\r\n    question.key = schemaQuestion.id;\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\r\n\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n    question.showTime = true;\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toCheckBoxQuestion(schemaQuestion: any): CheckBoxQuestion {\r\n    const question = new CheckBoxQuestion({ options: [], type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.id;\r\n    question.extras = schemaQuestion;\r\n    question.options = schemaQuestion.questionOptions.answers.map((obj) => {\r\n      return {\r\n        label: obj.label,\r\n        value: obj.concept\r\n      };\r\n    });\r\n    question.options.splice(0, 0);\r\n\r\n    question.renderingType = schemaQuestion.questionOptions.rendering;\r\n    const mappings: any = {\r\n      label: 'label',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n\r\n  }\r\n\r\n  toMultiCheckboxQuestion(schemaQuestion: any): MultiSelectQuestion {\r\n    const question = new MultiSelectQuestion({ renderType: '', options: [], type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.id;\r\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\r\n      return {\r\n        label: obj.label,\r\n        value: obj.concept\r\n      };\r\n    });\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.dataSource = new DummyDataSource();\r\n    question.extras = schemaQuestion;\r\n\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toTextAreaQuestion(schemaQuestion: any): TextAreaInputQuestion {\r\n    const question = new TextAreaInputQuestion({\r\n      isExpanded: false, rows: 18,\r\n      placeholder: '', type: '', key: ''\r\n    });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.id;\r\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\r\n    question.isExpanded = schemaQuestion.isExpanded;\r\n    question.rows = schemaQuestion.questionOptions.rows;\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\r\n\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toTextQuestion(schemaQuestion: any): TextInputQuestion {\r\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.id;\r\n    question.renderingType = 'text';\r\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toFileUploadQuestion(schemaQuestion: any): FileUploadQuestion {\r\n    const question = new FileUploadQuestion({ type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.id;\r\n    question.renderingType = 'file';\r\n    question.dataSource = 'file';\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toDrugQuestion(schemaQuestion: any): SelectQuestion {\r\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.id;\r\n    question.renderingType = 'remote-select';\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n    question.dataSource = 'drug';\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toProblemQuestion(schemaQuestion: any): SelectQuestion {\r\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.id;\r\n    question.renderingType = 'remote-select';\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n    question.dataSource = 'problem';\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toConceptAnswerSelect(schemaQuestion: any): SelectQuestion {\r\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.id;\r\n    question.renderingType = 'remote-select';\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n    question.dataSource = schemaQuestion.questionOptions.dataSource || 'conceptAnswers';\r\n    question.dataSourceOptions = {\r\n      concept: schemaQuestion.questionOptions.concept\r\n    };\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toRepeatingQuestion(schemaQuestion: any): RepeatingQuestion {\r\n    const question = new RepeatingQuestion({ questions: [], type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\r\n    question.key = schemaQuestion.id;\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n\r\n    if (schemaQuestion.type === 'testOrder') {\r\n      const testOrder = this.toTestOrderQuestion(schemaQuestion);\r\n      const orders = []; orders.push(testOrder);\r\n      question.questions = orders;\r\n    }\r\n\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toGroupQuestion(schemaQuestion: any): QuestionGroup {\r\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\r\n    question.key = schemaQuestion.id;\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toPageQuestion(schemaQuestion: any): QuestionGroup {\r\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.label;\r\n    question.renderingType = 'page';\r\n    question.controlType = AfeControlType.None;\r\n    question.questions = [];\r\n    schemaQuestion.sections.forEach(element => {\r\n      question.questions.push(this.toSectionQuestion(element));\r\n    });\r\n    return question;\r\n  }\r\n\r\n  toFormQuestionModel(schemaQuestion: any): QuestionGroup {\r\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.label;\r\n    question.renderingType = 'form';\r\n    question.controlType = AfeControlType.AfeFormGroup;\r\n    question.extras = schemaQuestion;\r\n    question.questions = [];\r\n    schemaQuestion.pages.forEach(element => {\r\n      question.questions.push(this.toPageQuestion(element));\r\n    });\r\n\r\n    return question;\r\n  }\r\n\r\n  toSectionQuestion(schemaQuestion: any): QuestionGroup {\r\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.label;\r\n    question.renderingType = 'section';\r\n    question.controlType = AfeControlType.None;\r\n    question.isExpanded = schemaQuestion.isExpanded === 'true' ? true : false;\r\n    question.questions = this.getSchemaQuestions(schemaQuestion.questions);\r\n    return question;\r\n  }\r\n\r\n  toPersonAttributeQuestion(schemaQuestion: any): UiSelectQuestion {\r\n    const question = new UiSelectQuestion({\r\n      options: [], type: '', key: '', searchFunction: function () { },\r\n      resolveFunction: function () {\r\n\r\n      }\r\n    });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.id;\r\n    question.renderingType = 'remote-select';\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n    question.dataSource = 'personAttribute';\r\n\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toEncounterProviderQuestion(schemaQuestion: any): UiSelectQuestion {\r\n    const question = new UiSelectQuestion({\r\n      options: [], type: '', key: '', searchFunction: function () { },\r\n      resolveFunction: function () {\r\n\r\n      }\r\n    });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.id;\r\n    question.renderingType = 'remote-select';\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n    question.dataSource = 'provider';\r\n\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toFieldSetQuestion(schemaQuestion: any): QuestionGroup {\r\n    const toReturn = this.toGroupQuestion(schemaQuestion);\r\n    toReturn.renderingType = 'field-set';\r\n    return toReturn;\r\n  }\r\n\r\n  toEncounterLocationQuestion(schemaQuestion: any): UiSelectQuestion {\r\n    const question = new UiSelectQuestion({\r\n      options: [], type: '', key: '', searchFunction: function () { },\r\n      resolveFunction: function () {\r\n\r\n      }\r\n    });\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.id;\r\n    question.renderingType = schemaQuestion.type;\r\n    question.renderingType = 'remote-select';\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n    question.dataSource = 'location';\r\n\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    this.addDisableOrHideProperty(schemaQuestion, question);\r\n    this.addAlertProperty(schemaQuestion, question);\r\n    this.addHistoricalExpressions(schemaQuestion, question);\r\n    this.addCalculatorProperty(schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  toTestOrderQuestion(schemaQuestion: any): TestOrderQuestion {\r\n\r\n    const question = new TestOrderQuestion({\r\n      type: '', key: '', orderType: '', selectableOrders: [],\r\n      orderSettingUuid: '', label: '', rendering: ''\r\n    });\r\n\r\n    question.label = schemaQuestion.label;\r\n    question.key = schemaQuestion.id;\r\n    question.validators = this.addValidators(schemaQuestion);\r\n    question.extras = schemaQuestion;\r\n    question.options = schemaQuestion.questionOptions.selectableOrders.map(function (obj) {\r\n      return {\r\n        label: obj.label,\r\n        value: obj.concept\r\n      };\r\n    });\r\n\r\n    const mappings: any = {\r\n      label: 'label',\r\n      required: 'required',\r\n      id: 'key'\r\n    };\r\n    this.copyProperties(mappings, schemaQuestion, question);\r\n    return question;\r\n  }\r\n\r\n  getSchemaQuestions(schema: any): any {\r\n    const listQuestions = new Array();\r\n    this.getQuestions(schema, listQuestions);\r\n    return listQuestions;\r\n  }\r\n\r\n  getQuestions(schema: any, foundArray: any): any {\r\n    if (!Array.isArray(foundArray)) {\r\n      foundArray = [];\r\n    }\r\n    if (Array.isArray(schema)) {\r\n\r\n      for (const property in schema) {\r\n        if (schema.hasOwnProperty(property)) {\r\n          this.getQuestions(schema[property], foundArray);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (schema && !Array.isArray(schema) && typeof schema === 'object') {\r\n      if (schema.questionOptions) {\r\n        if (schema.questionOptions.rendering === 'group' ||\r\n          schema.questionOptions.rendering === 'repeating') {\r\n          // schema.questions = this.getGroupMembers(schema.questions);\r\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\r\n        } else if (schema.questionOptions.rendering === 'field-set') {\r\n        } else {\r\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\r\n        }\r\n      } else {\r\n        for (const o in schema) {\r\n          if (schema.hasOwnProperty(o)) {\r\n            this.getQuestions(schema[o], foundArray);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  getChildrenQuestionModels(schema: any): any {\r\n    const children = [];\r\n    this.getQuestions(schema, children);\r\n    return children;\r\n\r\n  }\r\n\r\n  toModel(schema: any, renderType: string): any {\r\n    if (renderType === 'ui-select-extended') {\r\n      renderType = schema.type;\r\n    }\r\n    if (!schema.id) {\r\n      schema['id'] = this.generateId(10);\r\n    }\r\n\r\n    if (schema.questionOptions &&\r\n      (schema.questionOptions.showDate === true ||\r\n        schema.questionOptions.showDate === 'true')) {\r\n      schema = this.convertOldVersionComplexObsQuestionToNewVersion(schema);\r\n      renderType = 'field-set';\r\n    }\r\n\r\n    switch (renderType) {\r\n      case 'select':\r\n        return this.toSelectQuestion(schema);\r\n      case 'single-select':\r\n        return this.toSelectQuestion(schema);\r\n      case 'multi-select':\r\n        return this.toSelectQuestion(schema);\r\n      case 'numeric':\r\n        return this.toNumericQuestion(schema);\r\n      case 'number':\r\n        return this.toNumberQuestion(schema);\r\n      case 'encounterDatetime':\r\n        return this.toEncounterDatetimeQuestion(schema);\r\n      case 'date':\r\n        return this.toDateQuestion(schema);\r\n      case 'multiCheckbox':\r\n        return this.toMultiCheckboxQuestion(schema);\r\n      case 'drug':\r\n        return this.toDrugQuestion(schema);\r\n      case 'problem':\r\n        return this.toProblemQuestion(schema);\r\n      case 'group':\r\n        return this.toGroupQuestion(schema);\r\n      case 'field-set':\r\n        return this.toFieldSetQuestion(schema);\r\n      case 'repeating':\r\n        return this.toRepeatingQuestion(schema);\r\n      case 'personAttribute':\r\n        return this.toPersonAttributeQuestion(schema);\r\n      case 'text':\r\n        return this.toTextQuestion(schema);\r\n      case 'textarea':\r\n        return this.toTextAreaQuestion(schema);\r\n      case 'textarea':\r\n        return this.toTextAreaQuestion(schema);\r\n      case 'select-concept-answers':\r\n        return this.toConceptAnswerSelect(schema);\r\n      case 'encounterLocation':\r\n        return this.toEncounterLocationQuestion(schema);\r\n      case 'encounterDatetime':\r\n        return this.toEncounterDatetimeQuestion(schema);\r\n      case 'encounterProvider':\r\n        return this.toEncounterProviderQuestion(schema);\r\n      case 'radio':\r\n        return this.toCheckBoxQuestion(schema);\r\n      case 'checkbox':\r\n        return this.toCheckBoxQuestion(schema);\r\n      case 'encounterProvider':\r\n        return this.toEncounterProviderQuestion(schema);\r\n      case 'file':\r\n        return this.toFileUploadQuestion(schema);\r\n      default:\r\n        console.warn('New Schema Question Type found.........' + renderType);\r\n        return this.toTextQuestion(schema);\r\n    }\r\n\r\n  }\r\n\r\n  convertOldVersionComplexObsQuestionToNewVersion(schemaQuestion: any) {\r\n    const converted: any = {};\r\n    converted.type = 'complex-obs';\r\n    converted.label = schemaQuestion.label;\r\n    converted.id = 'complex_' + schemaQuestion.id;\r\n    converted.questionOptions = {};\r\n    converted.questionOptions.concept = schemaQuestion.questionOptions.concept;\r\n    converted.questionOptions.rendering = 'field-set';\r\n    converted.questions = [];\r\n    converted.validators = [];\r\n\r\n    const mainField: any = JSON.parse(JSON.stringify(schemaQuestion));\r\n    mainField.type = 'complex-obs-child';\r\n    delete mainField.questionOptions.showDate;\r\n    delete mainField.questionOptions.shownDateOptions;\r\n    mainField.questionOptions.obsField = 'value';\r\n\r\n    const dateField: any = {};\r\n    dateField.type = 'complex-obs-child';\r\n    dateField.label = 'Date of ' + mainField.label;\r\n    dateField.id = 'date_' + mainField.id;\r\n    dateField.questionOptions = {};\r\n    dateField.questionOptions.concept = schemaQuestion.questionOptions.concept;\r\n    dateField.questionOptions.rendering = 'date';\r\n    dateField.questionOptions.obsField = 'obsDatetime';\r\n    const dateOptions: any = (Object as any).assign({},\r\n      schemaQuestion.questionOptions.shownDateOptions);\r\n    dateField.validators = dateOptions.validators;\r\n    dateField.hide = dateOptions.hide;\r\n\r\n\r\n    converted.questions.push(mainField);\r\n    converted.questions.push(dateField);\r\n\r\n    return converted;\r\n  }\r\n\r\n  copyProperties(mappings: any, source: any, destination: QuestionBase) {\r\n\r\n    for (const property in source) {\r\n      if (mappings.hasOwnProperty(property) && destination.hasOwnProperty(mappings[property])) {\r\n        destination[mappings[property]] = source[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  addValidators(schemaQuestion: any): Array<ValidationModel> {\r\n\r\n    const validators: Array<ValidationModel> = [];\r\n\r\n    if (schemaQuestion.validators) {\r\n\r\n      // TODO - add more validator types\r\n      _.forEach(schemaQuestion.validators, (validator: any) => {\r\n        switch (validator.type) {\r\n          case 'date':\r\n            validators.push(new DateValidationModel(validator));\r\n            break;\r\n          case 'js_expression':\r\n            validators.push(new JsExpressionValidationModel(validator));\r\n            break;\r\n          case 'conditionalAnswered':\r\n            validators.push(new ConditionalValidationModel(validator));\r\n            break;\r\n          default:\r\n            validators.push(new ValidationModel(validator));\r\n            break;\r\n        }\r\n      });\r\n    }\r\n\r\n    const questionOptions = schemaQuestion.questionOptions;\r\n    const renderingType = questionOptions ? questionOptions.rendering : '';\r\n    switch (renderingType) {\r\n      case 'number':\r\n\r\n        if (questionOptions.max && questionOptions.min) {\r\n          validators.push(new MaxValidationModel({\r\n            type: 'max',\r\n            max: questionOptions.max\r\n          }));\r\n          validators.push(new MinValidationModel({\r\n            type: 'min',\r\n            min: questionOptions.min\r\n          }));\r\n        }\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // add conditional required validators\r\n    if (typeof schemaQuestion.required === 'object') {\r\n\r\n      const required: any = schemaQuestion.required;\r\n\r\n      if (required.type === 'conditionalRequired') {\r\n\r\n        validators.push(new ConditionalValidationModel({\r\n          referenceQuestionId: required.referenceQuestionId,\r\n          referenceQuestionAnswers: required.referenceQuestionAnswers,\r\n          type: required.type,\r\n          message: required.message,\r\n        }));\r\n      }\r\n    }\r\n\r\n    return validators;\r\n  }\r\n\r\n  addHistoricalExpressions(schemaQuestion: any, question: QuestionBase): any {\r\n    if (schemaQuestion.historicalExpression && schemaQuestion.historicalExpression.length > 0) {\r\n      question.setHistoricalValue(true);\r\n      if (schemaQuestion.showHistoricalEncounterDate !== undefined) {\r\n        question.showHistoricalEncounterDate(\r\n          (schemaQuestion.showHistoricalEncounterDate === 'true'));\r\n      } else {\r\n        question.showHistoricalEncounterDate();\r\n      }\r\n      const origValue = this.historicalHelperService.evaluate(schemaQuestion.historicalExpression,\r\n        this.dataSources, undefined);\r\n      question.historicalDataValue = origValue;\r\n      // console.info('historical value', origValue);\r\n      // console.info('historical data question :::', question);\r\n      // console.info('schema data question :::', schemaQuestion);\r\n\r\n      if (schemaQuestion.historicalPrepopulateCondition && origValue) {\r\n        const toPopulate = this.historicalHelperService.evaluatePrecondition(schemaQuestion.historicalPrepopulateCondition,\r\n          this.dataSources, origValue);\r\n\r\n        if (toPopulate) {\r\n          question.defaultValue = origValue.value;\r\n        }\r\n        return; // don't try to evaluate the other option\r\n      }\r\n\r\n      if (schemaQuestion.historicalPrepopulate && origValue) {\r\n        // sample schema options for this branch\r\n        // \"historicalPrepopulate\":true,\r\n        // \"allowedHistoricalValueAgeInDays\": 40000,\r\n        const valDate = moment(origValue.valueDate);\r\n        const differenceInDays = moment().diff(valDate, 'days');\r\n        if (Number.isInteger(schemaQuestion.allowedHistoricalValueAgeInDays)) {\r\n          if (differenceInDays <= schemaQuestion.allowedHistoricalValueAgeInDays) {\r\n            question.defaultValue = origValue.value;\r\n          }\r\n        } else {\r\n          question.defaultValue = origValue.value;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  addCalculatorProperty(schemaQuestion: any, question: QuestionBase): any {\r\n\r\n    if (schemaQuestion.questionOptions &&\r\n      typeof schemaQuestion.questionOptions.calculate === 'object') {\r\n      question.calculateExpression = schemaQuestion.questionOptions.calculate.calculateExpression;\r\n    }\r\n\r\n  }\r\n\r\n  addAlertProperty(schemaQuestion: any, question: QuestionBase): any {\r\n    if (schemaQuestion.alert) {\r\n      question.alert = schemaQuestion.alert;\r\n    }\r\n    // if (typeof schemaQuestion.message === 'object') {\r\n    //   if (schemaQuestion.message.alertWhenExpression) {\r\n    //     question.message = schemaQuestion.message.alertWhenExpression;\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  addDisableOrHideProperty(schemaQuestion: any, question: QuestionBase): any {\r\n\r\n    if (!!schemaQuestion.disable) {\r\n      question.disable = schemaQuestion.disable;\r\n    }\r\n\r\n    if (typeof schemaQuestion.disable === 'object') {\r\n      question.disable = schemaQuestion.disable.disableWhenExpression;\r\n    }\r\n\r\n    if (!!schemaQuestion.hide) {\r\n      question.hide = schemaQuestion.hide;\r\n    }\r\n    if (typeof schemaQuestion.hide === 'object') {\r\n\r\n      if (schemaQuestion.hide.hideWhenExpression) {\r\n        question.hide = schemaQuestion.hide.hideWhenExpression;\r\n      }\r\n    }\r\n  }\r\n  private generateId(x) {\r\n    let s = '_';\r\n    while (s.length < x && x > 0) {\r\n      const r = Math.random();\r\n      s += (r < 0.1 ? Math.floor(r * 100) :\r\n        String.fromCharCode(Math.floor(r * 26) + (r > 0.5 ? 97 : 65)));\r\n    }\r\n    return '_' + s;\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { FormFactory } from './form.factory';\r\nimport { QuestionFactory } from './question.factory';\r\nimport { DataSources } from '../data-sources/data-sources';\r\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\r\nimport { QuestionBase } from '../question-models/question-base';\r\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\r\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\r\n\r\nexport class Form {\r\n  public rootNode: GroupNode;\r\n  public valueProcessingInfo: any = {};\r\n    public existingOrders: any = {};\r\n  private _dataSourcesContainer: DataSources;\r\n  private _showErrors = false;\r\n  constructor(public schema: any, public formFactory: FormFactory, public questionFactory: QuestionFactory) {\r\n    this._dataSourcesContainer = new DataSources();\r\n  }\r\n\r\n  get dataSourcesContainer(): DataSources {\r\n    return this._dataSourcesContainer;\r\n  }\r\n\r\n  searchNodeByPath(node: GroupNode, path, found: Array<NodeBase>) {\r\n\r\n    const children: NodeBase = node.children;\r\n\r\n    for (const key in children) {\r\n\r\n      if (children.hasOwnProperty(key)) {\r\n\r\n        const child: NodeBase = children[key];\r\n\r\n        if (child instanceof GroupNode) {\r\n\r\n          if (path === child.path) {\r\n            found.push(child);\r\n            return found;\r\n          }\r\n\r\n          this.searchNodeByPath(child, path, found);\r\n        } else if (child instanceof LeafNode) {\r\n\r\n          if (path === child.path) {\r\n            found.push(child);\r\n            return found;\r\n          }\r\n        } else if (child instanceof ArrayNode) {\r\n\r\n          if (path === child.path) {\r\n            found.push(child);\r\n            return found;\r\n          }\r\n\r\n          const aChild: ArrayNode = child as ArrayNode;\r\n\r\n          aChild.children.forEach(aChildNode => {\r\n            this.searchNodeByPath(aChildNode, path, found);\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return found;\r\n  }\r\n\r\n  searchNodeByQuestionId(questionId: string, questionType?: string): Array<NodeBase> {\r\n    const found = [];\r\n    if (questionType) {\r\n      this.searchNodeByQuestionType(this.rootNode, questionType, found);\r\n    } else {\r\n      this.findNodesByQuestionId(this.rootNode, questionId, found);\r\n    }\r\n    return found;\r\n  }\r\n\r\n  searchNodeByQuestionType(rootNode: any, questionType: string , found: Array<NodeBase>) {\r\n\r\n    if (rootNode instanceof GroupNode) {\r\n      const nodeAsGroup = rootNode as GroupNode;\r\n      // tslint:disable-next-line:forin\r\n      for (const o in nodeAsGroup.children) {\r\n        this.searchNodeByQuestionType(nodeAsGroup.children[o], questionType, found);\r\n      }\r\n    }\r\n\r\n    if (rootNode instanceof ArrayNode) {\r\n      const nodeAsArray = rootNode as ArrayNode;\r\n\r\n      nodeAsArray.children.forEach(node => {\r\n        this.searchNodeByQuestionType(node, questionType, found);\r\n      });\r\n    }\r\n\r\n    if (rootNode instanceof LeafNode) {\r\n      const questionBase: QuestionBase = rootNode.question;\r\n\r\n      if (questionBase.extras && questionBase.extras.type && questionBase.extras.type === questionType) {\r\n        found.push(rootNode);\r\n      }\r\n    }\r\n  }\r\n\r\n  private findNodesByQuestionId(rootNode: NodeBase, questionId: string,\r\n    results: Array<NodeBase>) {\r\n    if (rootNode.question.key === questionId) {\r\n      results.push(rootNode);\r\n    }\r\n\r\n    if (rootNode instanceof GroupNode) {\r\n      const nodeAsGroup = rootNode as GroupNode;\r\n      // tslint:disable-next-line:forin\r\n      for (const o in nodeAsGroup.children) {\r\n        this.findNodesByQuestionId(nodeAsGroup.children[o], questionId, results);\r\n      }\r\n    }\r\n\r\n    if (rootNode instanceof ArrayNode) {\r\n      const nodeAsArray = rootNode as ArrayNode;\r\n\r\n      nodeAsArray.children.forEach(node => {\r\n        this.findNodesByQuestionId(node, questionId, results);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  get valid() {\r\n\r\n    return this.rootNode.control.valid;\r\n  }\r\n\r\n  set showErrors(show: boolean) {\r\n    this._showErrors = show;\r\n  }\r\n\r\n  get showErrors() {\r\n    return this._showErrors;\r\n  }\r\n\r\n  markInvalidControls(node: GroupNode, invalidControlNodes?: any) {\r\n\r\n\r\n    const children: NodeBase = node.children;\r\n\r\n    for (const key in children) {\r\n\r\n      if (children.hasOwnProperty(key)) {\r\n\r\n        const child: NodeBase = children[key];\r\n\r\n        if (child instanceof GroupNode) {\r\n\r\n          this.markInvalidControls(child, invalidControlNodes);\r\n        } else if (child instanceof LeafNode) {\r\n\r\n          const questionBase: QuestionBase = (child as LeafNode).question;\r\n\r\n          if (questionBase.key && questionBase.key.length > 0) {\r\n\r\n            const c: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\r\n\r\n            if (!c.valid && !c.disabled) {\r\n              if (invalidControlNodes) {\r\n                invalidControlNodes.push(child);\r\n              }\r\n\r\n              c.markAsTouched();\r\n            }\r\n          }\r\n        } else if (child instanceof ArrayNode) {\r\n          const arrayNode: ArrayNode = child as ArrayNode;\r\n\r\n          if (arrayNode && arrayNode.children && arrayNode.children.length > 0) {\r\n\r\n            _.forEach(arrayNode.children, (groupNode: any) => {\r\n              this.markInvalidControls(groupNode, invalidControlNodes);\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return invalidControlNodes;\r\n  }\r\n\r\n  updateHiddenDisabledStateForAllControls() {\r\n    this._updateHiddenDisabledStateForAllControls(this.rootNode);\r\n  }\r\n\r\n\r\n  updateAlertsForAllControls() {\r\n    this._updateAlertsForAllControls(this.rootNode);\r\n  }\r\n\r\n  private _updateAlertsForAllControls(rootNode: NodeBase) {\r\n    if (rootNode.control) {\r\n      if ((rootNode.control as any).updateAlert) {\r\n        (rootNode.control as any).updateAlert();\r\n      }\r\n    }\r\n\r\n    if (rootNode instanceof GroupNode) {\r\n      const nodeAsGroup = rootNode as GroupNode;\r\n      // tslint:disable-next-line:forin\r\n      for (const o in nodeAsGroup.children) {\r\n        this._updateAlertsForAllControls(nodeAsGroup.children[o]);\r\n      }\r\n    }\r\n\r\n    if (rootNode instanceof ArrayNode) {\r\n      const nodeAsArray = rootNode as ArrayNode;\r\n\r\n      nodeAsArray.children.forEach(node => {\r\n        this._updateAlertsForAllControls(node);\r\n      });\r\n    }\r\n\r\n  }\r\n  private _updateHiddenDisabledStateForAllControls(rootNode: NodeBase) {\r\n    if (rootNode.control) {\r\n      if ((rootNode.control as any).updateDisabledState) {\r\n        (rootNode.control as any).updateDisabledState();\r\n      }\r\n\r\n      if ((rootNode.control as any).updateHiddenState) {\r\n        (rootNode.control as any).updateHiddenState();\r\n      }\r\n    }\r\n\r\n    if (rootNode instanceof GroupNode) {\r\n      const nodeAsGroup = rootNode as GroupNode;\r\n      // tslint:disable-next-line:forin\r\n      for (const o in nodeAsGroup.children) {\r\n        this._updateHiddenDisabledStateForAllControls(nodeAsGroup.children[o]);\r\n      }\r\n    }\r\n\r\n    if (rootNode instanceof ArrayNode) {\r\n      const nodeAsArray = rootNode as ArrayNode;\r\n\r\n      nodeAsArray.children.forEach(node => {\r\n        this._updateHiddenDisabledStateForAllControls(node);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n// import { AbstractControl } from '@angular/forms';\r\n\r\nimport { LeafNode, GroupNode, ArrayNode, NodeBase } from './form-node';\r\nimport { QuestionBase, NestedQuestion, RepeatingQuestion, QuestionGroup\r\n} from '../question-models/models';\r\nimport { FormControlService } from './form-control.service';\r\nimport { QuestionFactory } from './question.factory';\r\nimport { AfeFormGroup, AfeControlType, AfeFormArray\r\n} from '../../abstract-controls-extension';\r\nimport { ControlRelationsFactory } from './control-relations.factory';\r\nimport { Validations } from '../validators/validations';\r\n\r\nimport { Form } from './form';\r\n\r\n@Injectable()\r\nexport class FormFactory {\r\n    public hd: any = {\r\n        getValue: () => {\r\n            return 20;\r\n        }\r\n    };\r\n\r\n    constructor(public controlService: FormControlService,\r\n        public questionFactroy: QuestionFactory, public controlRelationsFactory: ControlRelationsFactory) {\r\n    }\r\n\r\n    createForm(schema: any, dataSource?: any): Form {\r\n        const form: Form = new Form(schema, this, this.questionFactroy);\r\n        if (dataSource) {\r\n            for (const key in dataSource) {\r\n                if (dataSource.hasOwnProperty(key)) {\r\n                    form.dataSourcesContainer.registerDataSource(key, dataSource[key], false);\r\n                }\r\n            }\r\n        }\r\n        const question = this.questionFactroy.createQuestionModel(schema, form);\r\n        form.rootNode = this.createNode(question, null, null, form) as GroupNode;\r\n\r\n        this.buildRelations(form.rootNode);\r\n        form.updateHiddenDisabledStateForAllControls();\r\n        form.updateAlertsForAllControls();\r\n        return form;\r\n    }\r\n\r\n    buildRelations(rootNode: GroupNode) {\r\n\r\n        Validations.JSExpressionValidatorsEnabled = false;\r\n        this.controlRelationsFactory.buildRelations(rootNode);\r\n\r\n        // enable js expression validations\r\n        Validations.JSExpressionValidatorsEnabled = true;\r\n    }\r\n\r\n    createNode(question: QuestionBase | NestedQuestion,\r\n        parentNode?: GroupNode, parentControl?: AfeFormGroup, form?: Form): NodeBase {\r\n        let node: NodeBase = null;\r\n        if (question instanceof NestedQuestion) {\r\n            if (question instanceof RepeatingQuestion) {\r\n                node = this.createArrayNode(question, parentNode, parentControl, form);\r\n            } else {\r\n                node = this.createGroupNode(question, parentNode, parentControl, form);\r\n            }\r\n        } else {\r\n            node = this.createLeafNode(question, parentNode, parentControl, form);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    createLeafNode(question: QuestionBase,\r\n        parentNode: GroupNode, parentControl?: AfeFormGroup, form?: Form): LeafNode {\r\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form);\r\n        return new LeafNode(question, controlModel, null, form,\r\n            parentNode ? parentNode.path : undefined);\r\n    }\r\n\r\n    createGroupNode(question: NestedQuestion, parentNode?: GroupNode,\r\n        parentControl?: AfeFormGroup, form?: Form): GroupNode {\r\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\r\n        const groupNode = new GroupNode(question, controlModel, null,\r\n            form, parentNode ? parentNode.path : undefined);\r\n        this.createNodeChildren(question, groupNode, (controlModel || parentControl), form);\r\n        return groupNode;\r\n    }\r\n\r\n    createArrayNode(question: NestedQuestion, parentNode?: GroupNode,\r\n        parentControl?: AfeFormGroup, form?: Form): ArrayNode {\r\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\r\n        const arrayNode = new ArrayNode(question, controlModel, parentControl,\r\n            this, form, parentNode ? parentNode.path : undefined);\r\n        arrayNode.createChildFunc = this.createArrayNodeChild;\r\n        arrayNode.removeChildFunc = this.removeArrayNodeChild;\r\n\r\n        arrayNode.addChildNodeCreatedListener((node: GroupNode) => {\r\n\r\n            Validations.JSExpressionValidatorsEnabled = false;\r\n            this.controlRelationsFactory.buildArrayNodeRelations(node);\r\n            Validations.JSExpressionValidatorsEnabled = true;\r\n        });\r\n        return arrayNode;\r\n    }\r\n\r\n    createNodeChildren(question: NestedQuestion, node: GroupNode,\r\n        parentControl?: AfeFormGroup, form?: Form): any {\r\n        question.questions.forEach(element => {\r\n            const child = this.createNode(element, node, parentControl, form);\r\n            node.setChild(element.key, child);\r\n        });\r\n        return node.children;\r\n    }\r\n\r\n\r\n    createArrayNodeChild(question: RepeatingQuestion,\r\n        node: ArrayNode, factory?: FormFactory): GroupNode {\r\n\r\n        if (factory === null || factory === undefined) {\r\n            factory = this;\r\n        }\r\n        const groupQuestion: QuestionGroup =\r\n            new QuestionGroup({\r\n                key: node.path + '.' + node.children.length + '',\r\n                type: 'group', extras: question.extras, label: '', questions: question.questions\r\n            });\r\n\r\n        if (question.controlType === AfeControlType.None) {\r\n            groupQuestion.controlType = question.controlType;\r\n        }\r\n\r\n        const group = factory.createGroupNode(groupQuestion, null, null, node.form);\r\n        node.children.push(group);\r\n\r\n        if (node.control instanceof AfeFormArray) {\r\n            const nodeControl = node.control as AfeFormArray;\r\n            nodeControl.setControl(nodeControl.controls.length, group.control);\r\n        }\r\n\r\n        return group;\r\n    }\r\n\r\n    removeArrayNodeChild(index: number, node: ArrayNode) {\r\n        const nodeToRemove = node.children[index];\r\n\r\n        node.children.splice(index, 1);\r\n        if (node.control !== null || node.control !== undefined) {\r\n            if (node.control instanceof AfeFormArray) {\r\n                const control = node.control as AfeFormArray;\r\n                const controlIndexToRemove = control.controls.indexOf(nodeToRemove.control);\r\n                if (controlIndexToRemove >= 0) {\r\n                    control.removeAt(controlIndexToRemove);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import * as _ from 'lodash';\r\nimport * as moment_ from 'moment';\r\n\r\nconst moment = moment_;\r\n\r\nimport { NodeBase, ArrayNode, GroupNode, LeafNode } from '../form-factory/form-node';\r\n\r\nexport class ObsAdapterHelper {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    findObsAnswerToQuestion(node: NodeBase, obsArray: Array<any>): Array<any> {\r\n        const found = [];\r\n\r\n        if (!this.isObsNode(node)) {\r\n            return found;\r\n        }\r\n\r\n        if (node instanceof LeafNode ||\r\n            (node instanceof GroupNode &&\r\n                node.question.extras.type === 'complex-obs')) {\r\n            _.each(obsArray, (item) => {\r\n                if (item.concept &&\r\n                    item.concept.uuid === node.question.extras.questionOptions.concept) {\r\n                    found.push(item);\r\n                }\r\n            });\r\n\r\n            return found;\r\n        }\r\n\r\n        // At this point the node is either a group or a repeating node\r\n\r\n        const childQuestionsUuids = this.getChildQuestionsConceptUuids(node);\r\n        if (childQuestionsUuids.length > 0) {\r\n            _.each(obsArray, (obs) => {\r\n                if (obs.concept &&\r\n                    obs.concept.uuid === node.question.extras.questionOptions.concept &&\r\n                    Array.isArray(obs.groupMembers) &&\r\n                    this.isSubsetOf(childQuestionsUuids,\r\n                        this.getGroupMembersConceptUuids(obs))) {\r\n                    found.push(obs);\r\n                }\r\n            });\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    getChildQuestionsConceptUuids(node: NodeBase): Array<string> {\r\n        const found = [];\r\n\r\n        if (node.question.extras && node.question.extras.questions) {\r\n            _.each(node.question.extras.questions, (question) => {\r\n                if (question.questionOptions &&\r\n                    question.questionOptions.concept) {\r\n                    found.push(question.questionOptions.concept);\r\n                }\r\n            });\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    getGroupMembersConceptUuids(obsWithGroupMembers): Array<string> {\r\n        const found = [];\r\n\r\n        if (Array.isArray(obsWithGroupMembers.groupMembers)) {\r\n            _.each(obsWithGroupMembers.groupMembers,\r\n                (member) => {\r\n                    found.push(member.concept.uuid);\r\n                });\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    isObsNode(node: NodeBase): boolean {\r\n        return node.question.extras &&\r\n            (node.question.extras.type === 'obs' ||\r\n                node.question.extras.type === 'obsGroup' ||\r\n                node.question.extras.type === 'complex-obs' ||\r\n                node.question.extras.type === 'complex-obs-child');\r\n    }\r\n\r\n    isSubsetOf(supersetArray: Array<any>, subsetArray: Array<any>): boolean {\r\n        if (subsetArray.length === 0 && supersetArray.length === 0) {\r\n            return true;\r\n        }\r\n        return subsetArray.every((element): boolean => {\r\n            return supersetArray.indexOf(element) >= 0;\r\n        });\r\n    }\r\n\r\n    setSimpleObsNodeValue(node: NodeBase, obs: Array<any>) {\r\n        if (node && obs.length > 0) {\r\n            const obsToUse = obs[0];\r\n\r\n            // set initial value\r\n            node.initialValue = obsToUse;\r\n\r\n            if (!this.isEmpty(obsToUse.value) && obsToUse.value.uuid) {\r\n                // answer to the obs is a concept, use uuid value\r\n                this.setNodeFormControlValue(node, obsToUse.value.uuid);\r\n            } else if (!this.isEmpty(obsToUse.value)) {\r\n                this.setNodeFormControlValue(node, obsToUse.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    setMultiselectObsNodeValue(node: NodeBase, obs: Array<any>) {\r\n        if (node && obs.length > 0) {\r\n            node.initialValue = obs;\r\n\r\n            const obsUuids = [];\r\n            for (const m of obs) {\r\n                obsUuids.push(m.value.uuid);\r\n            }\r\n\r\n            this.setNodeFormControlValue(node, obsUuids);\r\n        }\r\n    }\r\n\r\n    setComplexObsNodeValue(node: NodeBase, obs: Array<any>) {\r\n        if (node && obs.length > 0) {\r\n            let valueField: LeafNode; // essential memmber\r\n            let dateField: LeafNode; // other member to be manipulated by user\r\n\r\n            const nodeAsGroup = (node as GroupNode);\r\n            // tslint:disable-next-line:forin\r\n            for (const o in nodeAsGroup.children) {\r\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\r\n                    valueField = nodeAsGroup.children[o];\r\n                }\r\n\r\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\r\n                    dateField = nodeAsGroup.children[o];\r\n                }\r\n            }\r\n\r\n            // set the obs value here\r\n            this.setNodeValue(valueField, obs);\r\n            node.initialValue = valueField.initialValue;\r\n\r\n            // set the date value here\r\n            dateField.initialValue = valueField.initialValue;\r\n            this.setNodeFormControlValue(dateField, valueField.initialValue.obsDatetime);\r\n        }\r\n    }\r\n\r\n    setGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\r\n        if (node && obs.length > 0) {\r\n            const groupNode = node as GroupNode;\r\n            groupNode.initialValue = obs[0];\r\n            // tslint:disable-next-line:forin\r\n            for (const o in groupNode.children) {\r\n                this.setNodeValue(groupNode.children[o], obs[0].groupMembers);\r\n            }\r\n        }\r\n    }\r\n\r\n    setRepeatingGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\r\n        if (node && obs.length > 0) {\r\n            const arrayNode = node as ArrayNode;\r\n            arrayNode.initialValue = obs;\r\n\r\n            for (let i = 0; i < obs.length; i++) {\r\n                const createdNode = arrayNode.createChildNode();\r\n                this.setGroupObsNodeValue(createdNode, [obs[i]]);\r\n            }\r\n        }\r\n    }\r\n\r\n    setNodeValue(node: NodeBase, obs: Array<any>) {\r\n        switch (this.getObsNodeType(node)) {\r\n            case 'unknown':\r\n                if (node instanceof GroupNode) {\r\n                    const groupNode = node as GroupNode;\r\n                    // tslint:disable-next-line:forin\r\n                    for (const o in groupNode.children) {\r\n                        this.setNodeValue(groupNode.children[o], obs);\r\n                    }\r\n                    break;\r\n                }\r\n                if (node instanceof ArrayNode) {\r\n                    const arrayNode = node as ArrayNode;\r\n                    for (let i = 0; i < arrayNode.children.length; i++) {\r\n                        this.setNodeValue(arrayNode.children[i], obs);\r\n                    }\r\n                    break;\r\n                }\r\n                break;\r\n            case 'simple':\r\n                // search asnwering obs at this point\r\n                const answeringObs = this.findObsAnswerToQuestion(node, obs);\r\n\r\n                // set answer here\r\n                this.setSimpleObsNodeValue(node, answeringObs);\r\n                break;\r\n\r\n            case 'multiselect':\r\n                // search asnwering obs at this point\r\n                const multiselectObs = this.findObsAnswerToQuestion(node, obs);\r\n\r\n                // set answer here\r\n                this.setMultiselectObsNodeValue(node, multiselectObs);\r\n                break;\r\n\r\n\r\n            case 'complex':\r\n                // search asnwering obs at this point\r\n                const complexObs = this.findObsAnswerToQuestion(node, obs);\r\n\r\n                // set answer here\r\n                this.setComplexObsNodeValue(node, complexObs);\r\n                break;\r\n\r\n            case 'group':\r\n                const groupObs = this.findObsAnswerToQuestion(node, obs);\r\n\r\n                if (groupObs.length > 0) {\r\n                    this.setGroupObsNodeValue(node, groupObs);\r\n                }\r\n\r\n                break;\r\n            case 'repeatingGroup':\r\n                const repeatingGroupObs = this.findObsAnswerToQuestion(node, obs);\r\n\r\n                if (repeatingGroupObs.length > 0) {\r\n                    this.setRepeatingGroupObsNodeValue(node, repeatingGroupObs);\r\n                }\r\n\r\n                break;\r\n            default:\r\n                console.error('Unknown obs node', node);\r\n                break;\r\n        }\r\n    }\r\n\r\n    setNodeFormControlValue(node: NodeBase, value) {\r\n        node.control.setValue(value);\r\n        // TODO: Determine if we need this call\r\n        // node.control.updateValueAndValidity();\r\n\r\n        // TODO: Remove this hack and put it in appropriate place\r\n        if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\r\n            node.question.setHistoricalValue(false);\r\n        }\r\n    }\r\n\r\n    getObsNodeType(node: NodeBase): string {\r\n        if (this.isObsNode(node)) {\r\n            if (node instanceof LeafNode &&\r\n                ( node.question.extras.questionOptions.rendering === 'multiCheckbox' ||\r\n                node.question.extras.questionOptions.rendering === 'checkbox' ||\r\n                node.question.extras.questionOptions.rendering === 'multi-select') ) {\r\n                return 'multiselect';\r\n            }\r\n\r\n            if (node instanceof LeafNode) {\r\n                return 'simple';\r\n            }\r\n\r\n            if (node instanceof GroupNode &&\r\n                node.question.extras.type === 'complex-obs') {\r\n                return 'complex';\r\n            }\r\n\r\n            if (node instanceof ArrayNode &&\r\n                node.question.extras.type === 'obsGroup' &&\r\n                node.question.extras.questionOptions.rendering === 'repeating') {\r\n                return 'repeatingGroup';\r\n            }\r\n\r\n            if (node instanceof GroupNode &&\r\n                node.question.extras.type === 'obsGroup') {\r\n                return 'group';\r\n            }\r\n\r\n            return 'unknownObs';\r\n        }\r\n        return 'unknown';\r\n    }\r\n\r\n    // PAYLOAD GENERATION FUNCTIONS\r\n    getSimpleObsPayload(node: NodeBase): any {\r\n        // check for empty values first\r\n        if (this.isEmpty(node.control.value)) {\r\n            if (node.initialValue) {\r\n                // Handle case for existing voided obs\r\n                return {\r\n                    uuid: node.initialValue.uuid,\r\n                    voided: true\r\n                };\r\n            }\r\n            return null;\r\n        }\r\n\r\n        // check for exisiting, unchanged values\r\n        if (node.initialValue && !this.simpleNodeValueChanged(node)) {\r\n            return null;\r\n        }\r\n\r\n        // all numbers, text, concepts answers are handled in the same way\r\n        // no need for further formatting in this case\r\n        const obs: any = {\r\n            concept: node.question.extras.questionOptions.concept,\r\n            value: node.control.value\r\n        };\r\n\r\n        // handle date fields\r\n        if (node.question.extras.questionOptions.rendering === 'date') {\r\n            obs.value = this.toOpenMrsDateTimeString(node.control.value);\r\n        }\r\n\r\n        if (node.initialValue) {\r\n            // for existing cases, delete concept property, and add uuid\r\n            delete obs.concept;\r\n            obs.uuid = node.initialValue.uuid;\r\n        }\r\n\r\n        return obs;\r\n    }\r\n\r\n    getComplexObsPayload(node: NodeBase) {\r\n        let valueField: LeafNode; // essential memmber\r\n        let dateField: LeafNode; // other member to be manipulated by user\r\n\r\n        const nodeAsGroup = (node as GroupNode);\r\n        // tslint:disable-next-line:forin\r\n        for (const o in nodeAsGroup.children) {\r\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\r\n                valueField = nodeAsGroup.children[o];\r\n            }\r\n\r\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\r\n                dateField = nodeAsGroup.children[o];\r\n            }\r\n        }\r\n\r\n        const valuePayload = this.getObsNodePayload(valueField);\r\n        console.log('valuePayload', valuePayload);\r\n\r\n        // set obs datetime for the generated payload\r\n        if (valuePayload.length > 0) {\r\n            valuePayload[0].obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\r\n            return valuePayload[0];\r\n        } else if (valuePayload.length === 0 && node.initialValue) {\r\n            // determine if date changed\r\n            if (!this.areDatesEqual(node.initialValue.obsDatetime, dateField.control.value)) {\r\n                const payload: any = {\r\n                    uuid: node.initialValue.uuid,\r\n                };\r\n                payload.obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\r\n                return payload;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getMultiselectObsPayload(node: NodeBase): Array<any> {\r\n        const payload: Array<any> = [];\r\n\r\n        const existingUuids = [];\r\n\r\n        // add voided obs i.e. deleted options\r\n        if (Array.isArray(node.initialValue)) {\r\n            _.each(node.initialValue, (item) => {\r\n                existingUuids.push(item.value.uuid);\r\n                if (Array.isArray(node.control.value)) {\r\n                    if (node.control.value.indexOf(item.value.uuid) < 0) {\r\n                        payload.push({\r\n                            uuid: item.uuid,\r\n                            voided: true\r\n                        });\r\n                    }\r\n                } else {\r\n                    // every value was deleted\r\n                    payload.push({\r\n                        uuid: item.uuid,\r\n                        voided: true\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        // add new obs i.e they didn't exisit originally\r\n        if (Array.isArray(node.control.value)) {\r\n            _.each(node.control.value, (item) => {\r\n                if (existingUuids.indexOf(item) < 0) {\r\n                    payload.push({\r\n                        concept: node.question.extras.questionOptions.concept,\r\n                        value: item\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        return payload;\r\n    }\r\n\r\n    getGroupPayload(node: NodeBase) {\r\n        const nodeAsGroup: GroupNode = node as GroupNode;\r\n\r\n        let childrenPayload = [];\r\n        _.each(nodeAsGroup.children, (child) => {\r\n            const payload = this.getObsNodePayload(child);\r\n            if (payload.length > 0) {\r\n                childrenPayload = childrenPayload.concat(payload);\r\n            }\r\n        });\r\n\r\n        if (childrenPayload.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const groupPayload: any = {\r\n            groupMembers: childrenPayload\r\n        };\r\n\r\n        if (nodeAsGroup.initialValue) {\r\n            groupPayload.uuid = nodeAsGroup.initialValue.uuid;\r\n\r\n        } else {\r\n            groupPayload.concept = nodeAsGroup.question.extras.questionOptions.concept;\r\n        }\r\n\r\n        return groupPayload;\r\n    }\r\n\r\n    getRepeatingGroupPayload(node: NodeBase) {\r\n        const nodeAsArray: ArrayNode = node as ArrayNode;\r\n\r\n        let childrenPayload = [];\r\n\r\n        const groupsUuidsAfterEditting = [];\r\n        _.each(nodeAsArray.children, (child) => {\r\n            const payload = this.getObsNodePayload(child);\r\n            if (payload.length > 0) {\r\n                childrenPayload = childrenPayload.concat(payload);\r\n            }\r\n            if (child.initialValue && child.initialValue.uuid) {\r\n                groupsUuidsAfterEditting.push(child.initialValue.uuid);\r\n            }\r\n        });\r\n\r\n        // void deleted groups\r\n        // console.log('groupsUuidsAfterEditting', groupsUuidsAfterEditting);\r\n        if (nodeAsArray.initialValue && Array.isArray(nodeAsArray.initialValue)) {\r\n            _.each(nodeAsArray.initialValue, (obs) => {\r\n                if (groupsUuidsAfterEditting.indexOf(obs.uuid) < 0) {\r\n                    const voidedGroup = {\r\n                        uuid: obs.uuid,\r\n                        voided: true\r\n                    };\r\n                    childrenPayload.push(voidedGroup);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (childrenPayload.length <= 0) {\r\n            return null;\r\n        }\r\n        return childrenPayload;\r\n\r\n    }\r\n\r\n    getObsNodePayload(node: NodeBase): Array<any> {\r\n        let payload = [];\r\n\r\n        switch (this.getObsNodeType(node)) {\r\n            case 'unknown':\r\n                if (node instanceof GroupNode) {\r\n                    const groupNode = node as GroupNode;\r\n                    // tslint:disable-next-line:forin\r\n                    for (const o in groupNode.children) {\r\n                        const groupNodePayoad = this.getObsNodePayload(groupNode.children[o]);\r\n                        if (Array.isArray(groupNodePayoad) && groupNodePayoad.length > 0) {\r\n                            payload = payload.concat(groupNodePayoad);\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                if (node instanceof ArrayNode) {\r\n                    const arrayNode = node as ArrayNode;\r\n                    for (let i = 0; i < arrayNode.children.length; i++) {\r\n                        const arrayNodePayload = this.getObsNodePayload(arrayNode.children[i]);\r\n                        if (Array.isArray(arrayNodePayload) && arrayNodePayload.length > 0) {\r\n                            payload = payload.concat(arrayNodePayload);\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                break;\r\n            case 'simple':\r\n                const simpleObs = this.getSimpleObsPayload(node);\r\n                if (simpleObs !== null) {\r\n                    payload.push(simpleObs);\r\n                }\r\n                break;\r\n\r\n            case 'multiselect':\r\n                const multiselectObs = this.getMultiselectObsPayload(node);\r\n\r\n                if (Array.isArray(multiselectObs) && multiselectObs.length > 0) {\r\n                    payload = payload.concat(multiselectObs);\r\n                }\r\n                break;\r\n\r\n            case 'complex':\r\n                const complexObs = this.getComplexObsPayload(node);\r\n                if (complexObs !== null) {\r\n                    payload.push(complexObs);\r\n                }\r\n                break;\r\n\r\n            case 'group':\r\n                const groupedObs = this.getGroupPayload(node);\r\n                if (groupedObs && groupedObs !== null) {\r\n                    payload.push(groupedObs);\r\n                }\r\n                break;\r\n            case 'repeatingGroup':\r\n                const repeatingGroupedObs = this.getRepeatingGroupPayload(node);\r\n                if (Array.isArray(repeatingGroupedObs) && repeatingGroupedObs.length > 0) {\r\n                    payload = payload.concat(repeatingGroupedObs);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return payload;\r\n    }\r\n\r\n    simpleNodeValueChanged(node: NodeBase): boolean {\r\n        if (node.initialValue) {\r\n            if (node.initialValue.value && node.initialValue.value.uuid) {\r\n                // question whose answer is a concept\r\n                return node.control.value !== node.initialValue.value.uuid;\r\n            }\r\n\r\n            if (node.question.extras.questionOptions.rendering === 'date') {\r\n                return !this.areDatesEqual(node.control.value, node.initialValue.value);\r\n            }\r\n            return node.control.value !== node.initialValue.value;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    areDatesEqual(date1, date2) {\r\n        return moment(date1).isSame(date2);\r\n    }\r\n\r\n    isEmpty(value): boolean {\r\n        if (value === '' ||\r\n            value === null ||\r\n            value === undefined\r\n            // || value === [] ||\r\n            // value === {}\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    toOpenMrsDateTimeString(datetime: string): string {\r\n        if (this.isEmpty(datetime)) {\r\n            return undefined;\r\n        } else {\r\n            // transform value to memoent value to avoid error\r\n            const formattedVal = moment(datetime).format();\r\n            const val = formattedVal.substring(0, 19).replace('T', ' ');\r\n            return this.isEmpty(val) ? undefined : val;\r\n\r\n        }\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport 'rxjs';\r\n\r\nimport * as _ from 'lodash';\r\n\r\nimport { LeafNode, GroupNode } from '../form-factory/form-node';\r\nimport { Form } from '../form-factory/form';\r\nimport { ValueAdapter } from './value.adapter';\r\nimport { ObsAdapterHelper } from './obs-adapter-helper';\r\n\r\n@Injectable()\r\nexport class ObsValueAdapter implements ValueAdapter {\r\n\r\n    constructor(private helper: ObsAdapterHelper) { }\r\n\r\n    generateFormPayload(form: Form) {\r\n        return this.helper.getObsNodePayload(form.rootNode);\r\n        // TODO: Get rid of the section below when the helper is stable.\r\n        // // Traverse  to get all nodes\r\n        // let pages = this.traverse(form.rootNode);\r\n        // // Extract actual question nodes\r\n        // let questionNodes = this.getQuestionNodes(pages);\r\n        // // Get obs Payload\r\n        // return this.getObsPayload(questionNodes);\r\n    }\r\n\r\n    populateForm(form: Form, payload) {\r\n        this.helper.setNodeValue(form.rootNode, payload);\r\n\r\n        // TODO: Get rid of the section below when the helper is stable.\r\n        // // Traverse  to get all nodes\r\n        // let pages = this.traverse(form.rootNode);\r\n        // // Extract actual question nodes\r\n        // let questionNodes = this.getQuestionNodes(pages);\r\n        // // Extract set obs\r\n        // this.setValues(questionNodes, payload);\r\n    }\r\n\r\n    // TODO: Get rid of all the functions below as they will not be needed\r\n    // once the helper is stable\r\n\r\n    setValues(nodes, payload?, forcegroup?) {\r\n        if (nodes) {\r\n            for (const node of nodes) {\r\n                if (node instanceof LeafNode) {\r\n                    this.setObsValue(node, payload);\r\n                    if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\r\n                        node.question.setHistoricalValue(false);\r\n                    }\r\n\r\n                } else if (node.question && node.question.extras && node.question.renderingType === 'group' || forcegroup) {\r\n                    const groupObs = _.find(payload, (o: any) => {\r\n                        return o.concept.uuid === node.question.extras.questionOptions.concept && o.groupMembers;\r\n                    });\r\n                    if (groupObs) {\r\n                        if (node.node) {\r\n                            node.node['initialValue'] = groupObs;\r\n                        }\r\n\r\n                        this.setValues(node.groupMembers, groupObs.groupMembers);\r\n                    }\r\n                    if (forcegroup && node.payload) {\r\n                        this.setValues(node.groupMembers, node.payload.groupMembers);\r\n                    }\r\n\r\n\r\n                } else if (node instanceof GroupNode && node.question.extras.type === 'complex-obs') {\r\n                    this.setComplexObsValue(node, payload);\r\n                } else if (node.question && node.question.extras && node.question.renderingType === 'repeating' && !forcegroup) {\r\n                    this.setRepeatingGroupValues(node, payload);\r\n                    node.node.control.updateValueAndValidity();\r\n                } else {\r\n                    throw new Error('not implemented');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setObsValue(node, payload) {\r\n        if (node.question && node.question.extras &&\r\n            (node.question.extras.type === 'obs' ||\r\n            (node.question.extras.type === 'complex-obs-child' &&\r\n            node.question.extras.questionOptions.obsField === 'value')) &&\r\n            node.question.extras.questionOptions.rendering !== 'multiCheckbox' ||\r\n            node.question.extras.questionOptions.rendering !== 'checkbox' ||\r\n            node.question.extras.questionOptions.rendering !== 'multi-select') {\r\n            const obs = _.find(payload, (o: any) => {\r\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\r\n            });\r\n            if (obs) {\r\n                if (obs.value instanceof Object) {\r\n                    node.control.setValue(obs.value.uuid);\r\n                    node.control.updateValueAndValidity();\r\n                } else {\r\n                    node.control.setValue(obs.value);\r\n                    node.control.updateValueAndValidity();\r\n                }\r\n                node['initialValue'] = { obsUuid: obs.uuid, value: obs.value };\r\n            }\r\n        } else {\r\n            const multiObs = _.filter(payload, (o: any) => {\r\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\r\n            });\r\n            if (multiObs && multiObs.length > 0) {\r\n                node.control.setValue(this.getMultiselectValues(multiObs));\r\n                node.control.updateValueAndValidity();\r\n                node['initialValue'] = multiObs;\r\n            }\r\n        }\r\n    }\r\n\r\n    setComplexObsValue(node, payload) {\r\n        let valueField: any;\r\n        let dateField: any;\r\n\r\n        // tslint:disable-next-line:forin\r\n        for (const o in node.children) {\r\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\r\n                valueField = node.children[o];\r\n            }\r\n\r\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\r\n                dateField = node.children[o];\r\n            }\r\n        }\r\n        // set the usual obs value\r\n        this.setObsValue(valueField, payload);\r\n\r\n        // set the obs date\r\n        const obs = _.find(payload, (o: any) => {\r\n            return o.concept.uuid === node.question.extras.questionOptions.concept;\r\n        });\r\n\r\n        if (obs) {\r\n            dateField['initialValue'] = { obsUuid: obs.uuid, value: obs.obsDatetime };\r\n            (dateField as LeafNode).control.setValue(obs.obsDatetime);\r\n            (dateField as LeafNode).control.updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    getMultiselectValues(multiObs) {\r\n        const values = [];\r\n        for (const m of multiObs) {\r\n            values.push(m.value.uuid);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    setRepeatingGroupValues(node, payload) {\r\n        const groupRepeatingObs = _.filter(payload, (o: any) => {\r\n            const found = o.concept.uuid === node.question.extras.questionOptions.concept;\r\n            let intersect = false;\r\n            if (found && o.groupMembers) {\r\n                const obs = o.groupMembers.map((a) => {\r\n                    return a.concept.uuid;\r\n                });\r\n\r\n                const schemaQuestions = node.question.questions.map((a) => {\r\n                    return a.extras.questionOptions.concept;\r\n                });\r\n\r\n                intersect = (_.intersection(obs, schemaQuestions).length > 0);\r\n            }\r\n            return found && intersect;\r\n        });\r\n        if (groupRepeatingObs.length > 0) {\r\n            node.node['initialValue'] = groupRepeatingObs;\r\n            for (let i = 0; i < groupRepeatingObs.length; i++) {\r\n                node.node.createChildNode();\r\n            }\r\n        }\r\n        const groups = [];\r\n        let index = 0;\r\n        for (const child of node.node.children) {\r\n            const children = Object.keys(child.children).map(function (key) { return child.children[key]; });\r\n            const groupPayload = groupRepeatingObs[index];\r\n            groups.push({ question: node.question, groupMembers: children, payload: groupPayload });\r\n            index++;\r\n        }\r\n        this.setValues(groups, groupRepeatingObs, true);\r\n    }\r\n\r\n    getQuestionNodes(pages) {\r\n        const merged = [];\r\n        const arrays = [];\r\n        for (const page of pages) {\r\n            for (const section of page.page) {\r\n                arrays.push(section.section);\r\n            }\r\n        }\r\n        return merged.concat.apply([], arrays);\r\n    }\r\n\r\n    repeatingGroup(nodes) {\r\n        const toReturn = [];\r\n        for (const node of nodes) {\r\n            toReturn.push({ question: node.question, groupMembers: this.traverse(node) });\r\n        }\r\n        return toReturn;\r\n    }\r\n\r\n    processGroup(obs, obsPayload) {\r\n        if (obs.question && obs.question.extras && obs.question.extras.questionOptions.rendering === 'group') {\r\n            const members = _.filter(this.getObsPayload(obs.groupMembers), (o: any) => {\r\n                return o.value !== '';\r\n            });\r\n\r\n            const mappedMembers = members.map((a) => {\r\n                return a.voided;\r\n            });\r\n            if (members.length > 0 && mappedMembers.every(Boolean)) {\r\n                obsPayload.push({\r\n                    uuid: obs.node.initialValue.uuid,\r\n                    voided: true\r\n                });\r\n            } else if (members.length > 0) {\r\n                if (obs.node.initialValue) {\r\n                    obsPayload.push({\r\n                        uuid: obs.node.initialValue.uuid,\r\n                        groupMembers: members\r\n                    });\r\n                } else {\r\n                    obsPayload.push({\r\n                        concept: obs.question.extras.questionOptions.concept,\r\n                        groupMembers: members\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    mapInitialGroup(group) {\r\n        let current = {};\r\n        for (const member of group.groupMembers) {\r\n            let value: any = '';\r\n            if (member.value instanceof Object) {\r\n                value = member.value.uuid;\r\n            } else if (member.value) {\r\n                value = member.value;\r\n            } else if (member.groupMembers && member.groupMembers.length > 0) {\r\n                current = this.mapInitialGroup(group);\r\n            }\r\n            current[member.concept.uuid + ':' + value] = value;\r\n        }\r\n        return current;\r\n    }\r\n\r\n    mapModelGroup(node, value) {\r\n        const current = {};\r\n        for (const key in value) {\r\n            if (value.hasOwnProperty(key)) {\r\n                const groupQuestion: any = _.find(node.question.questions, { key: key });\r\n                const modelValue = value[key];\r\n                if (modelValue instanceof Object) {\r\n                } else if (modelValue !== '') {\r\n                    current[groupQuestion.extras.questionOptions.concept + ':'\r\n                        + modelValue] = modelValue;\r\n                }\r\n            }\r\n\r\n        }\r\n        return current;\r\n    }\r\n\r\n    processRepeatingGroups(node, obsPayload) {\r\n        const initialValues = [];\r\n        if (node.node.initialValue) {\r\n            for (const group of node.node.initialValue) {\r\n                initialValues.push({ uuid: group.uuid, value: this.mapInitialGroup(group) });\r\n            }\r\n        }\r\n        const repeatingModel = [];\r\n        for (const value of node.node.control.value) {\r\n            repeatingModel.push({ value: this.mapModelGroup(node, value) });\r\n        }\r\n        const deleted = this.leftOuterJoinArrays(initialValues, repeatingModel);\r\n        const newObs = this.leftOuterJoinArrays(repeatingModel, initialValues);\r\n        const groupConcept = node.question.extras.questionOptions.concept;\r\n        let newObsPayload = [];\r\n        if (deleted.length > 0) {\r\n            const deletedObs = this.createGroupDeletedObs(deleted);\r\n            for (const d of deletedObs) {\r\n                obsPayload.push(d);\r\n            }\r\n            if (newObs.length > 0) {\r\n                newObsPayload = this.createGroupNewObs(newObs, groupConcept);\r\n            }\r\n        } else {\r\n            newObsPayload = this.createGroupNewObs(newObs, groupConcept);\r\n        }\r\n\r\n        if (newObsPayload.length > 0) {\r\n            for (const p of newObsPayload) {\r\n                obsPayload.push(p);\r\n            }\r\n        }\r\n    }\r\n\r\n    leftOuterJoinArrays(first, second) {\r\n        const unique = first.filter(function (obj) {\r\n            return !second.some(function (obj2) {\r\n                return _.isEqual(obj.value, obj2.value);\r\n            });\r\n        });\r\n        return unique;\r\n    }\r\n\r\n    createGroupNewObs(payload, groupConcept) {\r\n        const newPayload = [];\r\n        for (const obs of payload) {\r\n            const groupPayload = [];\r\n            /* tslint:disable */\r\n            for (let key in obs.value) {\r\n                let concept = key.split(':')[0];\r\n                let value = key.split(':')[1];\r\n                groupPayload.push({ concept: concept, value: value });\r\n            }\r\n            newPayload.push({ concept: groupConcept, groupMembers: groupPayload })\r\n            /* tslint:enable */\r\n        }\r\n        return newPayload;\r\n    }\r\n\r\n    createGroupDeletedObs(payload) {\r\n        const deletedObs = [];\r\n        for (const d of payload) {\r\n            deletedObs.push({ uuid: d.uuid, voided: true });\r\n        }\r\n        return deletedObs;\r\n    }\r\n\r\n    getExactTime(datetime: string) {\r\n        return datetime.substring(0, 19).replace('T', ' ');\r\n    }\r\n\r\n    processObs(obs, obsPayload) {\r\n        if (obs.control && obs.question.extras) {\r\n            const obsValue = {\r\n                concept: obs.question.extras.questionOptions.concept,\r\n                value: (obs.question.extras.questionOptions.rendering === 'date' && !this.isEmpty(obs.control.value)) ?\r\n                    this.getExactTime(obs.control.value) : obs.control.value\r\n            };\r\n\r\n            if (obs.question.extras.questionOptions.rendering === 'multiCheckbox' ||\r\n            obs.question.extras.questionOptions.rendering === 'checkbox' ||\r\n            obs.question.extras.questionOptions.rendering === 'multi-select') {\r\n                const multis = this.processMultiSelect(obs.question.extras.questionOptions.concept, obs.control.value);\r\n                if (obs.initialValue) {\r\n                    const mappedInitial = obs.initialValue.map((a) => {\r\n                        return { uuid: a.uuid, value: { concept: a.concept.uuid, value: a.value.uuid } };\r\n                    });\r\n                    const mappedCurrent = multis.map((a) => {\r\n                        return { value: a };\r\n                    });\r\n                    const deletedObs = this.leftOuterJoinArrays(mappedInitial, mappedCurrent);\r\n                    const newObs = this.leftOuterJoinArrays(mappedCurrent, mappedInitial);\r\n                    this.processDeletedMultiSelectObs(deletedObs, obsPayload);\r\n                    this.processNewMultiSelectObs(newObs, obsPayload);\r\n                } else {\r\n                    this.processNewMultiSelectObs(multis, obsPayload);\r\n                }\r\n            } else {\r\n                if (obs.initialValue && obs.initialValue.value && obsValue) {\r\n                    this.updateOrVoidObs(obsValue, obs.initialValue, obsPayload);\r\n                } else if (obsValue.value !== '' && obsValue.value !== null) {\r\n                    obsPayload.push(obsValue);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    processComplexObs(node, obsPayload) {\r\n        let valueField: any;\r\n        let dateField: any;\r\n\r\n        // tslint:disable-next-line:forin\r\n        for (const o in node.children) {\r\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\r\n                valueField = node.children[o];\r\n            }\r\n\r\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\r\n                dateField = node.children[o];\r\n            }\r\n        }\r\n\r\n        if (valueField) {\r\n            // process obs as usual\r\n            this.processObs(valueField, obsPayload);\r\n\r\n            // obtain the last inserted obs and set the obsDatetime\r\n            const createdPayload = obsPayload.length > 0 ? obsPayload[obsPayload.length - 1] : undefined;\r\n            if (createdPayload &&\r\n                ((createdPayload.concept && createdPayload.concept === node.question.extras.questionOptions.concept) ||\r\n                    (valueField.initialValue && createdPayload.uuid === valueField.initialValue.obsUuid))) {\r\n                if (dateField.initialValue && dateField.control.value !== dateField.initialValue.value) {\r\n                    createdPayload.obsDatetime = dateField.control.value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    processDeletedMultiSelectObs(values, obsPayload) {\r\n        for (const value of values) {\r\n            obsPayload.push({ uuid: value.uuid, voided: true });\r\n        }\r\n    }\r\n\r\n    processNewMultiSelectObs(values, obsPayload) {\r\n        for (const multi of values) {\r\n            if (multi.value instanceof Object) {\r\n                obsPayload.push(multi.value);\r\n            } else {\r\n                obsPayload.push(multi);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateOrVoidObs(obsValue, initialValue, obsPayload) {\r\n        if (this.isEmpty(obsValue.value) && initialValue.value) {\r\n            obsPayload.push({ uuid: initialValue.obsUuid, voided: true });\r\n        } else if (!this.isEmpty(obsValue.value) && initialValue.value) {\r\n            obsPayload.push({ uuid: initialValue.obsUuid, value: obsValue.value });\r\n        }\r\n    }\r\n\r\n    isEmpty(value): boolean {\r\n        if (value === '' ||\r\n            value === null ||\r\n            value === undefined\r\n            // || value === [] ||\r\n            // value === {}\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    traverse(o, type?) {\r\n        const questions = [];\r\n        if (o.children) {\r\n            if (o.children instanceof Array) {\r\n                const returned = this.repeatingGroup(o.children);\r\n                return returned;\r\n            }\r\n            if (o.children instanceof Object) {\r\n                for (const key in o.children) {\r\n                    if (o.children.hasOwnProperty(key)) {\r\n                        switch (o.children[key].question.renderingType) {\r\n                            case 'page':\r\n                                const page = this.traverse(o.children[key]);\r\n                                questions.push({ page: page, label: o.children[key].question.label });\r\n                                break;\r\n                            case 'section':\r\n                                const section = this.traverse(o.children[key]);\r\n                                questions.push({ section: section, node: o.children[key], label: o.children[key].question.label });\r\n                                break;\r\n                            case 'group':\r\n                                const qs = this.traverse(o.children[key]);\r\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: qs });\r\n                                break;\r\n                            case 'repeating':\r\n                                const rep = this.repeatingGroup(o.children[key].children);\r\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: rep });\r\n                                break;\r\n                            default:\r\n                                questions.push(o.children[key]);\r\n                                break;\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        return questions;\r\n    }\r\n\r\n    processMultiSelect(concept, values) {\r\n        const multiSelectObs = [];\r\n        if (values && values !== null) {\r\n            for (const value of values) {\r\n                const obs = {\r\n                    concept: concept,\r\n                    value: value\r\n                };\r\n                multiSelectObs.push(obs);\r\n            }\r\n        }\r\n        return multiSelectObs;\r\n    }\r\n\r\n\r\n    isObs(node) {\r\n        return (node.question.extras.type === 'obs' ||\r\n            node.question.extras.type === 'obsGroup' ||\r\n            node.question.extras.type === 'complex-obs');\r\n    }\r\n\r\n    getObsPayload(nodes) {\r\n        const obsPayload = [];\r\n        for (const node of nodes) {\r\n            if (this.isObs(node)) {\r\n                if (node.groupMembers, node.question.extras.questionOptions.rendering === 'group') {\r\n\r\n                    this.processGroup(node, obsPayload);\r\n\r\n                } else if (node.groupMembers, node.question.extras.questionOptions.rendering === 'repeating') {\r\n                    this.processRepeatingGroups(node, obsPayload);\r\n                } else if (node instanceof GroupNode && (node as GroupNode).question.extras.type === 'complex-obs') {\r\n                    this.processComplexObs(node, obsPayload);\r\n                } else {\r\n                    this.processObs(node, obsPayload);\r\n                }\r\n            }\r\n        }\r\n        return obsPayload;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Form } from '../form-factory/form';\r\nimport { ValueAdapter } from './value.adapter';\r\nimport * as _ from 'lodash';\r\n@Injectable()\r\nexport class OrderValueAdapter implements ValueAdapter {\r\n    formOrderNodes = [];\r\n    private provider = '';\r\n\r\n    generateFormPayload(form: Form) {\r\n        this.formOrderNodes = [];\r\n        this._setOrderProvider(form);\r\n        this._findTestOrderQuestionNodes(form.rootNode);\r\n        return this._createOrdersPayload(this.formOrderNodes, form);\r\n    }\r\n\r\n    populateForm(form: Form, payload) {\r\n        form.existingOrders = payload;\r\n        this.formOrderNodes = [];\r\n        this._findTestOrderQuestionNodes(form.rootNode);\r\n        const existingOrders = this._getExistingOrders(form);\r\n        this._setOrderValues(this.formOrderNodes, existingOrders);\r\n    }\r\n\r\n    private _setOrderProvider(form: Form) {\r\n        if (form.valueProcessingInfo.providerUuid) {\r\n            this.provider = form.valueProcessingInfo.providerUuid;\r\n        }\r\n    }\r\n\r\n    private _createOrdersPayload(orderNodes, form: Form) {\r\n        const payload = [];\r\n        const selectedOrders = [];\r\n        let deletedOrders = [];\r\n        const existingOrders = this._getExistingOrders(form);\r\n        for (const orderNode of orderNodes) {\r\n            const orderNodeValues = orderNode.control.value;\r\n            const orders = [];\r\n            if (existingOrders) {\r\n                existingOrders.map(function (obj) {\r\n                    orders[obj.concept] = obj.concept;\r\n                });\r\n            }\r\n\r\n\r\n            for (const order in orderNodeValues) {\r\n                if (orderNodeValues.hasOwnProperty(order)) {\r\n\r\n                    const orderValue = orderNodeValues[order][orderNode.question.key];\r\n\r\n                    const payloadOrder = this._createPayloadOrder(orderValue, orderNode.question.extras);\r\n\r\n                    if (orders[orderValue] !== orderValue && payloadOrder.concept !== '') {\r\n\r\n                        payload.push(payloadOrder);\r\n                    }\r\n                    selectedOrders[orderValue] = orderValue;\r\n                    if (payloadOrder.orderNumber === '') {\r\n                        delete payloadOrder.orderNumber;\r\n                    }\r\n                    if (payloadOrder.uuid === '') {\r\n                        delete payloadOrder.uuid;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        deletedOrders = this._getDeletedOrders(selectedOrders, existingOrders);\r\n        return this._addDeletedOrdersToPayload(deletedOrders, payload);\r\n\r\n    }\r\n\r\n    private _getExistingOrders(form: Form) {\r\n        if (form.existingOrders && form.existingOrders.orders) {\r\n            let existingOrders = form.existingOrders.orders.map((o) => {\r\n                return {\r\n                    concept: o.concept.uuid,\r\n                    orderNumber: o.orderNumber,\r\n                    orderUuid: o.uuid,\r\n                    voided: o.voided,\r\n                    dateVoided: o.auditInfo.dateVoided\r\n                };\r\n            });\r\n\r\n            return existingOrders = _.filter(existingOrders, (order: any) => {\r\n                if (order.voided === true || order.dateVoided) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            });\r\n        } else {\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    private _setOrderValues(node, existingOrders) {\r\n        this._findTestOrderQuestionNodes(node);\r\n\r\n        const orderNodes = this.formOrderNodes;\r\n        for (const orderNode of orderNodes) {\r\n            this._setOrderNodeValues(orderNode, existingOrders);\r\n        }\r\n    }\r\n\r\n    private _addDeletedOrdersToPayload(deletedOrders, payload): any {\r\n        for (const order in deletedOrders) {\r\n            if (deletedOrders.hasOwnProperty(order)) {\r\n                payload.push({ uuid: deletedOrders[order], voided: true });\r\n            }\r\n        }\r\n        return payload;\r\n    }\r\n\r\n    private _createPayloadOrder(orderConcept, quesitonExtras): any {\r\n        const order = {\r\n            concept: '',\r\n            type: '',\r\n            orderer: '',\r\n            careSetting: ''\r\n        };\r\n        order.concept = orderConcept;\r\n        order.type = quesitonExtras.questionOptions.orderType;\r\n        order.orderer = this.provider;\r\n        order.careSetting = quesitonExtras.questionOptions.orderSettingUuid;\r\n\r\n        // delete orderer if provider not provided\r\n        if (order.orderer === '') {\r\n            delete order.orderer;\r\n        }\r\n\r\n        return order;\r\n    }\r\n\r\n    private _getDeletedOrders(selectedOrders, existingOrders): any {\r\n        const deleteOrders = [];\r\n        if (selectedOrders) {\r\n            for (const order in existingOrders) {\r\n                if (existingOrders.hasOwnProperty(order)) {\r\n                    const existingOrderConcept = existingOrders[order].concept;\r\n                    const selectedOrder = selectedOrders[existingOrderConcept];\r\n                    if (selectedOrder !== existingOrderConcept) {\r\n                        deleteOrders.push(existingOrders[order].orderUuid);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // console.log('Deleted Orders ', deleteOrders);\r\n        return deleteOrders;\r\n    }\r\n\r\n    private _setOrderNodeValues(node, orders) {\r\n        let index = 0;\r\n        node['initialValue'] = orders;\r\n        for (const order of orders) {\r\n            node.createChildNode();\r\n            const value = {};\r\n            value[node.question.key] = order.concept;\r\n            const childNode = node.children[index];\r\n            childNode.control.setValue(value);\r\n            childNode['initialValue'] = value;\r\n            childNode['orderNumber'] = order.orderNumber;\r\n            // console.log('Set Value', node.children[index].control.value, node, childNode);\r\n            index++;\r\n        }\r\n    }\r\n\r\n    private _findTestOrderQuestionNodes(formNode) {\r\n\r\n        if (formNode.children) {\r\n            if (formNode.children instanceof Object) {\r\n                for (const key in formNode.children) {\r\n                    if (formNode.children.hasOwnProperty(key)) {\r\n                        switch (formNode.children[key].question.renderingType) {\r\n                            case 'page':\r\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\r\n                                break;\r\n                            case 'section':\r\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\r\n                                break;\r\n                            case 'group':\r\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\r\n\r\n                                break;\r\n                            case 'repeating':\r\n                                if (formNode.children) {\r\n                                    // tslint:disable-next-line:forin\r\n                                    for (const node in formNode.children) {\r\n                                        const question = formNode.children[node].question;\r\n                                        if (question.extras && question.extras.type === 'testOrder') {\r\n                                            this.formOrderNodes.push(formNode.children[node]);\r\n                                        }\r\n                                    }\r\n\r\n                                }\r\n                                break;\r\n                            default:\r\n                                break;\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\r\nimport { Form } from '../form-factory/form';\r\n\r\nimport { ValueAdapter } from './value.adapter';\r\nimport { ObsValueAdapter } from './obs.adapter';\r\nimport { OrderValueAdapter } from './order.adapter';\r\n\r\nimport * as moment_ from 'moment';\r\n\r\nconst moment = moment_;\r\n\r\n@Injectable()\r\nexport class EncounterAdapter implements ValueAdapter {\r\n\r\n    constructor(public ordersAdapter: OrderValueAdapter, public obsAdapter: ObsValueAdapter) { }\r\n\r\n    populateForm(form: Form, payload) {\r\n        this.populateNode(form.rootNode, payload);\r\n\r\n        if (Array.isArray(payload.orders)) {\r\n            this.ordersAdapter.populateForm(form, payload);\r\n        }\r\n        if (Array.isArray(payload.obs)) {\r\n            this.obsAdapter.populateForm(form, payload.obs);\r\n        }\r\n    }\r\n\r\n    populateNode(rootNode: NodeBase, payload) {\r\n\r\n        if (payload === undefined || payload === null) {\r\n            throw new Error('Expected payload');\r\n        }\r\n\r\n        const nodes = this.getEncounterNodes(rootNode);\r\n\r\n        nodes.forEach(node => {\r\n            switch (node.question.extras.type) {\r\n                case 'encounterDatetime':\r\n                    if (payload['encounterDatetime']) {\r\n                        // console.log('date', payload['encounterDatetime']);\r\n                        node.control.setValue(moment(payload['encounterDatetime']).toDate());\r\n                        node.initialValue = moment(payload['encounterDatetime']).toDate();\r\n                    }\r\n                    break;\r\n                case 'encounterProvider':\r\n                    if (Array.isArray(payload['encounterProviders']) && payload['encounterProviders'].length > 0) {\r\n                        const firstProvider: any = payload['encounterProviders'][0].provider;\r\n                        if (firstProvider && firstProvider.uuid) {\r\n                            //Very weird work around for an issue with setting the value\r\n                            node.control.setValue(firstProvider.uuid);\r\n                            setTimeout(()=>{\r\n                                node.control.setValue(firstProvider.uuid);\r\n                            });\r\n                            node.initialValue = firstProvider.uuid;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'encounterLocation':\r\n                    if (payload['location'] && payload['location'].uuid) {\r\n                        node.control.setValue(payload['location'].uuid);\r\n                        node.initialValue = payload['location'].uuid;\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    generateFormPayload(form: Form) {\r\n        const payload = this.generateNodePayload(form.rootNode);\r\n\r\n        this.setNonFilledPayloadMembers(form, payload);\r\n\r\n        payload['obs'] = this.obsAdapter.generateFormPayload(form) || [];\r\n\r\n        payload['orders'] = this.ordersAdapter.generateFormPayload(form) || [];\r\n\r\n        return payload;\r\n    }\r\n\r\n    generateNodePayload(rootNode: NodeBase) {\r\n        const nodes = this.getEncounterNodes(rootNode);\r\n        const payload = {};\r\n\r\n        nodes.forEach(node => {\r\n            if (node.control.value !== null &&\r\n                node.control.value !== undefined &&\r\n                node.control.value !== '') {\r\n                switch (node.question.extras.type) {\r\n                    case 'encounterDatetime':\r\n                        const dateValue = moment(node.control.value)\r\n                            .utcOffset(rootNode.form.valueProcessingInfo.utcOffset || '+0300');\r\n                        payload['encounterDatetime'] = dateValue.format('YYYY-MM-DD HH:mm:ss');\r\n                        break;\r\n                    case 'encounterProvider':\r\n                        if (node.control.value && node.control.value !== '') {\r\n                            const providers = [];\r\n                            providers.push({\r\n                                provider: node.control.value,\r\n                                encounterRole: 'a0b03050-c99b-11e0-9572-0800200c9a66' // unknown provider role in the encounter as default\r\n                            });\r\n                            payload['encounterProviders'] = providers;\r\n                        }\r\n                        break;\r\n                    case 'encounterLocation':\r\n                        payload['location'] = node.control.value;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n\r\n        return payload;\r\n    }\r\n\r\n    getEncounterNodes(rootNode: NodeBase): Array<NodeBase> {\r\n        const results: Array<NodeBase> = [];\r\n        this._getEncounterNodes(rootNode, results);\r\n        return results;\r\n    }\r\n\r\n    setNonFilledPayloadMembers(form: Form, payload) {\r\n        if (form.valueProcessingInfo.patientUuid) {\r\n            this.setPayloadPatientUuid(payload, form.valueProcessingInfo.patientUuid);\r\n        }\r\n\r\n        if (form.valueProcessingInfo.visitUuid) {\r\n            this.setPayloadVisitUuid(payload, form.valueProcessingInfo.visitUuid);\r\n        }\r\n\r\n        if (form.valueProcessingInfo.encounterTypeUuid) {\r\n            this.setPayloadEncounterTypeUuid(payload, form.valueProcessingInfo.encounterTypeUuid);\r\n        }\r\n\r\n        if (form.valueProcessingInfo.formUuid) {\r\n            this.setPayloadFormUuid(payload, form.valueProcessingInfo.formUuid);\r\n        }\r\n\r\n        if (form.valueProcessingInfo.encounterUuid) {\r\n            this.setPayloadEncounterUuid(payload, form.valueProcessingInfo.encounterUuid);\r\n        }\r\n    }\r\n\r\n    setPayloadPatientUuid(payload, patientUuid: string) {\r\n        payload['patient'] = patientUuid;\r\n    }\r\n\r\n    setPayloadVisitUuid(payload, visitUuid: string) {\r\n        payload['visit'] = visitUuid;\r\n    }\r\n\r\n    setPayloadEncounterTypeUuid(payload, encounterTypeUuid: string) {\r\n        payload['encounterType'] = encounterTypeUuid;\r\n    }\r\n\r\n    setPayloadFormUuid(payload, formUuid: string) {\r\n        payload['form'] = formUuid;\r\n    }\r\n\r\n    setPayloadEncounterUuid(payload, encounterUuid: string) {\r\n        payload['uuid'] = encounterUuid;\r\n    }\r\n\r\n    private _getEncounterNodes(rootNode: NodeBase, array: Array<NodeBase>) {\r\n        if (this._isEncounterNode(rootNode)) {\r\n            array.push(rootNode);\r\n        }\r\n\r\n        if (rootNode instanceof GroupNode) {\r\n            const node = rootNode as GroupNode;\r\n            // tslint:disable-next-line:forin\r\n            for (const o in node.children) {\r\n                if (node.children[o] instanceof NodeBase) {\r\n                    this._getEncounterNodes(node.children[o], array);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (rootNode instanceof ArrayNode) {\r\n            const node = rootNode as ArrayNode;\r\n            node.children.forEach(child => {\r\n                this._getEncounterNodes(child, array);\r\n            });\r\n        }\r\n    }\r\n\r\n    private _isEncounterNode(node: NodeBase): boolean {\r\n        if (node.question.extras &&\r\n            (node.question.extras.type === 'encounterDatetime' ||\r\n                node.question.extras.type === 'encounterProvider' ||\r\n                node.question.extras.type === 'encounterLocation')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\r\nimport { Form } from '../form-factory/form';\r\nimport { ValueAdapter } from './value.adapter';\r\n\r\n@Injectable()\r\nexport class PersonAttribuAdapter implements ValueAdapter {\r\n    constructor() { }\r\n\r\n    generateFormPayload(form: Form) {\r\n        return this.generateNodePayload(form.rootNode);\r\n    }\r\n\r\n    generateNodePayload(rootNode: NodeBase) {\r\n        const nodes = this.getPersonAttributeNodes(rootNode);\r\n        const payload = [];\r\n        nodes.forEach(node => {\r\n            if (node.control.value !== null &&\r\n                node.control.value !== undefined &&\r\n                node.control.value !== '' &&\r\n                node.initialValue !== node.control.value) {\r\n\r\n                if (node.question.extras.questionOptions.isSimpleValue === true) {\r\n                    payload.push({\r\n                        attributeType: node.question.extras.questionOptions.attributeType,\r\n                        value: node.control.value\r\n                    });\r\n                } else {\r\n                    payload.push({\r\n                        attributeType: node.question.extras.questionOptions.attributeType,\r\n                        hydratedObject: node.control.value\r\n                    });\r\n                }\r\n\r\n            }\r\n        });\r\n        return payload;\r\n    }\r\n\r\n    populateForm(form: Form, payload) {\r\n        this.populateNode(form.rootNode, payload);\r\n    }\r\n\r\n    populateNode(rootNode: NodeBase, payload) {\r\n        if (!Array.isArray(payload)) {\r\n            throw new Error('Expected an array of attributes');\r\n        }\r\n\r\n        const nodes = this.getPersonAttributeNodes(rootNode);\r\n\r\n        nodes.forEach(node => {\r\n            payload.forEach(element => {\r\n                if (element.attributeType.uuid\r\n                    === node.question.extras.questionOptions.attributeType) {\r\n                    if (element.value.uuid) {\r\n                        node.control.setValue(element.value.uuid);\r\n                        node.initialValue = element.value.uuid;\r\n                    } else {\r\n                        node.control.setValue(element.value);\r\n                        node.initialValue = element.value;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getPersonAttributeNodes(rootNode: NodeBase): Array<NodeBase> {\r\n        const results: Array<NodeBase> = [];\r\n        this._getPersonAttributesNodes(rootNode, results);\r\n        return results;\r\n    }\r\n\r\n    private _getPersonAttributesNodes(rootNode: NodeBase, array: Array<NodeBase>) {\r\n        if (rootNode.question.extras &&\r\n            rootNode.question.extras.type === 'personAttribute') {\r\n            array.push(rootNode);\r\n        }\r\n\r\n        if (rootNode instanceof GroupNode) {\r\n            const node = rootNode as GroupNode;\r\n            // tslint:disable-next-line:forin\r\n            for (const o in node.children) {\r\n                if (node.children[o] instanceof NodeBase) {\r\n                    this._getPersonAttributesNodes(node.children[o], array);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (rootNode instanceof ArrayNode) {\r\n            const node = rootNode as ArrayNode;\r\n            node.children.forEach(child => {\r\n                this._getPersonAttributesNodes(child, array);\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, Input, forwardRef, ViewChild, Output, EventEmitter, Renderer2 } from '@angular/core';\r\nimport { SelectComponent } from '../../components/select/select.component';\r\nimport {\r\n    ControlValueAccessor,\r\n    NG_VALUE_ACCESSOR\r\n} from '@angular/forms';\r\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\r\nimport * as _ from 'lodash';\r\n@Component({\r\n    selector: 'remote-select',\r\n    template: `<div>\r\n    <ng-select [id]=\"componentID\" [noFilter]=\"0\" (selected)=\"selected($event)\" (deselected)=\"removed($event)\" [options]=\"items\" [allowClear]=\"true\"\r\n        [placeholder]=\"placeholder\" [notFoundMsg]=\"notFoundMsg\" (typed)=\"typed($event)\" tabindex=\"0\">\r\n    </ng-select>\r\n    <div *ngIf=\"loading\">\r\n        resolving....\r\n    </div>\r\n</div>\r\n`,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => RemoteSelectComponent),\r\n            multi: true,\r\n        }]\r\n})\r\nexport class RemoteSelectComponent implements OnInit, ControlValueAccessor {\r\n    // @Input() dataSource: DataSource;\r\n    @Input() placeholder = 'Search...';\r\n    @Input() componentID: string;\r\n    items = [];\r\n    value = [];\r\n    loading = false;\r\n    searchText = '';\r\n    notFoundMsg = 'match no found';\r\n    @Output() done: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    characters = [];\r\n    @ViewChild(SelectComponent) private selectC: SelectComponent;\r\n\r\n\r\n    private _dataSource: DataSource;\r\n    @Input()\r\n    public get dataSource(): DataSource {\r\n        return this._dataSource;\r\n    }\r\n    public set dataSource(v: DataSource) {\r\n        this._dataSource = v;\r\n        if (this._dataSource && this._dataSource.dataFromSourceChanged) {\r\n            this.subscribeToDataSourceDataChanges();\r\n        }\r\n    }\r\n\r\n\r\n    constructor(private renderer: Renderer2) { }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    subscribeToDataSourceDataChanges() {\r\n        this._dataSource.dataFromSourceChanged.subscribe((results) => {\r\n            if (results.length > 0) {\r\n                this.items = results;\r\n                this.notFoundMsg = '';\r\n                // console.log('updating items', results, this.selectC.value);\r\n                this.restoreSelectedValue(this.selectC.value, results);\r\n            } else {\r\n                this.notFoundMsg = 'Not found';\r\n                this.items = [];\r\n            }\r\n        });\r\n    }\r\n\r\n    public typed(value: any): void {\r\n        this.search(value);\r\n    }\r\n    search(value: string) {\r\n        if (this.dataSource) {\r\n            this.searchText = value;\r\n            this.notFoundMsg = 'Loading.........';\r\n            this.dataSource.searchOptions(value)\r\n                .subscribe((result) => {\r\n                    if (result.length > 0) {\r\n                        const existing = _.map(this.value, _.clone);\r\n                        const concat = existing.concat(result);\r\n                        this.items = _.uniqBy(concat, 'value');\r\n                    }\r\n                    this.notFoundMsg = '';\r\n                }, (error) => {\r\n                    this.notFoundMsg = 'Errored';\r\n                });\r\n        }\r\n    }\r\n\r\n    restoreSelectedValue(value, results) {\r\n        let found = false;\r\n        _.each(results, (item) => {\r\n            if (item.value === value) {\r\n                setTimeout(() => {\r\n                    this.selectC.select(value);\r\n                    this.selectC.value = value;\r\n                });\r\n                found = true;\r\n            }\r\n        });\r\n        if (!found) {\r\n            // console.log('not found after loading items', value, results);\r\n            setTimeout(() => {\r\n                this.selectC.select('');\r\n                this.selectC.value = '';\r\n            });\r\n        }\r\n    }\r\n\r\n    canSearch(searchText: string) {\r\n        return (searchText.length - this.searchText.length >= 2 ||\r\n            (searchText.length - this.searchText.length <= 2 && searchText !== '')) && this.loading === false;\r\n    }\r\n\r\n    // this is the initial value set to the component\r\n    public writeValue(value: any) {\r\n        if (value && value !== '') {\r\n            if (this.dataSource) {\r\n                this.loading = true;\r\n                this.dataSource.resolveSelectedValue(value).subscribe((result: any) => {\r\n                    this.items = [result];\r\n                    setTimeout(() => {\r\n                        this.selectC.select(result.value);\r\n                        this.selectC.value = result.value;\r\n                    });\r\n                    this.loading = false;\r\n                }, (error) => {\r\n                    this.loading = false;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    // registers 'fn' that will be fired when changes are made\r\n    // this is how we emit the changes back to the form\r\n    public registerOnChange(fn: any) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    // not used, used for touch input\r\n    public registerOnTouched() { }\r\n    // change events from the textarea\r\n    onChange(event) {\r\n        this.propagateChange(event.id);\r\n        // .....\r\n        // update the form\r\n        // this.propagateChange(this.data);\r\n    }\r\n    removed(event) {\r\n        console.log('Removed');\r\n        this.propagateChange('');\r\n    }\r\n    selected(event) {\r\n        this.propagateChange(event.value);\r\n    }\r\n\r\n    // the method set in registerOnChange, it is just\r\n    // a placeholder for a method that takes one parameter,\r\n    // we use it to emit changes back to the form\r\n    private propagateChange = (change: any) => { };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\n// import { SelectModule } from 'ng2-select/ng2-select';\r\nimport { SelectModule } from '../../components/select/select.module';\r\nimport { RemoteSelectComponent } from './remote-select.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, SelectModule, FormsModule],\r\n    exports: [RemoteSelectComponent],\r\n    declarations: [RemoteSelectComponent],\r\n    providers: [],\r\n})\r\nexport class RemoteSelectModule { }\r\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\r\n\r\nimport { LeafNode } from '../../form-entry/form-factory/form-node';\r\nimport * as moment_ from 'moment';\r\n\r\nconst moment = moment_;\r\n\r\n@Component({\r\n  selector: 'appointments-overview',\r\n  template: `<div *ngIf=\"showAppointments\" class=\"appointments\">\r\n  <p *ngIf=\"loadingAppointments\">\r\n    <span *ngIf=\"!appointmentsLoaded && errorLoadingAppointments\">Error checking appointments</span>\r\n    <span *ngIf=\"loadingAppointments\"><span\r\n      class=\"fa fa-spinner fa-spin\"></span>Checking appointments...</span>\r\n  </p>\r\n  <div *ngIf=\"appointmentsLoaded && !errorLoadingAppointments\">\r\n    <table *ngIf=\"appointments.length>0\" class=\"table table-stripped table-bordered\">\r\n      <thead>\r\n      <tr>\r\n        <th *ngFor=\"let appointment of appointments\" [ngClass]=\"{'active': appointment.date === today}\">\r\n          <span>{{appointment.date}}</span>\r\n        </th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr>\r\n        <td *ngFor=\"let appointment of appointments\"\r\n            [ngClass]=\"{'active': appointment.date === today}\">\r\n          <span><strong><em>{{appointment.count}}</em></strong></span>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`.appointments{margin-top:12px;font-size:12px;color:#999}.appointments p{padding-top:12px}.appointments th{border-bottom:0!important;color:#333}.appointments td span,.appointments th span{display:block}.appointments td.active,.appointments th.active{background-color:#3c8dbc;color:#fff!important;padding:0}.appointments td.active span,.appointments th.active span{padding:4px}.appointments span.fa{display:inline-block;margin-right:7px}`]\r\n})\r\nexport class AppointmentsOverviewComponent implements OnInit, OnChanges {\r\n  @Input() node: LeafNode;\r\n  showAppointments = false;\r\n  loadingAppointments = false;\r\n  errorLoadingAppointments = false;\r\n  appointmentsLoaded = false;\r\n  appointments: Array<any> = [];\r\n  today = '';\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.node.control.valueChanges.subscribe((v) => {\r\n      this.resetProperties();\r\n      const node = this.node;\r\n      if (node.question.extras.questionOptions.concept\r\n        && (node.question.extras.questionOptions.concept === 'a8a666ba-1350-11df-a1f1-0026b9348838'\r\n        || node.question.extras.questionOptions.concept === 'a89d2398-1350-11df-a1f1-0026b9348838')) {\r\n        // console.log('what change is here', this.showAppointments);\r\n        if (!this.showAppointments) {\r\n          this.loadingAppointments = true;\r\n          this.showAppointments = true;\r\n          let dataSource;\r\n          if (node.form && node.form.dataSourcesContainer.dataSources) {\r\n            dataSource = node.form.dataSourcesContainer.dataSources.monthlyScheduleResourceService;\r\n          }\r\n          const locationUuid = node.form.dataSourcesContainer.dataSources.userLocation.uuid;\r\n          if (dataSource && locationUuid) {\r\n            const startDate = moment(v).startOf('week').add(1, 'day').format('YYYY-MM-DD');\r\n            const endDate = moment(v).endOf('week').subtract(1, 'day').format('YYYY-MM-DD');\r\n            this.today = moment(v).format('DD-MM-YYYY');\r\n            // create 5 week days\r\n            const _data = [];\r\n            const programTypes = ['781d85b0-1359-11df-a1f1-0026b9348838', '781d897a-1359-11df-a1f1-0026b9348838',\r\n              '96047aaf-7ab3-45e9-be6a-b61810fe617d', 'c19aec66-1a40-4588-9b03-b6be55a8dd1d', 'f7793d42-11ac-4cfd-9b35-e0a21a7a7c31',\r\n              '334c9e98-173f-4454-a8ce-f80b20b7fdf0', '96ba279b-b23b-4e78-aba9-dcbd46a96b7b', '781d8880-1359-11df-a1f1-0026b9348838'];\r\n            const programTypeParams = programTypes.join();\r\n            for (let i = 1; i <= 5; i++) {\r\n              _data.push({\r\n                date: moment(v).startOf('week').add(i, 'day').format('DD-MM-YYYY'),\r\n                count: 0\r\n              });\r\n            }\r\n            dataSource.getMonthlySchedule({\r\n              startDate: startDate,\r\n              endDate: endDate,\r\n              limit: 5,\r\n              locationUuids: locationUuid,\r\n              programType: programTypeParams\r\n            }).subscribe((data) => {\r\n              this.appointmentsLoaded = true;\r\n              this.loadingAppointments = false;\r\n              _data.map((appointment, index) => {\r\n                appointment.count = data[index] !== undefined ? data[index].count.scheduled : 0;\r\n              });\r\n              this.appointments = _data;\r\n            }, (error) => {\r\n              this.loadingAppointments = false;\r\n              this.errorLoadingAppointments = true;\r\n              this.showAppointments = false;\r\n              console.error(error);\r\n            });\r\n          } else {\r\n            this.showAppointments = false;\r\n            this.errorLoadingAppointments = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  resetProperties() {\r\n    this.loadingAppointments = false;\r\n    this.appointmentsLoaded = false;\r\n    this.errorLoadingAppointments = false;\r\n    this.showAppointments = false;\r\n    this.appointments = [];\r\n    this.today = '';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GroupNode, LeafNode, ArrayNode, NodeBase } from '../form-entry/form-factory/form-node';\r\nimport * as _ from 'lodash';\r\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\r\nimport { Observable } from 'rxjs';\r\nimport { SelectOption } from '../form-entry/question-models/interfaces/select-option';\r\nconst comma = ', ';\r\nconst newLine = '\\n';\r\n\r\n@Injectable()\r\nexport class EncounterViewerService implements DataSource {\r\n\r\n    constructor() {}\r\n    public resolveSelectedValue(value: any): Observable<SelectOption> {\r\n        return;\r\n    }\r\n    public searchOptions(searchText: any): Observable<SelectOption[]> {\r\n        return;\r\n    }\r\n    public fileUpload(data: any): Observable<any> {\r\n        return;\r\n    }\r\n    public fetchFile(url: any): Observable<any> {\r\n        return;\r\n    }\r\n\r\n    public resolveSelectedValueFromSchema( answerUuid: string, schema: any): string {\r\n        let label;\r\n        if (schema.pages) {\r\n            _.forEach(schema.pages, (page) => {\r\n              const l = this.resolveSelectedValueFromSchema(answerUuid, page);\r\n              if (l) { label = l; }\r\n            }); }\r\n\r\n        if (schema.sections) {\r\n            _.forEach(schema.sections, (section) => {\r\n                const l = this.resolveSelectedValueFromSchema(answerUuid, section);\r\n                if (l) { label = l; }\r\n            });\r\n        }\r\n\r\n        if (schema.questions) {\r\n            _.forEach(schema.questions, (question) => {\r\n                 if (question.questions) {\r\n                    const l = this.resolveSelectedValueFromSchema(answerUuid, question);\r\n                    if (l) { label = l; }\r\n                } else {\r\n                    if (question.questionOptions.answers) {\r\n                    _.forEach(question.questionOptions.answers, (answer) => {\r\n                        if (answer.concept === answerUuid) {\r\n                            label = answer.label;\r\n                        }\r\n                    });\r\n                } else if (question.questionOptions.selectableOrders) {\r\n                    _.forEach(question.questionOptions.selectableOrders, (order) => {\r\n                        if (order.concept === answerUuid) { label = order.label; }\r\n                    });\r\n                }\r\n\r\n                }\r\n            });\r\n        }\r\n        return label;\r\n\r\n\r\n    }\r\n\r\n    public hasAnswer(node: NodeBase) {\r\n        let answered = false;\r\n        if (node.initialValue) {\r\n            answered = true;\r\n        }\r\n        return answered;\r\n    }\r\n\r\n    public questionsAnswered(node: any, answered?: boolean[]) {\r\n        const $answered = answered || [];\r\n        if (node.question.renderingType === 'page') {\r\n            _.forEach(node.children, (childNode: any) => {\r\n                this.questionsAnswered(childNode, $answered); });\r\n\r\n        } else if (node.question.renderingType === 'section') {\r\n            _.forEach(node.children, (childNode) => {\r\n                if (childNode.question.renderingType === 'group') {\r\n                   _.forEach(childNode.children, (child) => {\r\n                       const ans = this.questionsAnswered(child, $answered);\r\n                       if (ans) { $answered.push(ans); }\r\n                   });\r\n                } else if (this.hasAnswer(childNode)) { $answered.push(true); }\r\n            });\r\n        } else { return this.hasAnswer(node); }\r\n\r\n        if ($answered.length > 0) {return true; } else { return false; }\r\n    }\r\n\r\n\r\n    public isDate(val: any) {\r\n        if (Date.parse(val)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    public convertTime(unixTimestamp: number) {\r\n        const a = new Date(unixTimestamp);\r\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May',\r\n                        'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n        const year = a.getFullYear();\r\n        const month = months[a.getMonth()];\r\n        const date = a.getDate();\r\n        const hour = a.getHours();\r\n        const min = a.getMinutes();\r\n        const sec = a.getSeconds();\r\n        const suffix = hour < 12 ? 'AM' : 'PM';\r\n        let time;\r\n        if (hour === 0 && min === 0) {\r\n            time = date + ' ' + month + ' ' + year;\r\n        } else {\r\n            time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + suffix + ' (EAT)';\r\n        }\r\n        return time;\r\n\r\n    }\r\n}\r\n","import { Component, OnInit, Input, Inject } from '@angular/core';\r\nimport { NodeBase, GroupNode, LeafNode } from '../../form-entry/form-factory/form-node';\r\nimport { QuestionBase } from '../../form-entry/question-models/question-base';\r\nimport * as _ from 'lodash';\r\n\r\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\r\nimport { DataSources } from '../../form-entry/data-sources/data-sources';\r\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\r\n\r\nimport { EncounterViewerService } from '../encounter-viewer.service';\r\n\r\n@Component({\r\n    selector: 'encounter-viewer',\r\n    template: `<div class=\"viewer\">\r\n\r\n  <div *ngIf=\"rootNode.question.renderingType === 'form'\" class=\"form\">\r\n    <div *ngFor=\"let question of rootNode.question.questions; let i = index;\">\r\n      <div *ngIf=\"questionsAnswered(rootNode.children[question.key])\">\r\n        <div [attr.id]=\"'page'+i\" class=\"panel panel-default\">\r\n          <p class=\"page-label panel-heading text-primary\">{{question.label}}</p>\r\n          <div class=\"panel-body\">\r\n            <encounter-viewer [node]=\"rootNode.children[question.key]\" [schema]=\"_schema\" [parentComponent]=\"this\" [parentGroup]=\"rootNode.control\"></encounter-viewer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"rootNode.question.renderingType === 'page'\" class=\"page\">\r\n    <encounter-viewer *ngFor=\"let question of rootNode.question.questions\" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\"\r\n      [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\r\n  </div>\r\n\r\n\r\n  <div *ngIf=\"rootNode.question.renderingType === 'section'&& questionsAnswered(rootNode)\"\r\n    class=\"section\">\r\n    <div class=\"panel panel-primary\">\r\n      <p class=\"panel-heading section-label\">{{ rootNode.question.label }}</p>\r\n    </div>\r\n    <div *ngFor=\"let question of rootNode.question.questions\">\r\n      <encounter-viewer [node]=\"rootNode.children[question.key]\" [parentComponent]=\"this\" [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\r\n    </div>\r\n  </div>\r\n\r\n  <!--Leaf Controls-->\r\n  <div style=\"margin-left:10px;\">\r\n  <form *ngIf=\"rootNode.question.controlType === 0\" [formGroup]=\"parentGroup\">\r\n    <div *ngIf=\"rootNode.control.value\">\r\n    <div class=\"question-answer\">\r\n      <label *ngIf=\"rootNode.question.label\" [attr.for]=\"rootNode.question.key\" style=\"font-weight:400;\">\r\n          {{ rootNode.question.label }}\r\n      </label>\r\n      <span *ngIf=\"checkForColon(rootNode.question.label)\">:</span>\r\n      <div [ngSwitch]=\"rootNode.question.renderingType\" style=\"display:inline-block; font-weight:bold;\">\r\n          <div *ngSwitchCase=\" 'file' \">\r\n            <file-preview [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"fileDataSource\"></file-preview>\r\n          </div>\r\n          <div *ngSwitchCase=\"'remote-select'\">\r\n            <remote-answer [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"remoteDataSource\"></remote-answer>\r\n          </div>\r\n          <div *ngSwitchDefault style=\"display:inline-block\">\r\n              <question-control [schema]=\"_schema\" [value]=\"rootNode.control.value\" [dataSource]=\"customDataSource\"></question-control>\r\n            </div>\r\n      </div>\r\n     \r\n    </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n  <!--Array Controls-->\r\n  <div *ngIf=\"rootNode.question.controlType === 1 && questionsAnswered(rootNode)\">\r\n    <div [ngSwitch]=\"rootNode.question.renderingType\">\r\n      <div *ngSwitchCase=\" 'repeating' \">\r\n        <div [ngSwitch]=\"rootNode.question.extras.type\">\r\n          <div *ngSwitchCase=\"'testOrder'\">\r\n            <label>{{rootNode.question.label}}:</label>\r\n            <div *ngFor=\"let child of rootNode.children; let i=index \">\r\n              <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\r\n                \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\r\n            </div>\r\n          </div>\r\n          \r\n          <div *ngSwitchCase=\"'obsGroup'\">\r\n            <div *ngFor=\"let child of rootNode.children; let i=index \">\r\n              <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\r\n                \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"rootNode.question.controlType === 2\">\r\n\r\n    <!--GROUP-->\r\n    <div [ngSwitch]=\"rootNode.question.renderingType \">\r\n      <div *ngSwitchCase=\" 'group' \">\r\n        <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\r\n                  \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\r\n      </div>\r\n      <div *ngSwitchCase=\" 'field-set' \">\r\n        <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\r\n                  \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n  </div>\r\n`,\r\n    styles: [`.page-label{font-size:20px;font-weight:700}.section-label{font-size:18px;font-weight:500}.panel-primary{border:none!important}.question-answer{font-size:16px}.panel{margin-bottom:5px}div.section{margin-bottom:15px!important}.line-breaker{white-space:pre-line}hr{margin:10px}`],\r\n})\r\nexport class EncounterViewerComponent implements OnInit {\r\n    public rootNode: NodeBase;\r\n    public enc: any;\r\n    public fileDataSource: DataSource;\r\n    public remoteDataSource: DataSource;\r\n    public customDataSource: DataSource;\r\n    public _schema;\r\n    @Input() public parentGroup: AfeFormGroup;\r\n    @Input() public parentComponent: EncounterViewerComponent;\r\n    @Input() set node(rootNode: NodeBase) {\r\n        this.rootNode = rootNode;\r\n    }\r\n\r\n    @Input() public set schema(schema: any) {\r\n        this._schema = schema;\r\n    }\r\n\r\n    @Input() public set encounter(enc: any) {\r\n        this.enc = enc;\r\n    }\r\n    @Input() set form(form: any) {\r\n        this.rootNode = form.rootNode;\r\n        this._schema = form.schema;\r\n        console.log(this.getQuestionNodes(this.traverse(this.rootNode)));\r\n    }\r\n\r\n    constructor(\r\n        private encounterViewerService: EncounterViewerService,\r\n        private dataSources: DataSources) { }\r\n\r\n    getQuestionNodes(pages) {\r\n        const merged = [];\r\n        const arrays = [];\r\n        for (const page of pages) {\r\n            arrays.push(page.page);\r\n        }\r\n        return merged.concat.apply([], arrays);\r\n    }\r\n    public ngOnInit() {\r\n        if (this.rootNode) {\r\n\r\n        }\r\n        if (this.rootNode && this.rootNode.question.extras\r\n            && this.rootNode.question.renderingType === 'file') {\r\n            this.fileDataSource =\r\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\r\n        } else if (this.rootNode && this.rootNode.question.extras\r\n            && this.rootNode.question.renderingType === 'remote-select') {\r\n            this.remoteDataSource =\r\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\r\n        } else {\r\n            this.customDataSource = this.encounterViewerService;\r\n        }\r\n    }\r\n\r\n    public questionsAnswered(node: any) {\r\n        const $answered = this.encounterViewerService.questionsAnswered(node);\r\n        return $answered;\r\n    }\r\n\r\n    public questionAnswered(node: NodeBase) {\r\n        const answered = this.encounterViewerService.hasAnswer(node);\r\n        return answered;\r\n    }\r\n\r\n    public checkForColon(questionLabel: string) {\r\n        if (questionLabel.indexOf(':') === -1) { return true; } else { return false; }\r\n    }\r\n\r\n    traverse(o, type?) {\r\n        const questions = [];\r\n        if (o.children) {\r\n            if (o.children instanceof Array) {\r\n                const returned = this.repeatingGroup(o.children);\r\n                return returned;\r\n            }\r\n            if (o.children instanceof Object) {\r\n                for (const key in o.children) {\r\n                    if (o.children.hasOwnProperty(key)) {\r\n                        switch (o.children[key].question.renderingType) {\r\n                            case 'page':\r\n                                const page = this.traverse(o.children[key]);\r\n                                questions.push({ page: page });\r\n                                break;\r\n                            case 'section':\r\n                                const section = this.traverse(o.children[key]);\r\n                                questions.push({ section: section });\r\n                                break;\r\n                            case 'group':\r\n                                const qs = this.traverse(o.children[key]);\r\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: qs });\r\n                                break;\r\n                            case 'repeating':\r\n                                const rep = this.repeatingGroup(o.children[key].children);\r\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: rep });\r\n                                break;\r\n                            default:\r\n                                questions.push(o.children[key]);\r\n                                break;\r\n\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                console.log('Console.log', o);\r\n            }\r\n\r\n        }\r\n        return questions;\r\n    }\r\n\r\n    repeatingGroup(nodes) {\r\n        const toReturn = [];\r\n        for (const node of nodes) {\r\n            toReturn.push({ question: node.question, groupMembers: this.traverse(node) });\r\n        }\r\n        return toReturn;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Form } from '../form-entry/form-factory/form';\r\nimport { ObsValueAdapter } from '../form-entry/value-adapters/obs.adapter';\r\nimport { EncounterViewerService } from './encounter-viewer.service';\r\nimport { DataSources } from '../form-entry/data-sources/data-sources';\r\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\r\n\r\nimport { combineLatest, BehaviorSubject } from 'rxjs';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport * as moment_ from 'moment';\r\nimport * as _ from 'lodash';\r\nimport * as pdfMake from 'pdfmake/build/pdfmake.js';\r\nimport 'pdfmake/build/vfs_fonts.js';\r\nimport * as pdfFonts from 'pdfmake/build/vfs_fonts';\r\n\r\nconst moment = moment_;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class EncounterPdfViewerService {\r\n  private remoteDataSource: DataSource;\r\n  public error: boolean;\r\n  public errorMessage: string;\r\n  public showLoader: boolean;\r\n  public subscribedAnswers: any = {\r\n    questions: {\r\n      stack: []\r\n    },\r\n    answers: []\r\n  };\r\n\r\n  constructor(\r\n    private encounterViewerService: EncounterViewerService,\r\n    private obsValueAdapter: ObsValueAdapter,\r\n    private dataSources: DataSources\r\n  ) {}\r\n\r\n  getPages(pages: any, form: Form, remoteSelectsOnly?: boolean, remoteAns?: any): any[] {\r\n    const content = [];\r\n    let remoteQuestions = [];\r\n\r\n    for (const page of pages) {\r\n      if (remoteSelectsOnly) {\r\n        remoteQuestions = remoteQuestions.concat(this.getSections(page.page, form, false, remoteAns));\r\n      } else {\r\n        for (const question of form.rootNode.question.questions) {\r\n          if (page.label === form.rootNode.children[question.key].question.label &&\r\n            this.encounterViewerService.questionsAnswered(form.rootNode.children[question.key])) {\r\n            content.push({\r\n              style: 'tableExample',\r\n              table: {\r\n                widths: ['*'],\r\n                headerRows: 1,\r\n                keepWithHeaderRows: 1,\r\n                body: [\r\n                  [{ text: page.label, style: 'tableHeader' }],\r\n                  [\r\n                    {\r\n                      style: 'tableExample',\r\n                      table: {\r\n                        widths: ['*'],\r\n                        body: this.getSections(page.page, form, true, remoteAns)\r\n                      },\r\n                      layout: 'noBorders',\r\n                      margin: [5, 0, 0, 0]\r\n                    }\r\n                  ]\r\n                ]\r\n              },\r\n              layout: {\r\n                hLineWidth: function(i, node) {\r\n                  return (i === 0 || i === node.table.body.length) ? 0.5 : 0.5;\r\n                },\r\n                vLineWidth: function(i, node) {\r\n                  return (i === 0 || i === node.table.widths.length) ? 0.5 : 0.5;\r\n                },\r\n                hLineColor: function(i, node) {\r\n                  return (i === 0 || i === node.table.body.length) ? '#ddd' : '#ddd';\r\n                },\r\n                vLineColor: function(i, node) {\r\n                  return (i === 0 || i === node.table.body.length) ? '#ddd' : '#ddd';\r\n                }\r\n              }\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return remoteSelectsOnly ? remoteQuestions : content;\r\n  }\r\n\r\n  getSections(sections: any, form: Form, resolve: any, remoteAns: any): any[] {\r\n    const content = [];\r\n    const answeredSections = [];\r\n    let questions: Array<Observable<any>> = [];\r\n\r\n    sections.map(s => {\r\n      if (this.encounterViewerService.questionsAnswered(s.node)) {\r\n        answeredSections.push(s);\r\n      }\r\n    });\r\n\r\n    for (const section of answeredSections) {\r\n      questions = questions.concat(this.getRemoteSectionData(section.section));\r\n    }\r\n\r\n    if (resolve && remoteAns) {\r\n      for (const section of answeredSections) {\r\n        content.push([\r\n          {\r\n            table: {\r\n              widths: ['*'],\r\n              body: [\r\n                [{ text: section.label, style: 'tableSubheader' }],\r\n                [ this.getSectionData(section.section, remoteAns, form) ]\r\n              ]\r\n            },\r\n            layout: 'noBorders'\r\n          }\r\n        ]);\r\n      }\r\n      return content;\r\n    } else {\r\n      return questions;\r\n    }\r\n  }\r\n\r\n  private appendResolvedAnswer(resolvedAnswer: any, questions: any, node?: any) {\r\n    if (resolvedAnswer) {\r\n      questions.stack.push({\r\n        text: [\r\n          `${(node) ? node.question.label : 'Question label' }${\r\n            (node) ? (node.question.label.indexOf(':') > 1 ? '' : ':') : ''\r\n          } `,\r\n          { text: `${resolvedAnswer}`, bold: true }\r\n        ], style: 'answers'\r\n      });\r\n    }\r\n  }\r\n\r\n  // get remote selects only\r\n  getRemoteSectionData(section: any): any {\r\n    const questions: Array<Observable<any>> = [];\r\n    this.subscribedAnswers.questions.stack = [];\r\n\r\n    for (const node of section) {\r\n      if (node.question.renderingType === 'remote-select') {\r\n        this.remoteDataSource = this.dataSources.dataSources[node.question.dataSource];\r\n        if (node.control.value !== '') {\r\n          if (this.remoteDataSource) {\r\n            questions.push(this.remoteDataSource.resolveSelectedValue(node.control.value));\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return questions;\r\n  }\r\n\r\n  // merge remote selects\r\n  getSectionData(section: any, remoteAns: any[], form: Form): any {\r\n    const questions = {\r\n      stack: []\r\n    };\r\n\r\n    let resolvedAnswer = '';\r\n\r\n    for (const node of section) {\r\n      switch (node.question.renderingType) {\r\n        case 'group':\r\n          if (node.groupMembers) {\r\n            questions.stack.push(this.getSectionData(node.groupMembers, remoteAns, form));\r\n          }\r\n          break;\r\n\r\n        case 'field-set':\r\n          if (node.children) {\r\n            const groupMembers = [];\r\n            const result = Object.keys(node.children).map((key) => node.children[key]);\r\n\r\n            if (result) {\r\n              groupMembers.push(result);\r\n              questions.stack.push(this.getSectionData(groupMembers[0], remoteAns, form));\r\n            }\r\n          }\r\n          break;\r\n\r\n        case 'repeating':\r\n          if (node.groupMembers) {\r\n            questions.stack.push(this.getSectionData(node.groupMembers, remoteAns, form));\r\n          }\r\n          break;\r\n\r\n        case 'remote-select':\r\n          this.remoteDataSource = this.dataSources.dataSources[node.question.dataSource];\r\n          for (const ans of remoteAns) {\r\n            if (ans.value === node.control.value) {\r\n              this.appendResolvedAnswer(ans.label, questions, node);\r\n            }\r\n          }\r\n          break;\r\n\r\n        default:\r\n          const answer = node.control.value;\r\n          if (answer) {\r\n            resolvedAnswer = this.resolveValue(answer, form);\r\n            this.appendResolvedAnswer(resolvedAnswer, questions, node);\r\n          }\r\n      }\r\n    }\r\n\r\n    return questions;\r\n  }\r\n\r\n  resolveValue(answer: any, form: Form, arrayElement?: boolean): any {\r\n    if (answer !== '') {\r\n      if (this.isUuid(answer)) {\r\n        const val = this.encounterViewerService.resolveSelectedValueFromSchema(answer, form.schema);\r\n        if (!arrayElement) {\r\n          if (val) {\r\n            return val.toUpperCase();\r\n          } else {\r\n            return answer;\r\n          }\r\n        } else {\r\n          return val;\r\n        }\r\n      } else if (_.isArray(answer)) {\r\n        const arr = [];\r\n        _.forEach(answer, elem => {\r\n          arr.push(this.resolveValue(elem, form, true));\r\n        });\r\n        return arr.toString();\r\n      } else if (this.isDate(answer)) {\r\n        if (!arrayElement) {\r\n          return this.encounterViewerService.convertTime(answer);\r\n        } else {\r\n          return this.encounterViewerService.convertTime(answer);\r\n        }\r\n      } else if (typeof answer === 'object') {\r\n        const values = [];\r\n        const result = Object.keys(answer).map((key) => [key, answer[key]]);\r\n\r\n        values.push(result);\r\n        return values;\r\n      } else {\r\n       return answer;\r\n      }\r\n    }\r\n  }\r\n\r\n  generatePdfDefinition(form: Form): any {\r\n    const docDefinition$ = new BehaviorSubject<any>({});\r\n    const remoteSelects = this.getPages((this.obsValueAdapter.traverse(form.rootNode)), form, true);\r\n\r\n    combineLatest(remoteSelects).subscribe(remoteAns => {\r\n      if (remoteAns) {\r\n        const docDefinition = {\r\n          pageSize: 'A4',\r\n          content: this.getPages(this.obsValueAdapter.traverse(form.rootNode), form, false, remoteAns),\r\n          styles: {\r\n            answers: {\r\n              fontSize: 8\r\n            },\r\n            banner: {\r\n              fontSize: 9,\r\n              bold: true,\r\n              margin: [50, 15, 30, 0]\r\n            },\r\n            bannerItem: {\r\n              margin: [2, 2, 2, 2]\r\n            },\r\n            bannerLabel: {\r\n              color: '#2f4f4f'\r\n            },\r\n            confidential: {\r\n              color: 'red',\r\n              fontSize: 8,\r\n              bold: true,\r\n              margin: [60, 0, 0, 0]\r\n            },\r\n            footer: {\r\n              alignment: 'center',\r\n              fontSize: 8,\r\n              bold: true\r\n            },\r\n            header: {\r\n              fontSize: 9,\r\n              bold: true,\r\n              margin: [5, 5, 5, 5]\r\n            },\r\n            pageNumber: {\r\n              color: '#2f4f4f',\r\n              fontSize: 6\r\n            },\r\n            tableExample: {\r\n              fontSize: 10,\r\n              margin: [5, 0, 0, 5]\r\n            },\r\n            tableHeader: {\r\n              fillColor: '#f5f5f5',\r\n              width: ['100%'],\r\n              borderColor: '#333',\r\n              fontSize: 9,\r\n              bold: true,\r\n              margin: [5, 0, 5, 0]\r\n            },\r\n            tableSubheader: {\r\n              fillColor: '#337ab7',\r\n              width: ['100%'],\r\n              fontSize: 9,\r\n              color: 'white',\r\n              margin: [5, 0, 5, 0]\r\n            },\r\n            timestamp: {\r\n              bold: true,\r\n              color: '#2f4f4f'\r\n            }\r\n          },\r\n          defaultStyle: {\r\n            fontSize: 7\r\n          }\r\n        };\r\n        docDefinition$.next(docDefinition);\r\n      }\r\n    });\r\n\r\n    return docDefinition$;\r\n  }\r\n\r\n  displayPdf(form) {\r\n    const pdf = pdfMake;\r\n    let patient;\r\n    pdf.vfs = pdfFonts.pdfMake.vfs;\r\n\r\n    if (form.dataSourcesContainer.dataSources._dataSources) {\r\n      patient = form.dataSourcesContainer.dataSources._dataSources['patientInfo'];\r\n    }\r\n\r\n    this.generatePdfDefinition(form).subscribe(docDefinition => {\r\n      if (!(_.isEmpty(docDefinition))) {\r\n        if (typeof patient !== 'undefined') {\r\n          const banner = [];\r\n\r\n          if (patient.name) {\r\n            banner.push({\r\n              text: [\r\n                { text: 'Name: ', style: 'bannerLabel' },\r\n                { text: `${this.titleize(patient.name)}` }\r\n              ],\r\n              style: 'bannerItem'\r\n            });\r\n          }\r\n\r\n          if (patient.nid) {\r\n            banner.push({\r\n              text: [\r\n                { text: 'ID: ', style: 'bannerLabel' },\r\n                { text: `${patient.nid}` }\r\n              ],\r\n              style: 'bannerItem'\r\n            });\r\n          }\r\n\r\n          if (patient.birthdate) {\r\n            banner.push({\r\n              text: [\r\n                { text: 'DOB: ', style: 'bannerLabel' },\r\n                { text: `${moment(patient.birthdate).format('l')} (${patient.age} yo)` }\r\n              ],\r\n              style: 'bannerItem'\r\n            });\r\n          }\r\n\r\n          if (patient.mui) {\r\n            banner.push({\r\n              text: [\r\n                { text: 'MUI: ', style: 'bannerLabel' },\r\n                { text: `${patient.mui}` }\r\n              ],\r\n              style: 'bannerItem'\r\n            });\r\n          }\r\n\r\n          if (patient.mhn) {\r\n            banner.push({\r\n              text: [\r\n                { text: 'MTRH No: ', style: 'bannerLabel' },\r\n                { text: `${patient.mhn}` }\r\n              ],\r\n              style: 'bannerItem'\r\n            });\r\n          }\r\n\r\n          docDefinition.header = {\r\n            style: 'banner',\r\n            table: {\r\n              body: [ banner ]\r\n            },\r\n            layout: 'noBorders'\r\n          };\r\n        }\r\n\r\n        docDefinition.footer = (currentPage, pageCount) => {\r\n          return \t{\r\n            style: 'footer',\r\n            widths: ['*', 'auto'],\r\n            table: {\r\n              body: [\r\n                [\r\n                  {\r\n                    text: 'Note: Confidentiality is one of the core duties of all medical practitioners. '\r\n                      + 'Patients\\' personal health information should be kept private.', style: 'confidential'\r\n                  }, ''\r\n                ],\r\n                [\r\n                  { text: `Generated on ${new Date().toUTCString()}`, style: 'timestamp' },\r\n                  { text: `${currentPage.toString()} of ${pageCount}`, style: 'pageNumber' }\r\n                ],\r\n              ]\r\n            },\r\n            layout: 'noBorders'\r\n          };\r\n        };\r\n\r\n        const win = window.open('', '_blank');\r\n        pdf.createPdf(docDefinition).open({}, win);\r\n      }\r\n    }, (error) => {\r\n      console.log('Error: ', error);\r\n    });\r\n  }\r\n\r\n  isDate(val: any) {\r\n    return moment(val, moment.ISO_8601, true).isValid();\r\n  }\r\n\r\n  isUuid(value: string) {\r\n    return (value.length === 36 && value.indexOf(' ') === -1 && value.indexOf('.') === -1);\r\n  }\r\n\r\n  titleize(str) {\r\n    return str.replace(/\\w\\S*/g, s => s.charAt(0).toUpperCase() + s.substr(1).toLowerCase());\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Form } from '../../form-entry/form-factory/form';\r\nimport { NodeBase } from '../../form-entry/form-factory/form-node';\r\nimport { EncounterAdapter } from '../../form-entry/value-adapters/encounter.adapter';\r\n\r\nimport { EncounterPdfViewerService } from '../encounter-pdf-viewer.service';\r\n\r\n@Component({\r\n    selector: 'encounter-renderer',\r\n    template: `<a type=\"button\" style=\"display: block; font-size: 28px; cursor: pointer\" class=\"text-right\" (click)=\"displayPdf()\">\r\n  <span class=\"glyphicon text-primary glyphicon-print\"></span>\r\n</a>\r\n<encounter-viewer class=\"card\" [form]=\"$form\" [encounter]=\"$enc\"></encounter-viewer>`,\r\n    styles: [`.card{box-shadow:0 2px 5px 0 rgba(0,0,0,.16),0 2px 10px 0 rgba(0,0,0,.12)}`]\r\n})\r\nexport class EncounterContainerComponent implements OnInit {\r\n    public $form: Form;\r\n    public $enc: any;\r\n\r\n    @Input() public set form(form) {\r\n        this.$form = form;\r\n    }\r\n    @Input() public set encounter(enc) {\r\n        this.$enc = enc;\r\n    }\r\n\r\n    constructor(\r\n        private encAdapter: EncounterAdapter,\r\n        private encounterPdfViewerService: EncounterPdfViewerService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    displayPdf() {\r\n        this.encounterPdfViewerService.displayPdf(this.$form);\r\n    }\r\n}\r\n","import {Component, OnInit, Input} from '@angular/core';\r\nimport { EncounterViewerService } from '../encounter-viewer.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'question-control',\r\n    styles: [`input{border:none;box-shadow:none;color:#000;background:#fff!important;padding-top:23px;display:block;position:relative}`],\r\n    template: `<div>\r\n    {{innerValue}}\r\n</div>`,\r\n  })\r\nexport class QuestionControlComponent implements OnInit {\r\n    @Input() public set schema(schema: any) {\r\n      this._schema = schema;\r\n    }\r\n    @Input() public set value(value) {\r\n      this._value = value;\r\n    }\r\n    @Input() public set dataSource(dataSource: any) {\r\n      this._dataSource = dataSource;\r\n    }\r\n    // The internal data model\r\n    public innerValue: any = '';\r\n    private _value: any;\r\n    private _schema: any;\r\n    private _dataSource: EncounterViewerService;\r\n    constructor() {}\r\n\r\n    ngOnInit() {\r\n      this.writeValue(this._value);\r\n    }\r\n    public isUuid(value: string) {\r\n      if (value.length === 36 && value.indexOf(' ') === -1 && value.indexOf('.') === -1) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    // Current time string.\r\n\r\n    public writeValue(v: any, arrayElement?: boolean) {\r\n      if (v !== this.innerValue) {\r\n          if (this.isUuid(v)) {\r\n            if (!arrayElement) {\r\n              const val =\r\n              this._dataSource.resolveSelectedValueFromSchema(v, this._schema);\r\n              if (val) { this.innerValue = val.toUpperCase(); } else { this.innerValue = v; }\r\n            } else { return this._dataSource.resolveSelectedValueFromSchema(v, this._schema); }\r\n          } else if (_.isArray(v)) {\r\n            const arr = [];\r\n            _.forEach(v, (el) => {\r\n              arr.push(this.writeValue(el, true));\r\n            });\r\n            this.innerValue = arr;\r\n          } else if (this.isDate(v)) {\r\n              if (!arrayElement) { this.innerValue = this._dataSource.convertTime(v); } else {\r\n                  return  this._dataSource.convertTime(v);\r\n              }\r\n          } else {\r\n              if (!arrayElement) { this.innerValue = v; } else {\r\n                return v;\r\n              }\r\n          }\r\n\r\n      }\r\n    }\r\n\r\n    public isDate(str: string) {\r\n      return this._dataSource.isDate(str) && !_.isNumber(str);\r\n    }\r\n\r\n  }\r\n","import {\r\n    Component, OnInit, Input, forwardRef,\r\n    OnChanges, Output, EventEmitter\r\n  } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { EncounterViewerService } from '../encounter-viewer.service';\r\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\r\nconst noop = () => {};\r\n\r\n@Component({\r\n    selector: 'file-preview',\r\n    styles: [``],\r\n    template: `<div *ngIf=\"innerValue\">\r\n              <img class=\"img-responsive\"\r\n                [src]=\"innerValue | secure:this._dataSource.fetchFile\" alt=\"image\" />\r\n                </div>`,\r\n    providers: [\r\n      {\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => FilePreviewComponent),\r\n        multi: true\r\n      }\r\n    ]\r\n  })\r\nexport class FilePreviewComponent implements ControlValueAccessor {\r\n    @Input() public source: any;\r\n    public innerValue = null;\r\n    public _dataSource: DataSource;\r\n    @Input()\r\n    public get dataSource(): DataSource {\r\n        return this._dataSource;\r\n    }\r\n    public set dataSource(v: DataSource) {\r\n        this._dataSource = v;\r\n    }\r\n    // Placeholders for the callbacks which are later providesd\r\n    // by the Control Value Accessor\r\n    private onTouchedCallback: () => void = noop;\r\n    private onChangeCallback: (_: any) => void = noop;\r\n    constructor(private encounterService: EncounterViewerService) {}\r\n    // get accessor\r\n    get value(): any {\r\n      return this.innerValue;\r\n    }\r\n\r\n    // set accessor including call the onchange callback\r\n    set value(v: any) {\r\n      if (v !== this.innerValue) {\r\n        this.innerValue = v;\r\n      }\r\n    }\r\n    // Current time string.\r\n\r\n    public writeValue(v: any) {\r\n      if (v !== this.innerValue) {\r\n          this.innerValue = v;\r\n      }\r\n    }\r\n\r\n    // From ControlValueAccessor interface\r\n    public registerOnChange(fn: any) {\r\n      this.onChangeCallback = fn;\r\n    }\r\n\r\n    // From ControlValueAccessor interface\r\n    public registerOnTouched(fn: any) {\r\n      this.onTouchedCallback = fn;\r\n    }\r\n\r\n    public onBlur() {\r\n      this.onTouchedCallback();\r\n    }\r\n\r\n    public onChange(event: any) {\r\n      // const files = event.srcElement.files;\r\n      // const fileToLoad = files[0];\r\n\r\n      // const fileReader = new FileReader();\r\n\r\n      // fileReader.onload = (fileLoadedEvent) => {\r\n      //   const data = fileReader.result;\r\n      //   const fileType = data.substring('data:image/'.length, data.indexOf(';base64'));\r\n      //   const payload = {\r\n      //     data,\r\n      //     extension: fileType\r\n      //   };\r\n      // };\r\n\r\n      // fileReader.readAsDataURL(fileToLoad);\r\n    }\r\n  }\r\n","import {\r\n    Component, OnInit, Input, forwardRef,\r\n    OnChanges, Output, EventEmitter\r\n  } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\r\nconst noop = () => {};\r\n\r\n@Component({\r\n    selector: 'remote-answer',\r\n    styles: [],\r\n    template: `\r\n    <div *ngIf=\"innerValue\">\r\n      {{innerValue}}\r\n      </div>\r\n`,\r\n    providers: [\r\n      {\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => RemoteAnswerComponent),\r\n        multi: true\r\n      }\r\n    ]\r\n  })\r\nexport class RemoteAnswerComponent implements ControlValueAccessor {\r\n    @Input() public source: any;\r\n    public innerValue = null;\r\n    private _dataSource: DataSource;\r\n    @Input()\r\n    public get dataSource(): DataSource {\r\n        return this._dataSource;\r\n    }\r\n    public set dataSource(v: DataSource) {\r\n        this._dataSource = v;\r\n    }\r\n    // Placeholders for the callbacks which are later providesd\r\n    // by the Control Value Accessor\r\n    private onTouchedCallback: () => void = noop;\r\n    private onChangeCallback: (_: any) => void = noop;\r\n    constructor() {}\r\n    // get accessor\r\n    get value(): any {\r\n      return this.innerValue;\r\n    }\r\n\r\n    // set accessor including call the onchange callback\r\n    set value(v: any) {\r\n      if (v !== this.innerValue) {\r\n        this.innerValue = v;\r\n      }\r\n    }\r\n    // Current time string.\r\n\r\n    public writeValue(v: any) {\r\n      if (v !== this.innerValue) {\r\n        if (this._dataSource) {\r\n          this._dataSource.resolveSelectedValue(v).subscribe((ans) => {\r\n            this.innerValue = ans.label;\r\n        });\r\n        } else {\r\n          this.innerValue = v;\r\n        }\r\n      }\r\n    }\r\n\r\n    // From ControlValueAccessor interface\r\n    public registerOnChange(fn: any) {\r\n      this.onChangeCallback = fn;\r\n    }\r\n\r\n    // From ControlValueAccessor interface\r\n    public registerOnTouched(fn: any) {\r\n      this.onTouchedCallback = fn;\r\n    }\r\n\r\n    public onBlur() {\r\n      this.onTouchedCallback();\r\n    }\r\n\r\n    public onChange(event: any) {\r\n    }\r\n  }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EncounterViewerComponent } from './encounter-view/encounter-viewer.component';\r\nimport { EncounterContainerComponent } from './encounter-container/encounter-container.component';\r\nimport { EncounterViewerService } from './encounter-viewer.service';\r\nimport { EncounterPdfViewerService } from './encounter-pdf-viewer.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { QuestionControlComponent } from './display-controls/question-control.component';\r\nimport { FilePreviewComponent } from './display-controls/file-preview.component';\r\nimport { RemoteAnswerComponent } from './display-controls/remote-answer.component';\r\nimport { HttpModule } from '@angular/http';\r\nimport { SharedModule } from '../shared.module';\r\n@NgModule({\r\n    declarations: [\r\n        EncounterViewerComponent,\r\n        EncounterContainerComponent,\r\n        QuestionControlComponent,\r\n        FilePreviewComponent,\r\n        RemoteAnswerComponent\r\n    ],\r\n    imports: [\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        CommonModule,\r\n        HttpModule,\r\n        SharedModule\r\n    ],\r\n    providers: [\r\n        EncounterViewerService,\r\n        EncounterPdfViewerService\r\n    ],\r\n    exports: [\r\n        EncounterContainerComponent,\r\n        HttpModule\r\n    ],\r\n})\r\nexport class EncounterViewerModule {}\r\n","import { Component, Input, forwardRef, OnInit, AfterViewInit } from '@angular/core';\r\n\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'checkbox',\r\n  template: `<div *ngFor=\"let option of options; let i = index;\">\r\n    <label class=\"form-control no-border\">\r\n        <input type=\"checkbox\" id=\"i + 'id'\" (change)=\"selectOpt(option, $event)\" value=\"option.value\">\r\n        {{ option.label }}\r\n    </label>\r\n</div>`,\r\n  providers: [\r\n    {\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => CheckboxControlComponent),\r\n        multi: true,\r\n    }],\r\n  styles: [`\r\n  .no-border {\r\n    border: 0;\r\n    box-shadow: none;\r\n  }`]\r\n})\r\nexport class CheckboxControlComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input() public options;\r\n\r\n  public _value: Array<any> = [];\r\n\r\n  public ngOnInit() {}\r\n\r\n  public ngAfterViewInit() {}\r\n\r\n  public writeValue(value: any) {\r\n    this.value = value;\r\n  }\r\n\r\n  public registerOnChange(fn: (_: any) => void) {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn: () => void) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  get value(): any {\r\n    if (this._value.length === 0) {\r\n        return '';\r\n    } else {\r\n        return this._value || this._value[0];\r\n    }\r\n  }\r\n\r\n  set value(v: any) {\r\n    if (typeof v === 'undefined' || v === null || v === '') {\r\n        v = [];\r\n    } else if (typeof v === 'string') {\r\n        v = [v];\r\n    } else if (!Array.isArray(v)) {\r\n        throw new TypeError('Value must be a string or an array.');\r\n    }\r\n  }\r\n\r\n  public selectOpt(option, event) {\r\n    if (event.target.checked) {\r\n      this._value.push(option.value);\r\n    } else {\r\n      this.options.forEach((o) => {\r\n        if (o.value === option.value) {\r\n          this._value.splice(o, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.onChange(this.value);\r\n  }\r\n\r\n  private onChange = ( change: any) => { };\r\n  private onTouched = () => { };\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CheckboxControlComponent } from './checkbox.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CheckboxControlComponent\r\n    ],\r\n    exports: [\r\n        CheckboxControlComponent\r\n    ],\r\n    imports: [CommonModule, FormsModule]\r\n})\r\nexport class CheckboxModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { MatTabsModule , MatIconModule , MatCardModule} from '@angular/material';\r\n// import { NoopAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { DebugModeService } from '../form-entry/services/debug-mode.service';\r\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\r\nimport { FormErrorsService } from './services/form-errors.service';\r\nimport { FormControlService } from './form-factory/form-control.service';\r\nimport { ValidationFactory } from './form-factory/validation.factory';\r\nimport { FormRendererComponent } from './form-renderer/form-renderer.component';\r\nimport { ErrorRendererComponent } from './error-renderer/error-renderer.component';\r\nimport { HistoricalValueDirective } from './directives/historical-value-directive';\r\nimport { HistoricalFieldHelperService } from './helpers/historical-field-helper-service';\r\nimport { SelectModule } from '../components/select/select.module';\r\n// import { NgSelectModule } from '@ng-select/ng-select';\r\nimport { RemoteFileUploadModule } from '../components/file-upload/file-upload.module';\r\nimport { DateTimePickerModule } from '../components/date-time-picker/date-time-picker.module';\r\nimport { NgxDateTimePickerModule } from '../components/ngx-date-time-picker/ngx-date-time-picker.module';\r\nimport { AfeNgSelectComponent } from '../components/afe-ng-select.component';\r\nimport { HidersDisablersFactory } from './form-factory/hiders-disablers.factory';\r\nimport { AlertsFactory } from './form-factory/show-messages.factory';\r\nimport { ExpressionRunner } from './expression-runner/expression-runner';\r\nimport { JsExpressionHelper } from './helpers/js-expression-helper';\r\nimport { FormSchemaCompiler } from './services/form-schema-compiler.service';\r\nimport { FormFactory } from './form-factory/form.factory';\r\nimport { QuestionFactory } from './form-factory/question.factory';\r\nimport { ControlRelationsFactory } from './form-factory/control-relations.factory';\r\nimport { EncounterAdapter } from './value-adapters/encounter.adapter';\r\nimport { PersonAttribuAdapter } from './value-adapters/person-attribute.adapter';\r\nimport { OrderValueAdapter } from './value-adapters/order.adapter';\r\nimport { ObsAdapterHelper } from './value-adapters/obs-adapter-helper';\r\nimport { ObsValueAdapter } from './value-adapters/obs.adapter';\r\nimport { RemoteSelectModule } from '../components/remote-select/remote-select.module';\r\nimport { AppointmentsOverviewComponent} from '../components/appointments-overview/appointments-overview.component';\r\nimport { EncounterViewerModule } from '../encounter-viewer/encounter-viewer.module';\r\nimport { CheckboxModule } from '../components/check-box/checkbox.module';\r\nimport { SharedModule } from '../shared.module';\r\nimport { TimeAgoPipe } from 'time-ago-pipe';\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule,\r\n        ReactiveFormsModule,\r\n        CollapseModule,\r\n        // NgSelectModule,\r\n        SelectModule,\r\n        DateTimePickerModule,\r\n        RemoteSelectModule,\r\n        // NoopAnimationsModule,\r\n        RemoteFileUploadModule,\r\n        EncounterViewerModule,\r\n        CheckboxModule,\r\n        MatIconModule,\r\n        MatTabsModule,\r\n        MatCardModule,\r\n        NgxDateTimePickerModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        FormRendererComponent,\r\n        AfeNgSelectComponent,\r\n        AppointmentsOverviewComponent,\r\n        HistoricalValueDirective,\r\n        ErrorRendererComponent,\r\n        TimeAgoPipe\r\n    ],\r\n    providers: [\r\n        FormBuilder,\r\n        FormControlService,\r\n        FormErrorsService,\r\n        ValidationFactory,\r\n        HidersDisablersFactory,\r\n        AlertsFactory,\r\n        ExpressionRunner,\r\n        JsExpressionHelper,\r\n        HistoricalFieldHelperService,\r\n        FormSchemaCompiler,\r\n        FormFactory,\r\n        QuestionFactory,\r\n        ValidationFactory,\r\n        ControlRelationsFactory,\r\n        ObsAdapterHelper,\r\n        ObsValueAdapter,\r\n        EncounterAdapter,\r\n        PersonAttribuAdapter,\r\n        OrderValueAdapter,\r\n        DebugModeService\r\n    ],\r\n    exports: [FormRendererComponent, AfeNgSelectComponent,\r\n        ErrorRendererComponent, DateTimePickerModule, EncounterViewerModule , NgxDateTimePickerModule]\r\n})\r\nexport class FormEntryModule {\r\n\r\n}\r\n","\r\nexport class Pair {\r\n\r\n  key: string;\r\n\r\n  value: any;\r\n\r\n  constructor(key: string, value: any) {\r\n    this.key = key;\r\n    this.value = value;\r\n  }\r\n}\r\n","export enum RenderingType {\r\n    Form,\r\n    Page,\r\n    Section,\r\n    Select,\r\n    DropDown\r\n}\r\n"]}